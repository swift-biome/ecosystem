{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":3},"generator":"Swift version 5.7-dev (LLVM cd2992b90c95d01, Swift ab85807f0646caa)"},"module":{"name":"_Concurrency","platform":{"architecture":"x86_64","environment":"gnu","vendor":"unknown","operatingSystem":{"name":"linux","minimumVersion":{"major":0,"minor":0,"patch":0}}}},"symbols":[{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA32AsyncThrowingPrefixWhileSequenceVyxGSb7ElementQzYaKc_tKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given error-throwing"},{"text":"predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false` or throws an error."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through values less than `8`, but throws an"},{"text":"error when it receives a value that's divisible by `5`:"},{"text":""},{"text":"    do {"},{"text":"        let stream = try Counter(howHigh: 10)"},{"text":"            .prefix {"},{"text":"                if $0 % 5 == 0 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return $0 < 8"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print(\"\\(number) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: 1  2  3  4  Error: MyError()"},{"text":""},{"text":"- Parameter predicate: A error-throwing closure that takes an element of"},{"text":"  the asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the modified sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate. If the predicate"},{"text":"  throws an error, the sequence contains only values produced prior to"},{"text":"  the error."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP2geoiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority",">=(_:_:)"],"names":{"title":">=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than or equal to that of the second argument."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5Error_pRs_rlE11runDetached8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntFZ","interfaceLanguage":"swift"},"pathComponents":["Task","runDetached(priority:operation:)"],"names":{"title":"runDetached(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"runDetached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"runDetached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`Task.runDetached` was replaced by `Task.detached` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:ScS12ContinuationV15BufferingPolicyO","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","BufferingPolicy"],"names":{"title":"AsyncStream.Continuation.BufferingPolicy","navigator":[{"kind":"identifier","spelling":"BufferingPolicy"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"BufferingPolicy"}]},"docComment":{"lines":[{"text":"A strategy that handles exhaustion of a bufferâ€™s capacity."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"BufferingPolicy"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence"],"names":{"title":"AsyncDropWhileSequence","navigator":[{"kind":"identifier","spelling":"AsyncDropWhileSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncDropWhileSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence which omits elements from the base sequence until a"},{"text":"given closure returns false, after which it passes through all remaining"},{"text":"elements."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncDropWhileSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:Sct8priorityScPvp","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","priority"],"names":{"title":"priority","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"docComment":{"lines":[{"text":"The current task's priority."},{"text":""},{"text":"- SeeAlso: `TaskPriority`"},{"text":"- SeeAlso: `Task.currentPriority`"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:Scs12ContinuationV11YieldResultO","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","YieldResult"],"names":{"title":"AsyncThrowingStream.Continuation.YieldResult","navigator":[{"kind":"identifier","spelling":"YieldResult"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"YieldResult"}]},"docComment":{"lines":[{"text":"A type that indicates the result of yielding a value to a client, by"},{"text":"way of the continuation."},{"text":""},{"text":"The various `yield` methods of `AsyncThrowingStream.Continuation` return"},{"text":"this type to indicate the success or failure of yielding an element to"},{"text":"the continuation."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"YieldResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScP8RawValuea","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","RawValue"],"names":{"title":"TaskPriority.RawValue","navigator":[{"kind":"identifier","spelling":"RawValue"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"RawValue"}]},"docComment":{"lines":[{"text":"The raw type that can be used to represent all values of the conforming"},{"text":"type."},{"text":""},{"text":"Every distinct value of the conforming type has a corresponding unique"},{"text":"value of the `RawValue` type, but there may be values of the `RawValue`"},{"text":"type that don't have a corresponding value of the conforming type."}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"RawValue"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"UInt8","preciseIdentifier":"s:s5UInt8V"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV11TerminationO8finishedyADyx__GAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","Termination","finished"],"names":{"title":"AsyncStream.Continuation.Termination.finished","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finished"}]},"docComment":{"lines":[{"text":"The stream finished as a result of calling the continuation's"},{"text":" `finish` method."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finished"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","Element"],"names":{"title":"AsyncPrefixSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The prefix sequence produces whatever type of element its base iterator"},{"text":"produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence"],"names":{"title":"AsyncMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that maps the given closure over the asynchronous"},{"text":"sequenceâ€™s elements."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","Iterator"],"names":{"title":"AsyncPrefixSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the prefix sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.associatedtype","displayName":"Associated Type"},"identifier":{"precise":"s:Sci7ElementQa","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","Element"],"names":{"title":"Element","subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."}]},"declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AsyncIterator"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC14projectedValueACyxGvp","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","projectedValue"],"names":{"title":"projectedValue","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"projectedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskLocal","preciseIdentifier":"s:12_Concurrency9TaskLocalC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":">"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"projectedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskLocal","preciseIdentifier":"s:12_Concurrency9TaskLocalC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"set"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORs_rlE8detached8priority9operationScTyxACGScPSg_xyYaYbcntFZ","interfaceLanguage":"swift"},"pathComponents":["Task","detached(priority:operation:)"],"names":{"title":"detached(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Runs the given nonthrowing operation asynchronously"},{"text":"as part of a new top-level task."},{"text":""},{"text":"Don't use a detached task if it's possible"},{"text":"to model the operation using structured concurrency features like child tasks."},{"text":"Child tasks inherit the parent task's priority and task-local storage,"},{"text":"and canceling a parent task automatically cancels all of its child tasks."},{"text":"You need to handle these considerations manually with a detached task."},{"text":""},{"text":"You need to keep a reference to the detached task"},{"text":"if you want to cancel it by calling the `Task.cancel()` method."},{"text":"Discarding your reference to a detached task"},{"text":"doesn't implicitly cancel that task,"},{"text":"it only makes it impossible for you to explicitly cancel the task."},{"text":""},{"text":"- Parameters:"},{"text":"  - priority: The priority of the task."},{"text":"  - operation: The operation to perform."},{"text":""},{"text":"- Returns: A reference to the task."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV11TerminationO9cancelledyADyx__GAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","Termination","cancelled"],"names":{"title":"AsyncStream.Continuation.Termination.cancelled","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelled"}]},"docComment":{"lines":[{"text":"The stream finished as a result of cancellation."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelled"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs12ContinuationV5yield4withAB11YieldResultOyxs5Error_p__Gs0E0OyxsAG_pG_tsAG_pRs_rlF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","yield(with:)"],"names":{"title":"yield(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"normally or throw, based on a given result."},{"text":""},{"text":"- Parameter result: A result to yield from the continuation. In the"},{"text":"  `.success(_:)` case, this returns the associated value from the"},{"text":"  iterator's `next()` method. If the result is the `failure(_:)` case,"},{"text":"  this call terminates the stream with the result's error, by calling"},{"text":"  `finish(throwing:)`."},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"If nothing is awaiting the next value and the result is success, this call"},{"text":"attempts to buffer the result's element."},{"text":""},{"text":"If you call this method repeatedly, each call returns immediately, without"},{"text":"blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScS12ContinuationV","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation"],"names":{"title":"AsyncStream.Continuation","navigator":[{"kind":"identifier","spelling":"Continuation"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Continuation"}]},"docComment":{"lines":[{"text":"A mechanism to interface between synchronous code and an asynchronous"},{"text":"stream."},{"text":""},{"text":"The closure you provide to the `AsyncStream` in"},{"text":"`init(_:bufferingPolicy:_:)` receives an instance of this type when"},{"text":"invoked. Use this continuation to provide elements to the stream by"},{"text":"calling one of the `yield` methods, then terminate the stream normally by"},{"text":"calling the `finish()` method."},{"text":""},{"text":"- Note: Unlike other continuations in Swift, `AsyncStream.Continuation`"},{"text":"supports escaping."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Continuation"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScS_15bufferingPolicy_ScSyxGxm_ScS12ContinuationV09BufferingB0Oyx__GyADyx_GXEtcfc","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","init(_:bufferingPolicy:_:)"],"names":{"title":"init(_:bufferingPolicy:_:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"bufferingPolicy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"BufferingPolicy","preciseIdentifier":"s:ScS12ContinuationV15BufferingPolicyO"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Constructs an asynchronous stream for an element type, using the"},{"text":"specified buffering policy and element-producing closure."},{"text":""},{"text":"- Parameters:"},{"text":"   - elementType: The type of element the `AsyncStream` produces."},{"text":"   - bufferingPolicy: A `Continuation.BufferingPolicy` value to"},{"text":"      set the stream's buffering behavior. By default, the stream buffers an"},{"text":"      unlimited number of elements. You can also set the policy to buffer a"},{"text":"      specified number of oldest or newest elements."},{"text":"   - build: A custom closure that yields values to the"},{"text":"      `AsyncStream`. This closure receives an `AsyncStream.Continuation`"},{"text":"      instance that it uses to provide elements to the stream and terminate the"},{"text":"      stream when finished."},{"text":""},{"text":"The `AsyncStream.Continuation` received by the `build` closure is"},{"text":"appropriate for use in concurrent contexts. It is thread safe to send and"},{"text":"finish; all calls to the continuation are serialized. However, calling"},{"text":"this from multiple concurrent contexts could result in out-of-order"},{"text":"delivery."},{"text":""},{"text":"The following example shows an `AsyncStream` created with this"},{"text":"initializer that produces 100 random numbers on a one-second interval,"},{"text":"calling `yield(_:)` to deliver each element to the awaiting call point."},{"text":"When the `for` loop exits and the stream finishes by calling the"},{"text":"continuation's `finish()` method."},{"text":""},{"text":"    let stream = AsyncStream<Int>(Int.self,"},{"text":"                                  bufferingPolicy: .bufferingNewest(5)) { continuation in"},{"text":"            Task.detached {"},{"text":"                for _ in 0..<100 {"},{"text":"                    await Task.sleep(1 * 1_000_000_000)"},{"text":"                    continuation.yield(Int.random(in: 1...10))"},{"text":"                }"},{"text":"                continuation.finish()"},{"text":"            }"},{"text":"        }"},{"text":""},{"text":"    // Call point:"},{"text":"    for await random in stream {"},{"text":"        print (\"\\(random)\")"},{"text":"    }"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"elementType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":".Type = Element.self, "},{"kind":"externalParam","spelling":"bufferingPolicy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"limit"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"BufferingPolicy","preciseIdentifier":"s:ScS12ContinuationV15BufferingPolicyO"},{"kind":"text","spelling":" = .unbounded, "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"build"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV04dropD0yACyxGSiF","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"When you call `dropFirst(_:)` on an asynchronous sequence that is already"},{"text":"an `AsyncDropFirstSequence`, the returned sequence simply adds the new"},{"text":"drop count to the current drop count."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV8IteratorV4nextq_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns `nil`. Otherwise, `next()` returns the result of"},{"text":"calling the transforming closure on the received element."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP4highScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","high"],"names":{"title":"high","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"high"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"high"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency21withThrowingTaskGroup2of9returning4bodyq_xm_q_mq_Scgyxs5Error_pGzYaKXEtYaKs8SendableRzr0_lF","interfaceLanguage":"swift"},"pathComponents":["withThrowingTaskGroup(of:returning:body:)"],"names":{"title":"withThrowingTaskGroup(of:returning:body:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withThrowingTaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"GroupResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"}]},"docComment":{"lines":[{"text":"Starts a new scope that can contain a dynamic number of throwing child tasks."},{"text":""},{"text":"A group waits for all of its child tasks"},{"text":"to complete, throw an error, or be canceled before it returns."},{"text":"After this function returns, the task group is always empty."},{"text":""},{"text":"To collect the results of the group's child tasks,"},{"text":"you can use a `for`-`await`-`in` loop:"},{"text":""},{"text":"    var sum = 0"},{"text":"    for await result in group {"},{"text":"        sum += result"},{"text":"    }"},{"text":""},{"text":"If you need more control or only a few results,"},{"text":"you can call `next()` directly:"},{"text":""},{"text":"    guard let first = await group.next() else {"},{"text":"        group.cancelAll()"},{"text":"        return 0"},{"text":"    }"},{"text":"    let second = await group.next() ?? 0"},{"text":"    group.cancelAll()"},{"text":"    return first + second"},{"text":""},{"text":"Task Group Cancellation"},{"text":"======================="},{"text":""},{"text":"You can cancel a task group and all of its child tasks"},{"text":"by calling the `cancellAll()` method on the task group,"},{"text":"or by canceling the task in which the group is running."},{"text":""},{"text":"If you call `async(priority:operation:)` to create a new task in a canceled group,"},{"text":"that task is immediately canceled after creation."},{"text":"Alternatively, you can call `asyncUnlessCancelled(priority:operation:)`,"},{"text":"which doesn't create the task if the group has already been canceled"},{"text":"Choosing between these two functions"},{"text":"lets you control how to react to cancellation within a group:"},{"text":"some child tasks need to run regardless of cancellation,"},{"text":"but other tasks are better not even being created"},{"text":"when you know they can't produce useful results."},{"text":""},{"text":"Throwing an error in one of the tasks of a task group"},{"text":"doesn't immediately cancel the other tasks in that group."},{"text":"However,"},{"text":"if you call `next()` in the task group and propagate its error,"},{"text":"all other tasks are canceled."},{"text":"For example, in the code below,"},{"text":"nothing is canceled and the group doesn't throw an error:"},{"text":""},{"text":"    withThrowingTaskGroup { group in"},{"text":"        group.addTask { throw SomeError() }"},{"text":"    }"},{"text":""},{"text":"In contrast, this example throws `SomeError`"},{"text":"and cancels all of the tasks in the group:"},{"text":""},{"text":"    withThrowingTaskGroup { group in"},{"text":"        group.addTask { throw SomeError() }"},{"text":"        try group.next()"},{"text":"    }"},{"text":""},{"text":"An individual task throws its error"},{"text":"in the corresponding call to `Group.next()`,"},{"text":"which gives you a chance to handle the individual error"},{"text":"or to let the group rethrow the error."}]},"functionSignature":{"parameters":[{"name":"of","internalName":"childTaskResultType","declarationFragments":[{"kind":"identifier","spelling":"childTaskResultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type"}]},{"name":"returning","internalName":"returnType","declarationFragments":[{"kind":"identifier","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"GroupResult"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"GroupResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withThrowingTaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"GroupResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"childTaskResultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type = GroupResult.self, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE23withCancellationHandler7handler9operationqd__yyYbXE_qd__yYaKXEtYaKlFZ","interfaceLanguage":"swift"},"pathComponents":["Task","withCancellationHandler(handler:operation:)"],"names":{"title":"withCancellationHandler(handler:operation:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"functionSignature":{"parameters":[{"name":"handler","declarationFragments":[{"kind":"identifier","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0},{"name":"T","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`Task.withCancellationHandler` has been replaced by `withTaskCancellationHandler` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:Scs9unfoldingScsyxs5Error_pGxSgyYaKc_tcsAB_pRs_rlufc","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","init(unfolding:)"],"names":{"title":"init(unfolding:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unfolding"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?)"}]},"docComment":{"lines":[{"text":"Constructs an asynchronous throwing stream from a given element-producing"},{"text":"closure."},{"text":""},{"text":"- Parameters:"},{"text":"  - produce: A closure that asynchronously produces elements for the"},{"text":"   stream."},{"text":""},{"text":"Use this convenience initializer when you have an asychronous function"},{"text":"that can produce elements for the stream, and don't want to invoke"},{"text":"a continuation manually. This initializer \"unfolds\" your closure into"},{"text":"a full-blown asynchronous stream. The created stream handles adherence to"},{"text":"the `AsyncSequence` protocol automatically. To terminate the stream with"},{"text":"an error, throw the error from your closure."},{"text":""},{"text":"The following example shows an `AsyncThrowingStream` created with this"},{"text":"initializer that produces random numbers on a one-second interval. If the"},{"text":"random number is divisble by 5 with no remainder, the stream throws a"},{"text":"`MyRandomNumberError`."},{"text":""},{"text":"    let stream = AsyncThrowingStream<Int, Error> {"},{"text":"            await Task.sleep(1 * 1_000_000_000)"},{"text":"            let random = Int.random(in: 1...10)"},{"text":"            if (random % 5 == 0) {"},{"text":"                throw MyRandomNumberError()"},{"text":"            }"},{"text":"            return random"},{"text":"        }"},{"text":""},{"text":"    // Call point:"},{"text":"    do {"},{"text":"        for try await random in stream {"},{"text":"            print (\"\\(random)\")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"\\(error)\")"},{"text":"    }"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unfolding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"produce"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:S2cEycfc","interfaceLanguage":"swift"},"pathComponents":["CancellationError","init()"],"names":{"title":"init()","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sct6cancelyyF","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","cancel()"],"names":{"title":"cancel()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Cancel the current task."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC9withValue_9operation4file4lineqd__x_qd__yKXESSSutKlF","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","withValue(_:operation:file:line:)"],"names":{"title":"withValue(_:operation:file:line:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withValue"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}]},"docComment":{"lines":[{"text":"Binds the task-local to the specific value for the duration of the"},{"text":"synchronous operation."},{"text":""},{"text":"The value is available throughout the execution of the operation closure,"},{"text":"including any `get` operations performed by child-tasks created during the"},{"text":"execution of the operation closure."},{"text":""},{"text":"If the same task-local is bound multiple times, be it in the same task, or"},{"text":"in specific child tasks, the \"more specific\" binding is returned when the"},{"text":"value is read."},{"text":""},{"text":"If the value is a reference type, it will be retained for the duration of"},{"text":"the operation closure."}]},"functionSignature":{"parameters":[{"name":"valueDuringOperation","declarationFragments":[{"kind":"identifier","spelling":"valueDuringOperation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}]},{"name":"file","declarationFragments":[{"kind":"identifier","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},{"name":"line","declarationFragments":[{"kind":"identifier","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"}]}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"swiftGenerics":{"parameters":[{"name":"Value","index":0,"depth":0},{"name":"R","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"Value","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withValue"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"valueDuringOperation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#file"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#line"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency5async8priority9operationScTyxs5NeverOGScPSg_xyYaYbcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["async(priority:operation:)"],"names":{"title":"async(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`async` was replaced by `Task.init` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScT12_Concurrencys5Error_pRs_rlE8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntcfc","interfaceLanguage":"swift"},"pathComponents":["Task","init(priority:operation:)"],"names":{"title":"init(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Runs the given throwing operation asynchronously"},{"text":"as part of a new top-level task on behalf of the current actor."},{"text":""},{"text":"Use this function when creating asynchronous work"},{"text":"that operates on behalf of the synchronous function that calls it."},{"text":"Like `Task.detached(priority:operation:)`,"},{"text":"this function creates a separate, top-level task."},{"text":"Unlike `detach(priority:operation:)`,"},{"text":"the task created by `Task.init(priority:operation:)`"},{"text":"inherits the priority and actor context of the caller,"},{"text":"so the operation is treated more like an asynchronous extension"},{"text":"to the synchronous operation."},{"text":""},{"text":"You need to keep a reference to the task"},{"text":"if you want to cancel it by calling the `Task.cancel()` method."},{"text":"Discarding your reference to a detached task"},{"text":"doesn't implicitly cancel that task,"},{"text":"it only makes it impossible for you to explicitly cancel the task."},{"text":""},{"text":"- Parameters:"},{"text":"  - priority: The priority of the task."},{"text":"    Pass `nil` to use the priority from `Task.currentPriority`."},{"text":"  - operation: The operation to perform."}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency27withTaskCancellationHandler7handler9operationxyyYbXE_xyYaKXEtYaKlF","interfaceLanguage":"swift"},"pathComponents":["withTaskCancellationHandler(handler:operation:)"],"names":{"title":"withTaskCancellationHandler(handler:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"functionSignature":{"parameters":[{"name":"handler","declarationFragments":[{"kind":"identifier","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg10waitForAllyyYaKF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","waitForAll()"],"names":{"title":"waitForAll()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"waitForAll"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"lines":[{"text":"Wait for all of the group's remaining tasks to complete."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"waitForAll"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV04makeB8IteratorAC0F0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence"],"names":{"title":"AsyncThrowingMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that maps the given error-throwing closure over the"},{"text":"asynchronous sequenceâ€™s elements."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP6mediumScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","medium"],"names":{"title":"medium","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"medium"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"medium"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg7addTask8priority9operationyScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","addTask(priority:operation:)"],"names":{"title":"addTask(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTask"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Adds a child task to the group."},{"text":""},{"text":"This method doesn't throw an error, even if the child task does."},{"text":"Instead, the corresponding call to `ThrowingTaskGroup.next()` rethrows that error."},{"text":""},{"text":"  - overridingPriority: The priority of the operation task."},{"text":"    Omit this parameter or pass `.unspecified`"},{"text":"    to set the child task's priority to the priority of the group."},{"text":"  - operation: The operation to execute as part of the task group."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTask"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScS9unfolding8onCancelScSyxGxSgyYac_yyYbcSgtcfc","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","init(unfolding:onCancel:)"],"names":{"title":"init(unfolding:onCancel:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unfolding"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"onCancel"},{"kind":"text","spelling":": (() -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")?)"}]},"docComment":{"lines":[{"text":"Constructs an asynchronous stream from a given element-producing"},{"text":"closure, with an optional closure to handle cancellation."},{"text":""},{"text":"- Parameters:"},{"text":"  - produce: A closure that asynchronously produces elements for the"},{"text":"    stream."},{"text":"  - onCancel: A closure to execute when canceling the stream's task."},{"text":""},{"text":"Use this convenience initializer when you have an asychronous function"},{"text":"that can produce elements for the stream, and don't want to invoke"},{"text":"a continuation manually. This initializer \"unfolds\" your closure into"},{"text":"an asynchronous stream. The created stream handles conformance"},{"text":"to the `AsyncSequence` protocol automatically, including termination"},{"text":"(either by cancellation or by returning `nil` from the closure to finish"},{"text":"iteration)."},{"text":""},{"text":"The following example shows an `AsyncStream` created with this"},{"text":"initializer that produces random numbers on a one-second interval. This"},{"text":"example uses the Swift multiple trailing closure syntax, which omits"},{"text":"the `unfolding` parameter label."},{"text":""},{"text":"    let stream = AsyncStream<Int> {"},{"text":"            await Task.sleep(1 * 1_000_000_000)"},{"text":"            return Int.random(in: 1...10)"},{"text":"        }"},{"text":"        onCancel: { @Sendable () in print (\"Canceled.\") }"},{"text":"    )"},{"text":""},{"text":"    // Call point:"},{"text":"    for await random in stream {"},{"text":"        print (\"\\(random)\")"},{"text":"    }"},{"text":""},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"unfolding"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"produce"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"onCancel"},{"kind":"text","spelling":": (() -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")? = nil)"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","AsyncIterator"],"names":{"title":"AsyncPrefixSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP1goiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority",">(_:_:)"],"names":{"title":">(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is greater than that of the second argument."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE9withGroup10resultType9returning4bodyqd_0_qd__m_qd_0_mqd_0_Scgyqd__s5Error_pGzYaKXEtYaKs8SendableRd__r0_lFZ","interfaceLanguage":"swift"},"pathComponents":["Task","withGroup(resultType:returning:body:)"],"names":{"title":"withGroup(resultType:returning:body:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"TaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"BodyResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Group","preciseIdentifier":"s:ScT12_Concurrencys5NeverORszACRs_rlE5Groupa"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"BodyResult"}]},"functionSignature":{"parameters":[{"name":"resultType","declarationFragments":[{"kind":"identifier","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":".Type"}]},{"name":"returning","internalName":"returnType","declarationFragments":[{"kind":"identifier","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":".Type"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Group","preciseIdentifier":"s:ScT12_Concurrencys5NeverORszACRs_rlE5Groupa"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"BodyResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"BodyResult"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0},{"name":"TaskResult","index":0,"depth":1},{"name":"BodyResult","index":1,"depth":1}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"conformance","lhs":"TaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"TaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"BodyResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":".Type = BodyResult.self, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Group","preciseIdentifier":"s:ScT12_Concurrencys5NeverORszACRs_rlE5Groupa"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"BodyResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`Task.withGroup` was replaced by `withThrowingTaskGroup` and `withTaskGroup` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:Scs_15bufferingPolicy_Scsyxs5Error_pGxm_Scs12ContinuationV09BufferingB0OyxsAB_p__GyAEyxsAB_p_GXEtcsAB_pRs_rlufc","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","init(_:bufferingPolicy:_:)"],"names":{"title":"init(_:bufferingPolicy:_:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"bufferingPolicy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"BufferingPolicy","preciseIdentifier":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Constructs an asynchronous stream for an element type, using the"},{"text":"specified buffering policy and element-producing closure."},{"text":""},{"text":"- Parameters:"},{"text":"  - elementType: The type of element the `AsyncThrowingStream`"},{"text":"  produces."},{"text":"  - limit: The maximum number of elements to"},{"text":"  hold in the buffer. By default, this value is unlimited. Use a"},{"text":"  `Continuation.BufferingPolicy` to buffer a specified number of oldest"},{"text":"  or newest elements."},{"text":"  - build: A custom closure that yields values to the"},{"text":"  `AsyncThrowingStream`. This closure receives an"},{"text":"  `AsyncThrowingStream.Continuation` instance that it uses to provide"},{"text":"  elements to the stream and terminate the stream when finished."},{"text":""},{"text":"The `AsyncStream.Continuation` received by the `build` closure is"},{"text":"appopriate for use in concurrent contexts. It is thread safe to send and"},{"text":"finish; all calls are to the continuation are serialized. However, calling"},{"text":"this from multiple concurrent contexts could result in out-of-order"},{"text":"delivery."},{"text":""},{"text":"The following example shows an `AsyncStream` created with this"},{"text":"initializer that produces 100 random numbers on a one-second interval,"},{"text":"calling `yield(_:)` to deliver each element to the awaiting call point."},{"text":"When the `for` loop exits and the stream finishes by calling the"},{"text":"continuation's `finish()` method. If the random number is divisble by 5"},{"text":"with no remainder, the stream throws a `MyRandomNumberError`."},{"text":""},{"text":"    let stream = AsyncThrowingStream<Int, Error>(Int.self,"},{"text":"                                                 bufferingPolicy: .bufferingNewest(5)) { continuation in"},{"text":"            Task.detached {"},{"text":"                for _ in 0..<100 {"},{"text":"                    await Task.sleep(1 * 1_000_000_000)"},{"text":"                    let random = Int.random(in: 1...10)"},{"text":"                    if (random % 5 == 0) {"},{"text":"                        continuation.finish(throwing: MyRandomNumberError())"},{"text":"                        return"},{"text":"                    } else {"},{"text":"                        continuation.yield(random)"},{"text":"                    }"},{"text":"                }"},{"text":"                continuation.finish()"},{"text":"            }"},{"text":"        }"},{"text":""},{"text":"    // Call point:"},{"text":"    do {"},{"text":"        for try await random in stream {"},{"text":"            print (\"\\(random)\")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"\\(error)\")"},{"text":"    }"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"elementType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":".Type = Element.self, "},{"kind":"externalParam","spelling":"bufferingPolicy"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"limit"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"BufferingPolicy","preciseIdentifier":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"text","spelling":" = .unbounded, "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"build"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP1loiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","<(_:_:)"],"names":{"title":"<(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than that of the second argument."},{"text":""},{"text":"This function is the only requirement of the `Comparable` protocol. The"},{"text":"remainder of the relational operator functions are implemented by the"},{"text":"standard library for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","Element"],"names":{"title":"AsyncPrefixWhileSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The prefix-while sequence produces whatever type of element its base"},{"text":"iterator produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP2leoiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","<=(_:_:)"],"names":{"title":"<=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first"},{"text":"argument is less than or equal to that of the second argument."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScM7enqueueyyScJF","interfaceLanguage":"swift"},"pathComponents":["MainActor","enqueue(_:)"],"names":{"title":"enqueue(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"job","declarationFragments":[{"kind":"identifier","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"}]}],"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"nonisolated"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:ScI","interfaceLanguage":"swift"},"pathComponents":["AsyncIteratorProtocol"],"names":{"title":"AsyncIteratorProtocol","navigator":[{"kind":"identifier","spelling":"AsyncIteratorProtocol"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIteratorProtocol"}]},"docComment":{"lines":[{"text":"A type that asynchronously supplies the values of a sequence one at a"},{"text":"time."},{"text":""},{"text":"The `AsyncIteratorProtocol` defines the type returned by the"},{"text":"`makeAsyncIterator()` method of the `AsyncSequence` protocol. In short,"},{"text":"the iterator is what produces the asynchronous sequence's values. The"},{"text":"protocol defines a single asynchronous method, `next()`, which either"},{"text":"produces the next element of the sequence, or returns `nil` to signal"},{"text":"the end of the sequence."},{"text":""},{"text":"To implement your own `AsyncSequence`, implement a wrapped type that"},{"text":"conforms to `AsyncIteratorProtocol`. The following example shows a `Counter`"},{"text":"type that uses an inner iterator to monotonically generate `Int` values"},{"text":"until reaching a `howHigh` value. While this example isn't itself"},{"text":"asychronous, it shows the shape of a custom sequence and iterator, and how"},{"text":"to use it as if it were asynchronous:"},{"text":""},{"text":"    struct Counter : AsyncSequence {"},{"text":"        typealias Element = Int"},{"text":"        let howHigh: Int"},{"text":""},{"text":"        struct AsyncIterator : AsyncIteratorProtocol {"},{"text":"            let howHigh: Int"},{"text":"            var current = 1"},{"text":"            mutating func next() async -> Int? {"},{"text":"                // A genuinely asychronous implementation uses the `Task`"},{"text":"                // API to check for cancellation here and return early."},{"text":"                guard current <= howHigh else {"},{"text":"                    return nil"},{"text":"                }"},{"text":""},{"text":"                let result = current"},{"text":"                current += 1"},{"text":"                return result"},{"text":"            }"},{"text":"        }"},{"text":""},{"text":"        func makeAsyncIterator() -> AsyncIterator {"},{"text":"            return AsyncIterator(howHigh: howHigh)"},{"text":"        }"},{"text":"    }"},{"text":""},{"text":"At the call site, this looks like:"},{"text":""},{"text":"    for await i in Counter(howHigh: 10) {"},{"text":"      print(i, terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 2 3 4 5 6 7 8 9 10"},{"text":""},{"text":"### End of Iteration"},{"text":""},{"text":"The iterator returns `nil` to indicate the end of the sequence. After"},{"text":"returning `nil` (or throwing an error) from `next()`, the iterator enters"},{"text":"a terminal state, and all future calls to `next()` must return `nil`."},{"text":""},{"text":"### Cancellation"},{"text":""},{"text":"Types conforming to `AsyncIteratorProtocol` should use the cancellation"},{"text":"primitives provided by Swift's `Task` API. The iterator can choose how to"},{"text":"handle and respond to cancellation, including:"},{"text":""},{"text":"- Checking the `isCancelled` value of the current `Task` inside `next()`"},{"text":"  and returning `nil` to terminate the sequence."},{"text":"- Calling `checkCancellation()` on the `Task`, which throws a"},{"text":"  `CancellationError`."},{"text":"- Implementing `next()` with a"},{"text":"  `withTaskCancellationHandler(handler:operation:)` invocation to"},{"text":"  immediately react to cancellation."},{"text":""},{"text":"If the iterator needs to clean up on cancellation, it can do so after"},{"text":"checking for cancellation as described above, or in `deinit` if it's"},{"text":"a reference type."}]},"declarationFragments":[{"kind":"attribute","spelling":"@rethrows"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIteratorProtocol"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScA15unownedExecutorScevp","interfaceLanguage":"swift"},"pathComponents":["Actor","unownedExecutor"],"names":{"title":"unownedExecutor","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"Retrieve the executor for this actor as an optimized, unowned"},{"text":"reference."},{"text":""},{"text":"This property must always evaluate to the same executor for a"},{"text":"given actor instance, and holding on to the actor must keep the"},{"text":"executor alive."},{"text":""},{"text":"This property will be implicitly accessed when work needs to be"},{"text":"scheduled onto this actor.  These accesses may be merged,"},{"text":"eliminated, and rearranged with other work, and they may even"},{"text":"be introduced when not strictly required.  Visible side effects"},{"text":"are therefore strongly discouraged within this property."}]},"declarationFragments":[{"kind":"keyword","spelling":"nonisolated"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scc","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation"],"names":{"title":"UnsafeContinuation","navigator":[{"kind":"identifier","spelling":"UnsafeContinuation"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeContinuation"}]},"docComment":{"lines":[{"text":"A mechanism to interface"},{"text":"between synchronous and asynchronous code,"},{"text":"without correctness checking."},{"text":""},{"text":"A *continuation* is an opaque representation of program state."},{"text":"To create a continuation in asynchronous code,"},{"text":"call the `withUnsafeContinuation(_:)` or"},{"text":"`withUnsafeThrowingContinuation(_:)` function."},{"text":"To resume the asynchronous task,"},{"text":"call the `resume(returning:)`,"},{"text":"`resume(throwing:)`,"},{"text":"`resume(with:)`,"},{"text":"or `resume()` method."},{"text":""},{"text":"- Important: You must call a resume method exactly once"},{"text":"  on every execution path throughout the program."},{"text":"  Resuming from a continuation more than once is undefined behavior."},{"text":"  Never resuming leaves the task in a suspended state indefinitely,"},{"text":"  and leaks any associated resources."},{"text":""},{"text":"`CheckedContinuation` performs runtime checks"},{"text":"for missing or multiple resume operations."},{"text":"`UnsafeContinuation` avoids enforcing these invariants at runtime"},{"text":"because it aims to be a low-overhead mechanism"},{"text":"for interfacing Swift tasks with"},{"text":"event loops, delegate methods, callbacks,"},{"text":"and other non-`async` scheduling mechanisms."},{"text":"However, during development, the ability to verify that the"},{"text":"invariants are being upheld in testing is important."},{"text":"Because both types have the same interface,"},{"text":"you can replace one with the other in most circumstances,"},{"text":"without making other changes."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"E"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","Iterator"],"names":{"title":"AsyncPrefixWhileSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the prefix-while sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG17makeAsyncIteratorScG0C0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","AsyncIterator"],"names":{"title":"AsyncPrefixWhileSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","Iterator"],"names":{"title":"AsyncThrowingMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci17makeAsyncIterator0bC0QzyF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AsyncIterator"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AsyncIterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency29swift_deletedAsyncMethodErroryyYaF","interfaceLanguage":"swift"},"pathComponents":["swift_deletedAsyncMethodError()"],"names":{"title":"swift_deletedAsyncMethodError()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"swift_deletedAsyncMethodError"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"swift_deletedAsyncMethodError"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV04makeB8IteratorAC0G0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency13asyncDetached8priority9operationScTyxs5Error_pGScPSg_xyYaYbKcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["asyncDetached(priority:operation:)"],"names":{"title":"asyncDetached(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncDetached"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncDetached"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`asyncDetached` was replaced by `Task.detached` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE5Groupa","interfaceLanguage":"swift"},"pathComponents":["Task","Group"],"names":{"title":"Task.Group","navigator":[{"kind":"identifier","spelling":"Group"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Group"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0},{"name":"TaskResult","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"conformance","lhs":"TaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Group"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"TaskResult"},{"kind":"text","spelling":"> = "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"TaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`Task.Group` was replaced by `ThrowingTaskGroup` and `TaskGroup` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC11descriptionSSvp","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","description"],"names":{"title":"description","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},"docComment":{"lines":[{"text":"A textual representation of this instance."},{"text":""},{"text":"Calling this property directly is discouraged. Instead, convert an"},{"text":"instance of any type to a string by using the `String(describing:)`"},{"text":"initializer. This initializer works with any type, and uses the custom"},{"text":"`description` property for types that conform to"},{"text":"`CustomStringConvertible`:"},{"text":""},{"text":"    struct Point: CustomStringConvertible {"},{"text":"        let x: Int, y: Int"},{"text":""},{"text":"        var description: String {"},{"text":"            return \"(\\(x), \\(y))\""},{"text":"        }"},{"text":"    }"},{"text":""},{"text":"    let p = Point(x: 21, y: 30)"},{"text":"    let s = String(describing: p)"},{"text":"    print(s)"},{"text":"    // Prints \"(21, 30)\""},{"text":""},{"text":"The conversion of `p` to a string in the assignment to `s` uses the"},{"text":"`Point` type's `description` property."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScG7Elementa","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","Element"],"names":{"title":"TaskGroup.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup"],"names":{"title":"ThrowingTaskGroup","navigator":[{"kind":"identifier","spelling":"ThrowingTaskGroup"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ThrowingTaskGroup"}]},"docComment":{"lines":[{"text":"A group that contains throwing, dynamically created child tasks."},{"text":""},{"text":"To create a throwing task group,"},{"text":"call the `withThrowingTaskGroup(of:returning:body:)` method."},{"text":""},{"text":"Don't use a task group from outside the task where you created it."},{"text":"In most cases,"},{"text":"the Swift type system prevents a task group from escaping like that"},{"text":"because adding a child task to a task group is a mutating operation,"},{"text":"and mutation operations can't be performed"},{"text":"from concurrent execution contexts like a child task."},{"text":""},{"text":"For information about the language-level concurrency model that `ThrowingTaskGroup` is part of,"},{"text":"see [Concurrency][concurrency] in [The Swift Programming Language][tspl]."},{"text":""},{"text":"[concurrency]: https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ThrowingTaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Failure"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","Element"],"names":{"title":"AsyncCompactMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The compact map sequence produces whatever type of element its"},{"text":"transforming closure produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ElementOfResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:ScS12ContinuationV11YieldResultO","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","YieldResult"],"names":{"title":"AsyncStream.Continuation.YieldResult","navigator":[{"kind":"identifier","spelling":"YieldResult"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"YieldResult"}]},"docComment":{"lines":[{"text":"A type that indicates the result of yielding a value to a client, by"},{"text":"way of the continuation."},{"text":""},{"text":"The various `yield` methods of `AsyncStream.Continuation` return this"},{"text":"type to indicate the success or failure of yielding an element to the"},{"text":"continuation."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"YieldResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS12ContinuationV6finishyyF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","finish()"],"names":{"title":"finish()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finish"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"nil, which signifies the end of the iteration."},{"text":""},{"text":"Calling this function more than once has no effect. After calling"},{"text":"finish, the stream enters a terminal state and doesn't produces any additional"},{"text":"elements."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finish"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP2neoiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScG13AsyncIteratora","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","AsyncIterator"],"names":{"title":"TaskGroup.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG8IteratorV6cancelyyF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","Iterator","cancel()"],"names":{"title":"cancel()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS12ContinuationV5yield4withAB11YieldResultOyx__Gs0E0Oyxs5NeverOG_tF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","yield(with:)"],"names":{"title":"yield(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"normally from its suspension point with a given result's success value."},{"text":""},{"text":"- Parameter result: A result to yield from the continuation."},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"If nothing is awaiting the next value, the method attempts to buffer the"},{"text":"result's element."},{"text":""},{"text":"If you call this method repeatedly, each call returns immediately, without"},{"text":"blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScS12ContinuationV13onTerminationyAB0C0Oyx__GYbcSgvp","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","onTermination"],"names":{"title":"onTermination","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"onTermination"},{"kind":"text","spelling":": (("},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Termination","preciseIdentifier":"s:ScS12ContinuationV11TerminationO"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")?"}]},"docComment":{"lines":[{"text":"A callback to invoke when canceling iteration of an asynchronous"},{"text":"stream."},{"text":""},{"text":"If an `onTermination` callback is set, using task cancellation to"},{"text":"terminate iteration of an `AsyncStream` results in a call to this"},{"text":"callback."},{"text":""},{"text":"Canceling an active iteration invokes the `onTermination` callback"},{"text":"first, then resumes by yielding `nil`. This means that you can perform"},{"text":"needed cleanup in the cancellation handler. After reaching a terminal"},{"text":"state as a result of cancellation, the `AsyncStream` sets the callback"},{"text":"to `nil`."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"onTermination"},{"kind":"text","spelling":": (("},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Termination","preciseIdentifier":"s:ScS12ContinuationV11TerminationO"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"nonmutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"set"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS12ContinuationV5yieldAB11YieldResultOyyt__GyytRszlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","yield()"],"names":{"title":"yield()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"normally from its suspension point."},{"text":""},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"Use this method with `AsyncStream` instances whose `Element` type is"},{"text":"`Void`. In this case, the `yield()` call unblocks the awaiting"},{"text":"iteration; there is no value to return."},{"text":""},{"text":"If you call this method repeatedly, each call returns immediately, without"},{"text":"blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Element","rhs":"Void"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:Scg8IteratorV7Elementa","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","Iterator","Element"],"names":{"title":"ThrowingTaskGroup.Iterator.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScG8IteratorV","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","Iterator"],"names":{"title":"TaskGroup.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"A type that provides an iteration interface"},{"text":"over the results of tasks added to the group."},{"text":""},{"text":"The elements returned by this iterator"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":""},{"text":"This iterator terminates after all tasks have completed."},{"text":"After iterating over the results of each task,"},{"text":"it's valid to make a new iterator for the task group,"},{"text":"which you can use to iterate over the results of new tasks you add to the group."},{"text":"For example:"},{"text":""},{"text":"    group.addTask { 1 }"},{"text":"    for await r in group { print(r) }"},{"text":""},{"text":"    // Add a new child task and iterate again."},{"text":"    group.addTask { 2 }"},{"text":"    for await r in group { print(r) }"},{"text":""},{"text":"- SeeAlso: `TaskGroup.next()`"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC12wrappedValuexvp","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","wrappedValue"],"names":{"title":"wrappedValue","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"wrappedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"wrappedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG8IteratorV4nextxSgyYaF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Advances to and returns the result of the next child task."},{"text":""},{"text":"The elements returned from this method"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":"After this method returns `nil`,"},{"text":"this iterator is guaranteed to never produce more values."},{"text":""},{"text":"For more information about the iteration order and semantics,"},{"text":"see `TaskGroup.next()`."},{"text":""},{"text":"- Returns: The value returned by the next child task that completes,"},{"text":"  or `nil` if there are no remaining child tasks,"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScG8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the filter sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns nil. Otherwise, `next()` evaluates the"},{"text":"result with the `predicate` closure. If the closure returns `true`,"},{"text":"`next()` returns the received element; otherwise it awaits the next"},{"text":"element from the base iterator."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","AsyncIterator"],"names":{"title":"AsyncThrowingMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:ScF","interfaceLanguage":"swift"},"pathComponents":["Executor"],"names":{"title":"Executor","navigator":[{"kind":"identifier","spelling":"Executor"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Executor"}]},"docComment":{"lines":[{"text":"A service that can execute jobs."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Executor"},{"kind":"text","spelling":" : AnyObject, "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScT","interfaceLanguage":"swift"},"pathComponents":["Task"],"names":{"title":"Task","navigator":[{"kind":"identifier","spelling":"Task"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Task"}]},"docComment":{"lines":[{"text":"A unit of asynchronous work."},{"text":""},{"text":"When you create an instance of `Task`,"},{"text":"you provide a closure that contains the work for that task to perform."},{"text":"Tasks can start running immediately after creation;"},{"text":"you don't explicitly start or schedule them."},{"text":"After creating a task, you use the instance to interact with it ---"},{"text":"for example, to wait for it to complete or to cancel it."},{"text":"It's not a programming error to discard a reference to a task"},{"text":"without waiting for that task to finish or canceling it."},{"text":"A task runs regardless of whether you keep a reference to it."},{"text":"However, if you discard the reference to a task,"},{"text":"you give up the ability"},{"text":"to wait for that task's result or cancel the task."},{"text":""},{"text":"To support operations on the current task,"},{"text":"which can be either a detached task or child task,"},{"text":"`Task` also exposes class methods like `yield()`."},{"text":"Because these methods are asynchronous,"},{"text":"they're always invoked as part of an existing task."},{"text":""},{"text":"Only code that's running as part of the task can interact with that task."},{"text":"To interact with the current task,"},{"text":"you call one of the static methods on `Task`."},{"text":""},{"text":"A task's execution can be seen as a series of periods where the task ran."},{"text":"Each such period ends at a suspension point or the"},{"text":"completion of the task."},{"text":"These periods of execution are represented by instances of `PartialAsyncTask`."},{"text":"Unless you're implementing a custom executor,"},{"text":"you don't directly interact with partial tasks."},{"text":""},{"text":"For information about the language-level concurrency model that `Task` is part of,"},{"text":"see [Concurrency][concurrency] in [The Swift Programming Language][tspl]."},{"text":""},{"text":"[concurrency]: https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""},{"text":"Task Cancellation"},{"text":"================="},{"text":""},{"text":"Tasks include a shared mechanism for indicating cancellation,"},{"text":"but not a shared implementation for how to handle cancellation."},{"text":"Depending on the work you're doing in the task,"},{"text":"the correct way to stop that work varies."},{"text":"Likewise,"},{"text":"it's the responsibility of the code running as part of the task"},{"text":"to check for cancellation whenever stopping is appropriate."},{"text":"In a long-task that includes multiple pieces,"},{"text":"you might need to check for cancellation at several points,"},{"text":"and handle cancellation differently at each point."},{"text":"If you only need to throw an error to stop the work,"},{"text":"call the `Task.checkCancellation()` function to check for cancellation."},{"text":"Other responses to cancellation include"},{"text":"returning the work completed so far, returning an empty result, or returning `nil`."},{"text":""},{"text":"Cancellation is a purely Boolean state;"},{"text":"there's no way to include additional information"},{"text":"like the reason for cancellation."},{"text":"This reflects the fact that a task can be canceled for many reasons,"},{"text":"and additional reasons can accrue during the cancellation process."}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Task"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Failure"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs12ContinuationV5yieldAB11YieldResultOyytq___GyytRszrlF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","yield()"],"names":{"title":"yield()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"nomally from its suspension point."},{"text":""},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"Use this method with `AsyncThrowingStream` instances whose `Element`"},{"text":"type is `Void`. In this case, the `yield()` call unblocks the"},{"text":"awaiting iteration; there is no value to return."},{"text":""},{"text":"If you call this method repeatedly, each call returns immediately,"},{"text":"without blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Element","rhs":"Void"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:Scs12ContinuationV15BufferingPolicyO","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","BufferingPolicy"],"names":{"title":"AsyncThrowingStream.Continuation.BufferingPolicy","navigator":[{"kind":"identifier","spelling":"BufferingPolicy"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"BufferingPolicy"}]},"docComment":{"lines":[{"text":"A strategy that handles exhaustion of a bufferâ€™s capacity."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"BufferingPolicy"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","Element"],"names":{"title":"AsyncFlatMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The flat map sequence produces the type of element in the asynchronous"},{"text":"sequence produced by the `transform` closure."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScG7isEmptySbvp","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","isEmpty"],"names":{"title":"isEmpty","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the group has any remaining tasks."},{"text":""},{"text":"At the start of the body of a `withTaskGroup(of:returning:body:)` call,"},{"text":"the task group is always empty."},{"text":"It`s guaranteed to be empty when returning from that body"},{"text":"because a task group waits for all child tasks to complete before returning."},{"text":""},{"text":"- Returns: `true` if the group has no pending tasks; otherwise `false`."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:Sce8ordinaryScexh_tcScfRzlufc","interfaceLanguage":"swift"},"pathComponents":["UnownedSerialExecutor","init(ordinary:)"],"names":{"title":"init(ordinary:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"E"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"ordinary"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":")"}]},"swiftGenerics":{"parameters":[{"name":"E","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"SerialExecutor","rhsPrecise":"s:Scf"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"E"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"ordinary"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"executor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"SerialExecutor","preciseIdentifier":"s:Scf"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resume9returningyxn_tF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume(returning:)"],"names":{"title":"resume(returning:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation"},{"text":"by returning the given value."},{"text":""},{"text":"- Parameter value: The value to return from the continuation."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"parameters":[{"name":"returning","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","Element"],"names":{"title":"AsyncThrowingPrefixWhileSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The prefix-while sequence produces whatever type of element its base"},{"text":"iterator produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScT","interfaceLanguage":"swift"},"pathComponents":["Task","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG10waitForAllyyYaF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","waitForAll()"],"names":{"title":"waitForAll()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"waitForAll"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}]},"docComment":{"lines":[{"text":"Wait for all of the group's remaining tasks to complete."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"waitForAll"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream"],"names":{"title":"AsyncThrowingStream","navigator":[{"kind":"identifier","spelling":"AsyncThrowingStream"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingStream"}]},"docComment":{"lines":[{"text":"An asynchronous sequence generated from an error-throwing closure that"},{"text":"calls a continuation to produce new elements."},{"text":""},{"text":"`AsyncThrowingStream` conforms to `AsyncSequence`, providing a convenient"},{"text":"way to create an asynchronous sequence without manually implementing an"},{"text":"asynchronous iterator. In particular, an asynchronous stream is well-suited"},{"text":"to adapt callback- or delegation-based APIs to participate with"},{"text":"`async`-`await`."},{"text":""},{"text":"In contrast to `AsyncStream`, this type can throw an error from the awaited"},{"text":"`next()`, which terminates the stream with the thrown error."},{"text":""},{"text":"You initialize an `AsyncThrowingStream` with a closure that receives an"},{"text":"`AsyncThrowingStream.Continuation`. Produce elements in this closure, then"},{"text":"provide them to the stream by calling the continuation's `yield(_:)` method."},{"text":"When there are no further elements to produce, call the continuation's"},{"text":"`finish()` method. This causes the sequence iterator to produce a `nil`,"},{"text":"which terminates the sequence. If an error occurs, call the continuation's"},{"text":"`finish(throwing:)` method, which causes the iterator's `next()` method to"},{"text":"throw the error to the awaiting call point. The continuation is `Sendable`,"},{"text":"which permits calling it from concurrent contexts external to the iteration"},{"text":"of the `AsyncThrowingStream`."},{"text":""},{"text":"An arbitrary source of elements can produce elements faster than they are"},{"text":"consumed by a caller iterating over them. Because of this, `AsyncThrowingStream`"},{"text":"defines a buffering behavior, allowing the stream to buffer a specific"},{"text":"number of oldest or newest elements. By default, the buffer limit is"},{"text":"`Int.max`, which means it's unbounded."},{"text":""},{"text":"### Adapting Existing Code to Use Streams"},{"text":""},{"text":"To adapt existing callback code to use `async`-`await`, use the callbacks"},{"text":"to provide values to the stream, by using the continuation's `yield(_:)`"},{"text":"method."},{"text":""},{"text":"Consider a hypothetical `QuakeMonitor` type that provides callers with"},{"text":"`Quake` instances every time it detects an earthquake. To receive callbacks,"},{"text":"callers set a custom closure as the value of the monitor's"},{"text":"`quakeHandler` property, which the monitor calls back as necessary. Callers"},{"text":"can also set an `errorHandler` to receive asychronous error notifications,"},{"text":"such as the monitor service suddenly becoming unavailable."},{"text":""},{"text":"    class QuakeMonitor {"},{"text":"        var quakeHandler: ((Quake) -> Void)?"},{"text":"        var errorHandler: ((Error) -> Void)?"},{"text":""},{"text":"        func startMonitoring() {â€¦}"},{"text":"        func stopMonitoring() {â€¦}"},{"text":"    }"},{"text":""},{"text":"To adapt this to use `async`-`await`, extend the `QuakeMonitor` to add a"},{"text":"`quakes` property, of type `AsyncThrowingStream<Quake>`. In the getter for"},{"text":"this property, return an `AsyncThrowingStream`, whose `build` closure --"},{"text":"called at runtime to create the stream -- uses the continuation to"},{"text":"perform the following steps:"},{"text":""},{"text":"1. Creates a `QuakeMonitor` instance."},{"text":"2. Sets the monitor's `quakeHandler` property to a closure that receives"},{"text":"each `Quake` instance and forwards it to the stream by calling the"},{"text":"continuation's `yield(_:)` method."},{"text":"3. Sets the monitor's `errorHandler` property to a closure that receives"},{"text":"any error from the monitor and forwards it to the stream by calling the"},{"text":"continuation's `finish(throwing:)` method. This causes the stream's"},{"text":"iterator to throw the error and terminate the stream."},{"text":"4. Sets the continuation's `onTermination` property to a closure that"},{"text":"calls `stopMonitoring()` on the monitor."},{"text":"5. Calls `startMonitoring` on the `QuakeMonitor`."},{"text":""},{"text":"    extension QuakeMonitor {"},{"text":""},{"text":"        static var throwingQuakes: AsyncThrowingStream<Quake, Error> {"},{"text":"            AsyncThrowingStream { continuation in"},{"text":"                let monitor = QuakeMonitor()"},{"text":"                monitor.quakeHandler = { quake in"},{"text":"                    continuation.yield(quake)"},{"text":"                }"},{"text":"                monitor.errorHandler = { error in"},{"text":"                    continuation.finish(throwing: error)"},{"text":"                }"},{"text":"                continuation.onTermination = { @Sendable _ in"},{"text":"                    monitor.stopMonitoring()"},{"text":"                }"},{"text":"                monitor.startMonitoring()"},{"text":"            }"},{"text":"        }"},{"text":"    }"},{"text":""},{"text":""},{"text":"Because the stream is an `AsyncSequence`, the call point uses the"},{"text":"`for`-`await`-`in` syntax to process each `Quake` instance as produced by the stream:"},{"text":""},{"text":"    do {"},{"text":"        for try await quake in quakeStream {"},{"text":"            print (\"Quake: \\(quake.date)\")"},{"text":"        }"},{"text":"        print (\"Stream done.\")"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingStream"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"Failure"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","Iterator"],"names":{"title":"AsyncFlatMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the flat map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the drop-first sequence."},{"text":""},{"text":"Until reaching the number of elements to drop, this iterator calls"},{"text":"`next()` on its base iterator and discards the result. If the base"},{"text":"iterator returns `nil`, indicating the end of the sequence, this"},{"text":"iterator returns `nil`. After reaching the number of elements to"},{"text":"drop, this iterator passes along the result of calling `next()` on"},{"text":"the base iterator."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS12ContinuationV5yieldyAB11YieldResultOyx__GxnF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","yield(_:)"],"names":{"title":"yield(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"nomally from its suspension point with a given element."},{"text":""},{"text":"- Parameter value: The value to yield from the continuation."},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"If nothing is awaiting the next value, this method attempts to buffer the"},{"text":"result's element."},{"text":""},{"text":"This can be called more than once and returns to the caller immediately"},{"text":"without blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:ScS12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:ScS12ContinuationV11YieldResultO"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV4nextq_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns nil. Otherwise, `next()` returns the result of"},{"text":"calling the transforming closure on the received element. If calling"},{"text":"the closure throws an error, the sequence ends and `next()` rethrows"},{"text":"the error."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency27withTaskCancellationHandler9operation8onCancelxxyYaKXE_yyYbXEtYaKlF","interfaceLanguage":"swift"},"pathComponents":["withTaskCancellationHandler(operation:onCancel:)"],"names":{"title":"withTaskCancellationHandler(operation:onCancel:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"onCancel"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Execute an operation with a cancellation handler that's immediately"},{"text":"invoked if the current task is canceled."},{"text":""},{"text":"This differs from the operation cooperatively checking for cancellation"},{"text":"and reacting to it in that the cancellation handler is _always_ and"},{"text":"_immediately_ invoked when the task is canceled. For example, even if the"},{"text":"operation is running code that never checks for cancellation, a cancellation"},{"text":"handler still runs and provides a chance to run some cleanup code."},{"text":""},{"text":"Doesn't check for cancellation, and always executes the passed `operation`."},{"text":""},{"text":"This function returns immediately and never suspends."}]},"functionSignature":{"parameters":[{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},{"name":"onCancel","internalName":"handler","declarationFragments":[{"kind":"identifier","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskCancellationHandler"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"onCancel"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"handler"},{"kind":"text","spelling":": () -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resume9returningyxn_ts5NeverORs_rlF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume(returning:)"],"names":{"title":"resume(returning:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation"},{"text":"by returning the given value."},{"text":""},{"text":"- Parameter value: The value to return from the continuation."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"parameters":[{"name":"returning","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"E","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sct4hash4intoys6HasherVz_tF","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","hash(into:)"],"names":{"title":"hash(into:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Hashes the essential components of this value by feeding them into the"},{"text":"given hasher."},{"text":""},{"text":"Implement this method to conform to the `Hashable` protocol. The"},{"text":"components used for hashing must be the same as the components compared"},{"text":"in your type's `==` operator implementation. Call `hasher.combine(_:)`"},{"text":"with each of these components."},{"text":""},{"text":"- Important: Never call `finalize()` on `hasher`. Doing so may become a"},{"text":"  compile-time error in the future."},{"text":""},{"text":"- Parameter hasher: The hasher to use when combining the components"},{"text":"  of this instance."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"hasher","declarationFragments":[{"kind":"identifier","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScT3getxyYaKF","interfaceLanguage":"swift"},"pathComponents":["Task","get()"],"names":{"title":"get()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Success"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"get() has been replaced by .value","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","Element"],"names":{"title":"AsyncDropWhileSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The drop-while sequence produces whatever type of element its base"},{"text":"sequence produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence"],"names":{"title":"AsyncThrowingFlatMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingFlatMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingFlatMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that concatenates the results of calling a given"},{"text":"error-throwing transformation with each element of this sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingFlatMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","AsyncIterator"],"names":{"title":"AsyncFlatMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:ScS12ContinuationV11TerminationO","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","Termination"],"names":{"title":"AsyncStream.Continuation.Termination","navigator":[{"kind":"identifier","spelling":"Termination"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Termination"}]},"docComment":{"lines":[{"text":"A type that indicates how the stream terminated."},{"text":""},{"text":"The `onTermination` closure receives an instance of this type."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Termination"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScC6resume4withys6ResultOyxqd__G_ts5Error_pRs_sAFRd__lF","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","resume(with:)"],"names":{"title":"resume(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Er"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">)"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the continuation by having it either"},{"text":"return normally or throw an error based on the state of the given"},{"text":"`Result` value."},{"text":""},{"text":"- Parameter result: A value to either return or throw from the"},{"text":"  continuation."},{"text":""},{"text":"A continuation must be resumed exactly once. If the continuation has"},{"text":"already been resumed through this object, then the attempt to resume"},{"text":"the continuation will trap."},{"text":""},{"text":"After `resume` enqueues the task, control immediately returns to"},{"text":"the caller. The task continues executing when its executor is"},{"text":"able to reschedule it."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0},{"name":"Er","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"},{"kind":"conformance","lhs":"Er","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Er"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScC","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation"],"names":{"title":"CheckedContinuation","navigator":[{"kind":"identifier","spelling":"CheckedContinuation"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CheckedContinuation"}]},"docComment":{"lines":[{"text":"A mechanism to interface"},{"text":"between synchronous and asynchronous code,"},{"text":"logging correctness violations."},{"text":""},{"text":"A *continuation* is an opaque representation of program state."},{"text":"To create a continuation in asynchronous code,"},{"text":"call the `withUnsafeContinuation(function:_:)` or"},{"text":"`withUnsafeThrowingContinuation(function:_:)` function."},{"text":"To resume the asynchronous task,"},{"text":"call the `resume(returning:)`,"},{"text":"`resume(throwing:)`,"},{"text":"`resume(with:)`,"},{"text":"or `resume()` method."},{"text":""},{"text":"- Important: You must call a resume method exactly once"},{"text":"  on every execution path throughout the program."},{"text":""},{"text":"Resuming from a continuation more than once is undefined behavior."},{"text":"Never resuming leaves the task in a suspended state indefinitely,"},{"text":"and leaks any associated resources."},{"text":"`CheckedContinuation` logs a message"},{"text":"if either of these invariants is violated."},{"text":""},{"text":"`CheckedContinuation` performs runtime checks"},{"text":"for missing or multiple resume operations."},{"text":"`UnsafeContinuation` avoids enforcing these invariants at runtime"},{"text":"because it aims to be a low-overhead mechanism"},{"text":"for interfacing Swift tasks with"},{"text":"event loops, delegate methods, callbacks,"},{"text":"and other non-`async` scheduling mechanisms."},{"text":"However, during development, the ability to verify that the"},{"text":"invariants are being upheld in testing is important."},{"text":"Because both types have the same interface,"},{"text":"you can replace one with the other in most circumstances,"},{"text":"without making other changes."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CheckedContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"E"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:ScM","interfaceLanguage":"swift"},"pathComponents":["MainActor"],"names":{"title":"MainActor","navigator":[{"kind":"identifier","spelling":"MainActor"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"MainActor"}]},"docComment":{"lines":[{"text":"A singleton actor whose executor is equivalent to the main"},{"text":"dispatch queue."}]},"declarationFragments":[{"kind":"attribute","spelling":"@globalActor"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"actor"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"MainActor"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScS12ContinuationV11TerminationO","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","Termination","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScP2eeoiySbScP_ScPtFZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","==(_:_:)"],"names":{"title":"==(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether two values are equal."},{"text":""},{"text":"Equality is the inverse of inequality. For any values `a` and `b`,"},{"text":"`a == b` implies that `a != b` is `false`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.associatedtype","displayName":"Associated Type"},"identifier":{"precise":"s:ScI7ElementQa","interfaceLanguage":"swift"},"pathComponents":["AsyncIteratorProtocol","Element"],"names":{"title":"Element","subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:Scf","interfaceLanguage":"swift"},"pathComponents":["SerialExecutor"],"names":{"title":"SerialExecutor","navigator":[{"kind":"identifier","spelling":"SerialExecutor"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"SerialExecutor"}]},"docComment":{"lines":[{"text":"A service that executes jobs."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"SerialExecutor"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Executor","preciseIdentifier":"s:ScF"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the prefix-while sequence."},{"text":""},{"text":"If the predicate hasn't failed yet, this method gets the next element"},{"text":"from the base sequence and calls the predicate with it. If this call"},{"text":"succeeds, this method passes along the element. Otherwise, it returns"},{"text":"`nil`, ending the sequence. If calling the predicate closure throws an"},{"text":"error, the sequence ends and `next()` rethrows the error."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScS8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Iterator"],"names":{"title":"AsyncStream.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The asynchronous iterator for iterating an asynchronous stream."},{"text":""},{"text":"This type doesn't conform to `Sendable`. Don't use it from multiple"},{"text":"concurrent contexts. It is a programmer error to invoke `next()` from a"},{"text":"concurrent context that contends with another such call, which"},{"text":"results in a call to `fatalError()`."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV4next7ElementQy_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the flat map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns `nil`. Otherwise, `next()` calls the"},{"text":"transforming closure on the received element, takes the resulting"},{"text":"asynchronous sequence, and creates an asynchronous iterator from it."},{"text":"`next()` then consumes values from this iterator until it terminates."},{"text":"At this point, `next()` is ready to receive the next value from the base"},{"text":"sequence. If `transform` throws an error, the sequence terminates."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resume8throwingyq_n_tF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume(throwing:)"],"names":{"title":"resume(throwing:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation"},{"text":"by throwing the given error."},{"text":""},{"text":"- Parameter error: The error to throw from the continuation."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"parameters":[{"name":"throwing","internalName":"error","declarationFragments":[{"kind":"identifier","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.associatedtype","displayName":"Associated Type"},"identifier":{"precise":"s:Sci13AsyncIteratorQa","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","AsyncIterator"],"names":{"title":"AsyncIterator","subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncIteratorProtocol","preciseIdentifier":"s:ScI"}]},"docComment":{"lines":[{"text":"The type of asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."}]},"declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncIteratorProtocol","preciseIdentifier":"s:ScI"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:Sct2eeoiySbSct_ScttFZ","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","==(_:_:)"],"names":{"title":"==(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether two values are equal."},{"text":""},{"text":"Equality is the inverse of inequality. For any values `a` and `b`,"},{"text":"`a == b` implies that `a != b` is `false`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScG11isCancelledSbvp","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","isCancelled"],"names":{"title":"isCancelled","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the group was canceled."},{"text":""},{"text":"To cancel a group, call the `TaskGroup.cancelAll()` method."},{"text":""},{"text":"If the task that's currently running this group is canceled,"},{"text":"the group is also implicitly canceled,"},{"text":"which is also reflected in this property's value."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency24AsyncThrowingMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","Element"],"names":{"title":"AsyncThrowingMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The map sequence produces whatever type of element its the transforming"},{"text":"closure produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Transformed"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS17makeAsyncIteratorScS0C0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScS8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScS8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncStream","preciseIdentifier":"s:ScS"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:ScS8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScC6resume4withys6ResultOyxq_G_tF","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","resume(with:)"],"names":{"title":"resume(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">)"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the continuation by having it either"},{"text":"return normally or throw an error based on the state of the given"},{"text":"`Result` value."},{"text":""},{"text":"- Parameter result: A value to either return or throw from the"},{"text":"  continuation."},{"text":""},{"text":"A continuation must be resumed exactly once. If the continuation has"},{"text":"already been resumed through this object, then the attempt to resume"},{"text":"the continuation will trap."},{"text":""},{"text":"After `resume` enqueues the task, control immediately returns to"},{"text":"the caller. The task continues executing when its executor is"},{"text":"able to reschedule it."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">)"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","Iterator"],"names":{"title":"AsyncThrowingDropWhileSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the drop-while sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG9cancelAllyyF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","cancelAll()"],"names":{"title":"cancelAll()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelAll"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Cancel all of the remaining tasks in the group."},{"text":""},{"text":"After cancellation,"},{"text":"any new results from the tasks in this group"},{"text":"are silently discarded."},{"text":""},{"text":"If you add a task to a group after canceling the group,"},{"text":"that task is canceled immediately after being added to the group."},{"text":""},{"text":"This method can only be called by the parent task that created the task"},{"text":"group."},{"text":""},{"text":"- SeeAlso: `Task.isCancelled`"},{"text":"- SeeAlso: `TaskGroup.isCancelled`"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelAll"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZ","interfaceLanguage":"swift"},"pathComponents":["Task","sleep(nanoseconds:)"],"names":{"title":"sleep(nanoseconds:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sleep"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"nanoseconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"lines":[{"text":"Suspends the current task for at least the given duration"},{"text":"in nanoseconds."},{"text":""},{"text":"If the task is canceled before the time ends,"},{"text":"this function throws `CancellationError`."},{"text":""},{"text":"This function doesn't block the underlying thread."}]},"functionSignature":{"parameters":[{"name":"nanoseconds","internalName":"duration","declarationFragments":[{"kind":"identifier","spelling":"duration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sleep"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"nanoseconds"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"duration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","Element"],"names":{"title":"AsyncThrowingDropWhileSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The drop-while sequence produces whatever type of element its base"},{"text":"sequence produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","Iterator"],"names":{"title":"AsyncFilterSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the filter sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC12wrappedValueACyxGx_tcfc","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","init(wrappedValue:)"],"names":{"title":"init(wrappedValue:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"wrappedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":")"}]},"swiftGenerics":{"parameters":[{"name":"Value","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Value","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"wrappedValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"defaultValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV04makeB8IteratorAC0F0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence"],"names":{"title":"AsyncThrowingCompactMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingCompactMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingCompactMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that maps an error-throwing closure over the base"},{"text":"sequenceâ€™s elements, omitting results that don't return a value."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingCompactMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scs8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Iterator"],"names":{"title":"AsyncThrowingStream.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The asynchronous iterator for iterating an asynchronous stream."},{"text":""},{"text":"This type is not `Sendable`. Don't use it from multiple"},{"text":"concurrent contexts. It is a programmer error to invoke `next()` from a"},{"text":"concurrent context that contends with another such call, which"},{"text":"results in a call to `fatalError()`."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","AsyncIterator"],"names":{"title":"AsyncMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resume4withys6ResultOyxq_G_tF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume(with:)"],"names":{"title":"resume(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">)"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation"},{"text":"by returning or throwing the given result value."},{"text":""},{"text":"- Parameter result: The result."},{"text":"  If it contains a `.success` value,"},{"text":"  the continuation returns that value;"},{"text":"  otherwise, it throws the `.error` value."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">)"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV4nextq_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the compact map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns `nil`. Otherwise, `next()` calls the"},{"text":"transforming closure on the received element, returning it if the"},{"text":"transform returns a non-`nil` value. If the transform returns `nil`,"},{"text":"this method continues to wait for further elements until it gets one"},{"text":"that transforms to a non-`nil` value. If calling the closure throws an"},{"text":"error, the sequence ends and `next()` rethrows the error."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","Element"],"names":{"title":"AsyncFilterSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The filter sequence produces whatever type of element its base"},{"text":"sequence produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScC6resumeyyytRszrlF","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","resume()"],"names":{"title":"resume()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the continuation by having it return normally"},{"text":"from its suspension point."},{"text":""},{"text":"A continuation must be resumed exactly once. If the continuation has"},{"text":"already been resumed through this object, then the attempt to resume"},{"text":"the continuation will trap."},{"text":""},{"text":"After `resume` enqueues the task, control immediately returns to"},{"text":"the caller. The task continues executing when its executor is"},{"text":"able to reschedule it."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"T","rhs":"Void"},{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScJ","interfaceLanguage":"swift"},"pathComponents":["UnownedJob"],"names":{"title":"UnownedJob","navigator":[{"kind":"identifier","spelling":"UnownedJob"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnownedJob"}]},"docComment":{"lines":[{"text":"A unit of scheduleable work."},{"text":""},{"text":"Unless you're implementing a scheduler,"},{"text":"you don't generally interact with jobs directly."}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnownedJob"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG7addTask8priority9operationyScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","addTask(priority:operation:)"],"names":{"title":"addTask(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTask"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Adds a child task to the group."},{"text":""},{"text":"- Parameters:"},{"text":"  - overridingPriority: The priority of the operation task."},{"text":"    Omit this parameter or pass `.unspecified`"},{"text":"    to set the child task's priority to the priority of the group."},{"text":"  - operation: The operation to execute as part of the task group."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTask"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG3add8priority9operationSbScPSg_xyYaYbcntYaF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","add(priority:operation:)"],"names":{"title":"add(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","AsyncIterator"],"names":{"title":"AsyncThrowingDropWhileSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:ScT2eeoiySbScTyxq_G_ABtFZ","interfaceLanguage":"swift"},"pathComponents":["Task","==(_:_:)"],"names":{"title":"==(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether two values are equal."},{"text":""},{"text":"Equality is the inverse of inequality. For any values `a` and `b`,"},{"text":"`a == b` implies that `a != b` is `false`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">, "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScC12continuation8functionScCyxq_GSccyxq_G_SStcfc","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","init(continuation:function:)"],"names":{"title":"init(continuation:function:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"continuation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Creates a checked continuation from an unsafe continuation."},{"text":""},{"text":"Instead of calling this initializer,"},{"text":"most code calls the `withCheckedContinuation(function:_:)` or"},{"text":"`withCheckedThrowingContinuation(function:_:)` function instead."},{"text":"You only need to initialize"},{"text":"your own `CheckedContinuation<T, E>` if you already have an"},{"text":"`UnsafeContinuation` you want to impose checking on."},{"text":""},{"text":"- Parameters:"},{"text":"  - continuation: An instance of `UnsafeContinuation`"},{"text":"    that hasn't yet been resumed."},{"text":"    After passing the unsafe continuation to this initializer,"},{"text":"    don't use it outside of this object."},{"text":"  - function: A string identifying the declaration that is the notional"},{"text":"    source for the continuation, used to identify the continuation in"},{"text":"    runtime diagnostics related to misuse of this continuation."}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"continuation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":">, "},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#function"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resume4withys6ResultOyxqd__G_ts5Error_pRs_sAFRd__lF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume(with:)"],"names":{"title":"resume(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Er"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">)"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation"},{"text":"by returning or throwing the given result value."},{"text":""},{"text":"- Parameter result: The result."},{"text":"  If it contains a `.success` value,"},{"text":"  the continuation returns that value;"},{"text":"  otherwise, it throws the `.error` value."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"result","declarationFragments":[{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0},{"name":"Er","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"},{"kind":"conformance","lhs":"Er","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Er"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Er"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the drop-while sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator and evaluates the"},{"text":"result with the `predicate` closure. As long as the predicate returns"},{"text":"`true`, this method returns `nil`. After the predicate returns `false`,"},{"text":"for a value received from the base iterator, this method returns that"},{"text":"value. After that, the iterator returns values received from its"},{"text":"base iterator as-is, and never executes the predicate closure again."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority"],"names":{"title":"TaskPriority","navigator":[{"kind":"identifier","spelling":"TaskPriority"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskPriority"}]},"docComment":{"lines":[{"text":"The priority of a task."},{"text":""},{"text":"The executor determines how priority information affects the way tasks are scheduled."},{"text":"The behavior varies depending on the executor currently being used."},{"text":"Typically, executors attempt to run tasks with a higher priority"},{"text":"before tasks with a lower priority."},{"text":"However, the semantics of how priority is treated are left up to each"},{"text":"platform and `Executor` implementation."},{"text":""},{"text":"Child tasks automatically inherit their parent task's priority."},{"text":"Detached tasks created by `detach(priority:operation:)` don't inherit task priority"},{"text":"because they aren't attached to the current task."},{"text":""},{"text":"In some situations the priority of a task is elevated ---"},{"text":"that is, the task is treated as it if had a higher priority,"},{"text":"without actually changing the priority of the task:"},{"text":""},{"text":"- If a task runs on behalf of an actor,"},{"text":"  and a new higher-priority task is enqueued to the actor,"},{"text":"  then the actor's current task is temporarily elevated"},{"text":"  to the priority of the enqueued task."},{"text":"  This priority elevation allows the new task"},{"text":"  to be processed at the priority it was enqueued with."},{"text":"- If a a higher-priority task calls the `get()` method,"},{"text":"  then the priority of this task increases until the task completes."},{"text":""},{"text":"In both cases, priority elevation helps you prevent a low-priority task"},{"text":"from blocking the execution of a high priority task,"},{"text":"which is also known as *priority inversion*."}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskPriority"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum","displayName":"Enumeration"},"identifier":{"precise":"s:Scs12ContinuationV11TerminationO","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","Termination"],"names":{"title":"AsyncThrowingStream.Continuation.Termination","navigator":[{"kind":"identifier","spelling":"Termination"}],"subHeading":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Termination"}]},"docComment":{"lines":[{"text":"A type that indicates how the stream terminated."},{"text":""},{"text":"The `onTermination` closure receives an instance of this type."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"enum"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Termination"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence"],"names":{"title":"AsyncDropFirstSequence","navigator":[{"kind":"identifier","spelling":"AsyncDropFirstSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncDropFirstSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence which omits a specified number of elements from the"},{"text":"base asynchronous sequence, then passes through all remaining elements."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncDropFirstSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Sce","interfaceLanguage":"swift"},"pathComponents":["UnownedSerialExecutor"],"names":{"title":"UnownedSerialExecutor","navigator":[{"kind":"identifier","spelling":"UnownedSerialExecutor"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnownedSerialExecutor"}]},"docComment":{"lines":[{"text":"An unowned reference to a serial executor (a `SerialExecutor`"},{"text":"value)."},{"text":""},{"text":"This is an optimized type used internally by the core scheduling"},{"text":"operations.  It is an unowned reference to avoid unnecessary"},{"text":"reference-counting work even when working with actors abstractly."},{"text":"Generally there are extra constraints imposed on core operations"},{"text":"in order to allow this.  For example, keeping an actor alive must"},{"text":"also keep the actor's associated executor alive; if they are"},{"text":"different objects, the executor must be referenced strongly by the"},{"text":"actor."}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnownedSerialExecutor"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORs_rlE3getxyYaF","interfaceLanguage":"swift"},"pathComponents":["Task","get()"],"names":{"title":"get()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Success"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"get() has been replaced by .value","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","Iterator"],"names":{"title":"AsyncDropWhileSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the drop-while sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs12ContinuationV5yieldyAB11YieldResultOyxq___GxnF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","yield(_:)"],"names":{"title":"yield(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"nomally from its suspension point with a given element."},{"text":""},{"text":"- Parameter value: The value to yield from the continuation."},{"text":"- Returns: A `YieldResult` that indicates the success or failure of the"},{"text":"  yield operation."},{"text":""},{"text":"If nothing is awaiting the next value, the method attempts to buffer the"},{"text":"result's element."},{"text":""},{"text":"This can be called more than once and returns to the caller immediately"},{"text":"without blocking for any awaiting consumption from the iteration."}]},"functionSignature":{"parameters":[{"name":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"YieldResult","preciseIdentifier":"s:Scs12ContinuationV11YieldResultO"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream"],"names":{"title":"AsyncStream","navigator":[{"kind":"identifier","spelling":"AsyncStream"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncStream"}]},"docComment":{"lines":[{"text":"An asynchronous sequence generated from a closure that calls a continuation"},{"text":"to produce new elements."},{"text":""},{"text":"`AsyncStream` conforms to `AsyncSequence`, providing a convenient way to"},{"text":"create an asynchronous sequence without manually implementing an"},{"text":"asynchronous iterator. In particular, an asynchronous stream is well-suited"},{"text":"to adapt callback- or delegation-based APIs to participate with"},{"text":"`async`-`await`."},{"text":""},{"text":"You initialize an `AsyncStream` with a closure that receives an"},{"text":"`AsyncStream.Continuation`. Produce elements in this closure, then provide"},{"text":"them to the stream by calling the continuation's `yield(_:)` method. When"},{"text":"there are no further elements to produce, call the continuation's"},{"text":"`finish()` method. This causes the sequence iterator to produce a `nil`,"},{"text":"which terminates the sequence. The continuation conforms to `Sendable`, which permits"},{"text":"calling it from concurrent contexts external to the iteration of the"},{"text":"`AsyncStream`."},{"text":""},{"text":"An arbitrary source of elements can produce elements faster than they are"},{"text":"consumed by a caller iterating over them. Because of this, `AsyncStream`"},{"text":"defines a buffering behavior, allowing the stream to buffer a specific"},{"text":"number of oldest or newest elements. By default, the buffer limit is"},{"text":"`Int.max`, which means the value is unbounded."},{"text":""},{"text":"### Adapting Existing Code to Use Streams"},{"text":""},{"text":"To adapt existing callback code to use `async`-`await`, use the callbacks"},{"text":"to provide values to the stream, by using the continuation's `yield(_:)`"},{"text":"method."},{"text":""},{"text":"Consider a hypothetical `QuakeMonitor` type that provides callers with"},{"text":"`Quake` instances every time it detects an earthquake. To receive callbacks,"},{"text":"callers set a custom closure as the value of the monitor's"},{"text":"`quakeHandler` property, which the monitor calls back as necessary."},{"text":""},{"text":"    class QuakeMonitor {"},{"text":"        var quakeHandler: ((Quake) -> Void)?"},{"text":""},{"text":"        func startMonitoring() {â€¦}"},{"text":"        func stopMonitoring() {â€¦}"},{"text":"    }"},{"text":""},{"text":"To adapt this to use `async`-`await`, extend the `QuakeMonitor` to add a"},{"text":"`quakes` property, of type `AsyncStream<Quake>`. In the getter for this"},{"text":"property, return an `AsyncStream`, whose `build` closure -- called at"},{"text":"runtime to create the stream -- uses the continuation to perform the"},{"text":"following steps:"},{"text":""},{"text":"1. Creates a `QuakeMonitor` instance."},{"text":"2. Sets the monitor's `quakeHandler` property to a closure that receives"},{"text":"each `Quake` instance and forwards it to the stream by calling the"},{"text":"continuation's `yield(_:)` method."},{"text":"3. Sets the continuation's `onTermination` property to a closure that"},{"text":"calls `stopMonitoring()` on the monitor."},{"text":"4. Calls `startMonitoring` on the `QuakeMonitor`."},{"text":""},{"text":"    extension QuakeMonitor {"},{"text":""},{"text":"        static var quakes: AsyncStream<Quake> {"},{"text":"            AsyncStream { continuation in"},{"text":"                let monitor = QuakeMonitor()"},{"text":"                monitor.quakeHandler = { quake in"},{"text":"                    continuation.yield(quake)"},{"text":"                }"},{"text":"                continuation.onTermination = { @Sendable _ in"},{"text":"                    monitor.stopMonitoring()"},{"text":"                }"},{"text":"                monitor.startMonitoring()"},{"text":"            }"},{"text":"        }"},{"text":"    }"},{"text":""},{"text":"Because the stream is an `AsyncSequence`, the call point can use the"},{"text":"`for`-`await`-`in` syntax to process each `Quake` instance as the stream"},{"text":"produces it:"},{"text":""},{"text":"    for await quake in QuakeMonitor.quakes {"},{"text":"        print (\"Quake: \\(quake.date)\")"},{"text":"    }"},{"text":"    print (\"Stream finished.\")"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncStream"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Element"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScI4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncIteratorProtocol","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Asynchronously advances to the next element and returns it, or ends the"},{"text":"sequence if there is no next element."},{"text":""},{"text":"- Returns: The next element, if it exists, or `nil` to signal the end of"},{"text":"  the sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV04makeB8IteratorAC0H0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV04makeB8IteratorAC0F0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:Scs12ContinuationV13onTerminationyAB0C0Oyxq___GYbcSgvp","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","onTermination"],"names":{"title":"onTermination","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"onTermination"},{"kind":"text","spelling":": (("},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Termination","preciseIdentifier":"s:Scs12ContinuationV11TerminationO"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")?"}]},"docComment":{"lines":[{"text":"A callback to invoke when canceling iteration of an asynchronous"},{"text":"stream."},{"text":""},{"text":"If an `onTermination` callback is set, using task cancellation to"},{"text":"terminate iteration of an `AsyncThrowingStream` results in a call to this"},{"text":"callback."},{"text":""},{"text":"Canceling an active iteration invokes the `onTermination` callback"},{"text":"first, and then resumes by yielding `nil` or throwing an error from the"},{"text":"iterator. This means that you can perform needed cleanup in the"},{"text":" cancellation handler. After reaching a terminal state, the"},{"text":" `AsyncThrowingStream` disposes of the callback."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"onTermination"},{"kind":"text","spelling":": (("},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Continuation","preciseIdentifier":"s:Scs12ContinuationV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Termination","preciseIdentifier":"s:Scs12ContinuationV11TerminationO"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":")? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"nonmutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"set"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg8IteratorV6cancelyyF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","Iterator","cancel()"],"names":{"title":"cancel()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE5sleepyys6UInt64VYaFZ","interfaceLanguage":"swift"},"pathComponents":["Task","sleep(_:)"],"names":{"title":"sleep(_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sleep"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"}]},"functionSignature":{"parameters":[{"name":"duration","declarationFragments":[{"kind":"identifier","spelling":"duration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sleep"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"duration"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt64","preciseIdentifier":"s:s6UInt64V"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"Task.sleep(nanoseconds:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","AsyncIterator"],"names":{"title":"AsyncDropWhileSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG4nextxSgyYaF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Wait for the next child task to complete,"},{"text":"and return the value it returned."},{"text":""},{"text":"The values returned by successive calls to this method"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":"For example:"},{"text":""},{"text":"    group.addTask { 1 }"},{"text":"    group.addTask { 2 }"},{"text":""},{"text":"    print(await group.next())"},{"text":"    // Prints either \"2\" or \"1\"."},{"text":""},{"text":"If there aren't any pending tasks in the task group,"},{"text":"this method returns `nil`,"},{"text":"which lets you write the following"},{"text":"to wait for a single task to complete:"},{"text":""},{"text":"    if let first = try await group.next() {"},{"text":"       return first"},{"text":"    }"},{"text":""},{"text":"It also lets you write code like the following"},{"text":"to wait for all the child tasks to complete,"},{"text":"collecting the values they returned:"},{"text":""},{"text":"    while let first = try await group.next() {"},{"text":"       collected += value"},{"text":"    }"},{"text":"    return collected"},{"text":""},{"text":"Awaiting on an empty group"},{"text":"immediate returns `nil` without suspending."},{"text":""},{"text":"You can also use a `for`-`await`-`in` loop to collect results of a task group:"},{"text":""},{"text":"    for await try value in group {"},{"text":"        collected += value"},{"text":"    }"},{"text":""},{"text":"Don't call this method from outside the task"},{"text":"where you created this task group."},{"text":"In most cases, the Swift type system prevents this mistake."},{"text":"For example, because the `add(priority:operation:)` method is mutating,"},{"text":"that method can't be called from a concurrent execution context like a child task."},{"text":""},{"text":"- Returns: The value returned by the next child task that completes."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScC6resume8throwingyq_n_tF","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","resume(throwing:)"],"names":{"title":"resume(throwing:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the continuation by having it throw an error"},{"text":"from its suspension point."},{"text":""},{"text":"- Parameter error: The error to throw from the continuation."},{"text":""},{"text":"A continuation must be resumed exactly once. If the continuation has"},{"text":"already been resumed through this object, then the attempt to resume"},{"text":"the continuation will trap."},{"text":""},{"text":"After `resume` enqueues the task, control immediately returns to"},{"text":"the caller. The task continues executing when its executor is"},{"text":"able to reschedule it."}]},"functionSignature":{"parameters":[{"name":"throwing","internalName":"error","declarationFragments":[{"kind":"identifier","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"E"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV04makeB8IteratorAC0H0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence"],"names":{"title":"AsyncFlatMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncFlatMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncFlatMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that concatenates the results of calling a given"},{"text":"transformation with each element of this sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncFlatMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency5async8priority9operationScTyxs5Error_pGScPSg_xyYaYbKcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["async(priority:operation:)"],"names":{"title":"async(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`async` was replaced by `Task.init` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg8IteratorV4nextxSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Advances to and returns the result of the next child task."},{"text":""},{"text":"The elements returned from this method"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":"After this method returns `nil`,"},{"text":"this iterator is guaranteed to never produce more values."},{"text":""},{"text":"For more information about the iteration order and semantics,"},{"text":"see `ThrowingTaskGroup.next()` "},{"text":""},{"text":"- Throws: The error thrown by the next child task that completes."},{"text":""},{"text":"- Returns: The value returned by the next child task that completes,"},{"text":"  or `nil` if there are no remaining child tasks,"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScS8IteratorV4nextxSgyYaF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"The next value from the asynchronous stream."},{"text":""},{"text":"When `next()` returns `nil`, this signifies the end of the"},{"text":"`AsyncStream`."},{"text":""},{"text":"It is a programmer error to invoke `next()` from a"},{"text":"concurrent context that contends with another such call, which"},{"text":"results in a call to `fatalError()`."},{"text":""},{"text":"If you cancel the task this iterator is running in while `next()` is"},{"text":"awaiting a value, the `AsyncStream` terminates. In this case, `next()`"},{"text":"might return `nil` immediately, or return `nil` on subsequent calls."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScT9getResults0B0Oyxq_GyYaF","interfaceLanguage":"swift"},"pathComponents":["Task","getResult()"],"names":{"title":"getResult()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getResult"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"getResult"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"getResult() has been replaced by .result","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs17makeAsyncIteratorScs0C0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scs8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scs8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingStream","preciseIdentifier":"s:Scs"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scs8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","Iterator"],"names":{"title":"AsyncThrowingPrefixWhileSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the prefix-while sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency22AsyncDropWhileSequenceV04makeB8IteratorAC0G0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates an instance of the drop-while sequence iterator."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:Sct11isCancelledSbvp","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","isCancelled"],"names":{"title":"isCancelled","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the current task was canceled."},{"text":""},{"text":"After the value of this property becomes `true`, it remains `true` indefinitely."},{"text":"There is no way to uncancel a task."},{"text":""},{"text":"- SeeAlso: `checkCancellation()`"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs12ContinuationV6finish8throwingyq_Sgn_tF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","finish(throwing:)"],"names":{"title":"finish(throwing:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finish"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"?)"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the next iteration point by having it return"},{"text":"nil, which signifies the end of the iteration."},{"text":""},{"text":"- Parameter error: The error to throw, or `nil`, to finish normally."},{"text":""},{"text":"Calling this function more than once has no effect. After calling"},{"text":"finish, the stream enters a terminal state and doesn't produce any additional"},{"text":"elements."}]},"functionSignature":{"parameters":[{"name":"throwing","internalName":"error","declarationFragments":[{"kind":"identifier","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finish"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"throwing"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"error"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"? = nil)"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","Iterator"],"names":{"title":"AsyncMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency16AsyncMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","Element"],"names":{"title":"AsyncMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The map sequence produces whatever type of element its transforming"},{"text":"closure produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"Transformed","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Transformed"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","AsyncIterator"],"names":{"title":"AsyncThrowingPrefixWhileSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","AsyncIterator"],"names":{"title":"AsyncFilterSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scc6resumeyyytRszrlF","interfaceLanguage":"swift"},"pathComponents":["UnsafeContinuation","resume()"],"names":{"title":"resume()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Resume the task that's awaiting the continuation by returning."},{"text":""},{"text":"A continuation must be resumed exactly once."},{"text":"If the continuation has already resumed,"},{"text":"then calling this method results in undefined behavior."},{"text":""},{"text":"After calling this method,"},{"text":"control immediately returns to the caller."},{"text":"The task continues executing"},{"text":"when its executor schedules it."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"T","rhs":"Void"},{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup"],"names":{"title":"TaskGroup","navigator":[{"kind":"identifier","spelling":"TaskGroup"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskGroup"}]},"docComment":{"lines":[{"text":"A group that contains dynamically created child tasks."},{"text":""},{"text":"To create a task group,"},{"text":"call the `withTaskGroup(of:returning:body:)` method."},{"text":""},{"text":"Don't use a task group from outside the task where you created it."},{"text":"In most cases,"},{"text":"the Swift type system prevents a task group from escaping like that"},{"text":"because adding a child task to a task group is a mutating operation,"},{"text":"and mutation operations can't be performed"},{"text":"from a concurrent execution context like a child task."},{"text":""},{"text":"For information about the language-level concurrency model that `TaskGroup` is part of,"},{"text":"see [Concurrency][concurrency] in [The Swift Programming Language][tspl]."},{"text":""},{"text":"[concurrency]: https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"},{"text":"[tspl]: https://docs.swift.org/swift-book/"},{"text":""}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@frozen"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScC6resume9returningyxn_tF","interfaceLanguage":"swift"},"pathComponents":["CheckedContinuation","resume(returning:)"],"names":{"title":"resume(returning:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Resume the task awaiting the continuation by having it return normally"},{"text":"from its suspension point."},{"text":""},{"text":"- Parameter value: The value to return from the continuation."},{"text":""},{"text":"A continuation must be resumed exactly once. If the continuation has"},{"text":"already been resumed through this object, then the attempt to resume"},{"text":"the continuation will trap."},{"text":""},{"text":"After `resume` enqueues the task, control immediately returns to"},{"text":"the caller. The task continues executing when its executor is"},{"text":"able to reschedule it."}]},"functionSignature":{"parameters":[{"name":"returning","internalName":"value","declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0},{"name":"E","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"resume"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency21withUnsafeCurrentTask4bodyxxSctSgKXE_tKlF","interfaceLanguage":"swift"},"pathComponents":["withUnsafeCurrentTask(body:)"],"names":{"title":"withUnsafeCurrentTask(body:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeCurrentTask"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Calls a closure with an unsafe reference to the current task."},{"text":""},{"text":"If you call this function from the body of an asynchronous function,"},{"text":"the unsafe task handle passed to the closure is always non-`nil`"},{"text":"because an asynchronous function always runs in the context of a task."},{"text":"However, if you call this function from the body of a synchronous function,"},{"text":"and that function isn't executing in the context of any task,"},{"text":"the unsafe task handle is `nil`."},{"text":""},{"text":"Don't store an unsafe task reference"},{"text":"for use outside this method's closure."},{"text":"Storing an unsafe reference doesn't affect the task's actual life cycle,"},{"text":"and the behavior of accessing an unsafe task reference"},{"text":"outside of the `withUnsafeCurrentTask(body:)` method's closure isn't defined."},{"text":"Instead, use the `task` property of `UnsafeCurrentTask`"},{"text":"to access an instance of `Task` that you can store long-term"},{"text":"and interact with outside of the closure body."},{"text":""},{"text":"- Parameters:"},{"text":"  - body: A closure that takes an `UnsafeCurrentTask` parameter."},{"text":"    If `body` has a return value,"},{"text":"    that value is also used as the return value"},{"text":"    for the `withUnsafeCurrentTask(body:)` function."},{"text":""},{"text":"- Returns: The return value, if any, of the `body` closure."}]},"functionSignature":{"parameters":[{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeCurrentTask"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeCurrentTask","preciseIdentifier":"s:Sct"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE6Handlea","interfaceLanguage":"swift"},"pathComponents":["Task","Handle"],"names":{"title":"Task.Handle","navigator":[{"kind":"identifier","spelling":"Handle"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Handle"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Handle"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"Task.Handle has been removed; use Task","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency6detach8priority9operationScTyxs5Error_pGScPSg_xyYaYbKcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["detach(priority:operation:)"],"names":{"title":"detach(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detach"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detach"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`detach` was replaced by `Task.detached` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG5async8priority9operationyScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","async(priority:operation:)"],"names":{"title":"async(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","interfaceLanguage":"swift"},"pathComponents":["GlobalActor","sharedUnownedExecutor"],"names":{"title":"sharedUnownedExecutor","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"The shared executor instance that will be used to provide"},{"text":"mutually-exclusive access for the global actor."},{"text":""},{"text":"The value of this property must be equivalent to `shared.unownedExecutor`."}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.class","displayName":"Class"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC","interfaceLanguage":"swift"},"pathComponents":["TaskLocal"],"names":{"title":"TaskLocal","navigator":[{"kind":"identifier","spelling":"TaskLocal"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskLocal"}]},"docComment":{"lines":[{"text":"Property wrapper that defines a task-local value key."},{"text":""},{"text":"A task-local value is a value that can be bound and read in the context of a"},{"text":"`Task`. It is implicitly carried with the task, and is accessible by any"},{"text":"child tasks the task creates (such as TaskGroup or `async let` created tasks)."},{"text":""},{"text":"### Task-local declarations"},{"text":""},{"text":"Task locals must be declared as static properties (or global properties,"},{"text":"once property wrappers support these), like this:"},{"text":""},{"text":"    enum TracingExample {"},{"text":"        @TaskLocal"},{"text":"        static let traceID: TraceID?"},{"text":"    }"},{"text":""},{"text":"### Default values"},{"text":"Task local values of optional types default to `nil`. It is possible to define"},{"text":"not-optional task-local values, and an explicit default value must then be"},{"text":"defined instead."},{"text":""},{"text":"The default value is returned whenever the task-local is read"},{"text":"from a context which either: has no task available to read the value from"},{"text":"(e.g. a synchronous function, called without any asynchronous function in its call stack),"},{"text":""},{"text":""},{"text":"### Reading task-local values"},{"text":"Reading task local values is simple and looks the same as-if reading a normal"},{"text":"static property:"},{"text":""},{"text":"    guard let traceID = TracingExample.traceID else {"},{"text":"      print(\"no trace id\")"},{"text":"      return"},{"text":"    }"},{"text":"    print(traceID)"},{"text":""},{"text":"It is possible to perform task-local value reads from either asynchronous"},{"text":"or synchronous functions. Within asynchronous functions, as a \"current\" task"},{"text":"is always guaranteed to exist, this will perform the lookup in the task local context."},{"text":""},{"text":"A lookup made from the context of a synchronous function, that is not called"},{"text":"from an asynchronous function (!), will immediately return the task-local's"},{"text":"default value."},{"text":""},{"text":"### Binding task-local values"},{"text":"Task local values cannot be `set` directly and must instead be bound using"},{"text":"the scoped `$traceID.withValue() { ... }` operation. The value is only bound"},{"text":"for the duration of that scope, and is available to any child tasks which"},{"text":"are created within that scope."},{"text":""},{"text":"Detached tasks do not inherit task-local values, however tasks created using"},{"text":"the `Task { ... }` initializer do inherit task-locals by copying them to the"},{"text":"new asynchronous task, even though it is an un-structured task."},{"text":""},{"text":"### Examples"},{"text":""},{"text":"    @TaskLocal"},{"text":"    static var traceID: TraceID?"},{"text":""},{"text":"    print(\"traceID: \\(traceID)\") // traceID: nil"},{"text":""},{"text":"    $traceID.withValue(1234) { // bind the value"},{"text":"      print(\"traceID: \\(traceID)\") // traceID: 1234"},{"text":"      call() // traceID: 1234"},{"text":""},{"text":"      Task { // unstructured tasks do inherit task locals by copying"},{"text":"        call() // traceID: 1234"},{"text":"      }"},{"text":""},{"text":"      Task.detached { // detached tasks do not inherit task-local values"},{"text":"        call() // traceID: nil"},{"text":"      }"},{"text":"    }"},{"text":""},{"text":"    func call() {"},{"text":"      print(\"traceID: \\(traceID)\") // 1234"},{"text":"    }"},{"text":""},{"text":"This type must be a `class` so it has a stable identity, that is used as key"},{"text":"value for lookups in the task local storage."}]},"swiftGenerics":{"parameters":[{"name":"Value","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Value","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@propertyWrapper"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"TaskLocal"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Value"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE17checkCancellationyyKFZ","interfaceLanguage":"swift"},"pathComponents":["Task","checkCancellation()"],"names":{"title":"checkCancellation()","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"checkCancellation"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"lines":[{"text":"Throws an error if the task was canceled."},{"text":""},{"text":"The error is always an instance of `CancellationError`."},{"text":""},{"text":"- SeeAlso: `isCancelled()`"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"checkCancellation"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","Element"],"names":{"title":"AsyncThrowingFilterSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The filter sequence produces whatever type of element its base"},{"text":"sequence produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScT4hash4intoys6HasherVz_tF","interfaceLanguage":"swift"},"pathComponents":["Task","hash(into:)"],"names":{"title":"hash(into:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Hashes the essential components of this value by feeding them into the"},{"text":"given hasher."},{"text":""},{"text":"Implement this method to conform to the `Hashable` protocol. The"},{"text":"components used for hashing must be the same as the components compared"},{"text":"in your type's `==` operator implementation. Call `hasher.combine(_:)`"},{"text":"with each of these components."},{"text":""},{"text":"- Important: Never call `finalize()` on `hasher`. Doing so may become a"},{"text":"  compile-time error in the future."},{"text":""},{"text":"- Parameter hasher: The hasher to use when combining the components"},{"text":"  of this instance."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"hasher","declarationFragments":[{"kind":"identifier","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"hash"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"hasher"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Hasher","preciseIdentifier":"s:s6HasherV"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE15currentPriorityScPvpZ","interfaceLanguage":"swift"},"pathComponents":["Task","currentPriority"],"names":{"title":"currentPriority","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"currentPriority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"docComment":{"lines":[{"text":"The current task's priority."},{"text":""},{"text":"If you access this property outside of any task,"},{"text":"this queries the system to determine the"},{"text":"priority at which the current function is running."},{"text":"If the system can't provide a priority,"},{"text":"this property's value is `Priority.default`."}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"currentPriority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","...(_:)"],"names":{"title":"...(_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns a partial range extending upward from a lower bound."},{"text":""},{"text":"Use the postfix range operator (postfix `...`) to create a partial range"},{"text":"of any type that conforms to the `Comparable` protocol. This example"},{"text":"creates a `PartialRangeFrom<Double>` instance that includes any value"},{"text":"greater than or equal to `5.0`."},{"text":""},{"text":"    let atLeastFive = 5.0..."},{"text":""},{"text":"    atLeastFive.contains(4.0)     // false"},{"text":"    atLeastFive.contains(5.0)     // true"},{"text":"    atLeastFive.contains(6.0)     // true"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the partial range's lower bound up to the end"},{"text":"of the collection."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[3...])"},{"text":"    // Prints \"[40, 50, 60, 70]\""},{"text":""},{"text":"- Parameter minimum: The lower bound for the range."},{"text":""},{"text":"- Precondition: `minimum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"name":"minimum","declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeFrom","preciseIdentifier":"s:s16PartialRangeFromV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE17CancellationErrorScEyFZ","interfaceLanguage":"swift"},"pathComponents":["Task","CancellationError()"],"names":{"title":"CancellationError()","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CancellationError"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"CancellationError","preciseIdentifier":"s:ScE"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"CancellationError","preciseIdentifier":"s:ScE"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CancellationError"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"CancellationError","preciseIdentifier":"s:ScE"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"Task.CancellationError has been removed; use CancellationError","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","AsyncIterator"],"names":{"title":"AsyncCompactMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the drop-while sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator and evaluates the"},{"text":"result with the `predicate` closure. As long as the predicate returns"},{"text":"`true`, this method returns `nil`. After the predicate returns `false`,"},{"text":"for a value received from the base iterator, this method returns that"},{"text":"value. After that, the iterator returns values received from its"},{"text":"base iterator as-is, and never executes the predicate closure again."},{"text":"If calling the closure throws an error, the sequence ends and `next()`"},{"text":"rethrows the error."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency30withUnsafeThrowingContinuationyxySccyxs5Error_pGXEYaKlF","interfaceLanguage":"swift"},"pathComponents":["withUnsafeThrowingContinuation(_:)"],"names":{"title":"withUnsafeThrowingContinuation(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeThrowingContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Suspends the current task,"},{"text":"then calls the given closure with an unsafe throwing continuation for the current task."},{"text":""},{"text":"- Parameter fn: A closure that takes an `UnsafeContinuation` parameter."},{"text":"You must resume the continuation exactly once."},{"text":""},{"text":"- Returns: The value passed to the continuation by the closure."},{"text":""},{"text":"If `resume(throwing:)` is called on the continuation,"},{"text":"this function throws that error."}]},"functionSignature":{"parameters":[{"name":"fn","declarationFragments":[{"kind":"identifier","spelling":"fn"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeThrowingContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"fn"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","Iterator","Element"],"names":{"title":"AsyncCompactMapSequence.Iterator.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ElementOfResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","Iterator"],"names":{"title":"AsyncCompactMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the compact map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ","interfaceLanguage":"swift"},"pathComponents":["GlobalActor","shared"],"names":{"title":"shared","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shared"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"ActorType"}]},"docComment":{"lines":[{"text":"The shared actor instance that will be used to provide mutually-exclusive"},{"text":"access to declarations annotated with the given global actor type."},{"text":""},{"text":"The value of this property must always evaluate to the same actor"},{"text":"instance."}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shared"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"ActorType"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE7suspendyyYaFZ","interfaceLanguage":"swift"},"pathComponents":["Task","suspend()"],"names":{"title":"suspend()","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"suspend"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"suspend"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"yield()","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG20spawnUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","spawnUnlessCancelled(priority:operation:)"],"names":{"title":"spawnUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawnUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawnUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTaskUnlessCancelled(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","Iterator","Element"],"names":{"title":"AsyncThrowingCompactMapSequence.Iterator.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ElementOfResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV04makeB8IteratorAC0G0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG22addTaskUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","addTaskUnlessCancelled(priority:operation:)"],"names":{"title":"addTaskUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTaskUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Adds a child task to the group, unless the group has been canceled."},{"text":""},{"text":"- Parameters:"},{"text":"  - overridingPriority: The priority of the operation task."},{"text":"    Omit this parameter or pass `.unspecified`"},{"text":"    to set the child task's priority to the priority of the group."},{"text":"  - operation: The operation to execute as part of the task group."},{"text":"- Returns: `true` if the child task was added to the group;"},{"text":"  otherwise `false`."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTaskUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","Iterator"],"names":{"title":"AsyncThrowingFilterSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the filter sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP11unspecifiedScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","unspecified"],"names":{"title":"unspecified","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unspecified"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unspecified"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"unspecified priority will be removed; use nil","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence"],"names":{"title":"AsyncThrowingFilterSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingFilterSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingFilterSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given error-throwing predicate."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingFilterSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","AsyncIterator"],"names":{"title":"AsyncThrowingFlatMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","AsyncIterator"],"names":{"title":"AsyncThrowingFilterSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG5spawn8priority9operationyScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","spawn(priority:operation:)"],"names":{"title":"spawn(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawn"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawn"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence"],"names":{"title":"AsyncPrefixWhileSequence","navigator":[{"kind":"identifier","spelling":"AsyncPrefixWhileSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncPrefixWhileSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy a given predicate."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncPrefixWhileSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:12_Concurrency11GlobalActorPAAE21sharedUnownedExecutorScevpZ","interfaceLanguage":"swift"},"pathComponents":["GlobalActor","sharedUnownedExecutor"],"names":{"title":"sharedUnownedExecutor","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"The shared executor instance that will be used to provide"},{"text":"mutually-exclusive access for the global actor."},{"text":""},{"text":"The value of this property must be equivalent to `shared.unownedExecutor`."}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","...(_:)"],"names":{"title":"...(_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns a partial range up to, and including, its upper bound."},{"text":""},{"text":"Use the prefix closed range operator (prefix `...`) to create a partial"},{"text":"range of any type that conforms to the `Comparable` protocol. This"},{"text":"example creates a `PartialRangeThrough<Double>` instance that includes"},{"text":"any value less than or equal to `5.0`."},{"text":""},{"text":"    let throughFive = ...5.0"},{"text":""},{"text":"    throughFive.contains(4.0)     // true"},{"text":"    throughFive.contains(5.0)     // true"},{"text":"    throughFive.contains(6.0)     // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, and"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[...3])"},{"text":"    // Prints \"[10, 20, 30, 40]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"name":"maximum","declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeThrough","preciseIdentifier":"s:s19PartialRangeThroughV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV04makeB8IteratorAC0H0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scs8IteratorV4nextxSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"The next value from the asynchronous stream."},{"text":""},{"text":"When `next()` returns `nil`, this signifies the end of the"},{"text":"`AsyncThrowingStream`."},{"text":""},{"text":"It is a programmer error to invoke `next()` from a concurrent context"},{"text":"that contends with another such call, which results in a call to"},{"text":" `fatalError()`."},{"text":""},{"text":"If you cancel the task this iterator is running in while `next()` is"},{"text":"awaiting a value, the `AsyncThrowingStream` terminates. In this case,"},{"text":"`next()` may return `nil` immediately, or else return `nil` on"},{"text":"subsequent calls."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence"],"names":{"title":"AsyncThrowingPrefixWhileSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingPrefixWhileSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingPrefixWhileSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given error-throwing"},{"text":"predicate."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingPrefixWhileSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScT6cancelyyF","interfaceLanguage":"swift"},"pathComponents":["Task","cancel()"],"names":{"title":"cancel()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Indicates that the task should stop running."},{"text":""},{"text":"Task cancellation is cooperative:"},{"text":"a task that supports cancellation"},{"text":"checks whether it has been canceled at various points during its work."},{"text":""},{"text":"Calling this method on a task that doesn't support cancellation"},{"text":"has no effect."},{"text":"Likewise, if the task has already run"},{"text":"past the last point where it would stop early,"},{"text":"calling this method has no effect."},{"text":""},{"text":"- SeeAlso: `Task.checkCancellation()`"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancel"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","..<(_:)"],"names":{"title":"..<(_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns a partial range up to, but not including, its upper bound."},{"text":""},{"text":"Use the prefix half-open range operator (prefix `..<`) to create a"},{"text":"partial range of any type that conforms to the `Comparable` protocol."},{"text":"This example creates a `PartialRangeUpTo<Double>` instance that includes"},{"text":"any value less than `5.0`."},{"text":""},{"text":"    let upToFive = ..<5.0"},{"text":""},{"text":"    upToFive.contains(3.14)       // true"},{"text":"    upToFive.contains(6.28)       // false"},{"text":"    upToFive.contains(5.0)        // false"},{"text":""},{"text":"You can use this type of partial range of a collection's indices to"},{"text":"represent the range from the start of the collection up to, but not"},{"text":"including, the partial range's upper bound."},{"text":""},{"text":"    let numbers = [10, 20, 30, 40, 50, 60, 70]"},{"text":"    print(numbers[..<3])"},{"text":"    // Prints \"[10, 20, 30]\""},{"text":""},{"text":"- Parameter maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `maximum` must compare equal to itself (i.e. cannot be NaN)."}]},"functionSignature":{"parameters":[{"name":"maximum","declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PartialRangeUpTo","preciseIdentifier":"s:s16PartialRangeUpToV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency13asyncDetached8priority9operationScTyxs5NeverOGScPSg_xyYaYbcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["asyncDetached(priority:operation:)"],"names":{"title":"asyncDetached(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncDetached"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncDetached"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`asyncDetached` was replaced by `Task.detached` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE12basePriorityScPSgvpZ","interfaceLanguage":"swift"},"pathComponents":["Task","basePriority"],"names":{"title":"basePriority","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"basePriority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"The current task's base priority."},{"text":""},{"text":"If you access this property outside of any task, this returns nil"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"basePriority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":9999}},{"domain":"watchOS","introduced":{"major":9999}},{"domain":"iOS","introduced":{"major":9999}},{"domain":"tvOS","introduced":{"major":9999}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScM3run10resultType4bodyxxm_xyYbKScMYcXEtYaKs8SendableRzlFZ","interfaceLanguage":"swift"},"pathComponents":["MainActor","run(resultType:body:)"],"names":{"title":"run(resultType:body:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"run"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Execute the given body closure on the main actor."}]},"functionSignature":{"parameters":[{"name":"resultType","declarationFragments":[{"kind":"identifier","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": @"},{"kind":"typeIdentifier","spelling":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"run"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"resultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":".Type = T.self, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": @"},{"kind":"typeIdentifier","spelling":"MainActor","preciseIdentifier":"s:ScM"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence"],"names":{"title":"AsyncFilterSequence","navigator":[{"kind":"identifier","spelling":"AsyncFilterSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncFilterSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy a given predicate."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncFilterSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.associatedtype","displayName":"Associated Type"},"identifier":{"precise":"s:12_Concurrency11GlobalActorP0C4TypeQa","interfaceLanguage":"swift"},"pathComponents":["GlobalActor","ActorType"],"names":{"title":"ActorType","subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ActorType"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Actor","preciseIdentifier":"s:ScA"}]},"docComment":{"lines":[{"text":"The type of the shared actor instance that will be used to provide"},{"text":"mutually-exclusive access to declarations annotated with the given global"},{"text":"actor type."}]},"declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ActorType"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Actor","preciseIdentifier":"s:ScA"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","Element"],"names":{"title":"AsyncThrowingFlatMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The flat map sequence produces the type of element in the asynchronous"},{"text":"sequence produced by the `transform` closure."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:12_Concurrency11GlobalActorP","interfaceLanguage":"swift"},"pathComponents":["GlobalActor"],"names":{"title":"GlobalActor","navigator":[{"kind":"identifier","spelling":"GlobalActor"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"GlobalActor"}]},"docComment":{"lines":[{"text":"A type that represents a globally-unique actor that can be used to isolate"},{"text":"various declarations anywhere in the program."},{"text":""},{"text":"A type that conforms to the `GlobalActor` protocol and is marked with"},{"text":"the `@globalActor` attribute can be used as a custom attribute. Such types"},{"text":"are called global actor types, and can be applied to any declaration to"},{"text":"specify that such types are isolated to that global actor type. When using"},{"text":"such a declaration from another actor (or from nonisolated code),"},{"text":"synchronization is performed through the shared actor instance to ensure"},{"text":"mutually-exclusive access to the declaration."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"GlobalActor"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP7utilityScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","utility"],"names":{"title":"utility","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utility"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"utility"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence"],"names":{"title":"AsyncCompactMapSequence","navigator":[{"kind":"identifier","spelling":"AsyncCompactMapSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncCompactMapSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence that maps a given closure over the asynchronous"},{"text":"sequenceâ€™s elements, omitting results that don't return a value."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncCompactMapSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","Iterator"],"names":{"title":"AsyncThrowingFlatMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the flat map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORs_rlE5valuexvp","interfaceLanguage":"swift"},"pathComponents":["Task","value"],"names":{"title":"value","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Success"}]},"docComment":{"lines":[{"text":"The result from a nonthrowing task, after it completes."},{"text":""},{"text":"If the task hasn't completed yet,"},{"text":"accessing this property waits for it to complete"},{"text":"and its priority increases to that of the current task."},{"text":"Note that this might not be as effective as"},{"text":"creating the task with the correct priority,"},{"text":"depending on the executor's scheduling details."},{"text":""},{"text":"Tasks that never throw an error can still check for cancellation,"},{"text":"but they need to use an approach like returning `nil`"},{"text":"instead of throwing an error."}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV11TerminationO8finishedyADyxq___Gq_SgcAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","Termination","finished(_:)"],"names":{"title":"AsyncThrowingStream.Continuation.Termination.finished(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finished"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"?)"}]},"docComment":{"lines":[{"text":"The stream finished as a result of calling the continuation's"},{"text":" `finish` method."},{"text":""},{"text":" The associated `Failure` value provides the error that terminated"},{"text":" the stream. If no error occurred, this value is `nil`."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"finished"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"?)"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg3add8priority9operationSbScPSg_xyYaYbKcntYaF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","add(priority:operation:)"],"names":{"title":"add(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScT6results6ResultOyxq_Gvp","interfaceLanguage":"swift"},"pathComponents":["Task","result"],"names":{"title":"result","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"The result or error from a throwing task, after it completes."},{"text":""},{"text":"If the task hasn't completed,"},{"text":"accessing this property waits for it to complete"},{"text":"and its priority increases to that of the current task."},{"text":"Note that this might not be as effective as"},{"text":"creating the task with the correct priority,"},{"text":"depending on the executor's scheduling details."},{"text":""},{"text":"- Returns: If the task succeeded,"},{"text":"  `.success` with the task's result as the associated value;"},{"text":"  otherwise, `.failure` with the error as the associated value."}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"result"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the filter sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns nil. Otherwise, `next()` evaluates the"},{"text":"result with the `predicate` closure. If the closure returns `true`,"},{"text":"`next()` returns the received element; otherwise it awaits the next"},{"text":"element from the base iterator. If calling the closure throws an error,"},{"text":"the sequence ends and `next()` rethrows the error."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:ScE","interfaceLanguage":"swift"},"pathComponents":["CancellationError"],"names":{"title":"CancellationError","navigator":[{"kind":"identifier","spelling":"CancellationError"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CancellationError"}]},"docComment":{"lines":[{"text":"An error that indicates a task was canceled."},{"text":""},{"text":"This error is also thrown automatically by `Task.checkCancellation()`,"},{"text":"if the current task has been canceled."}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"CancellationError"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV15BufferingPolicyO15bufferingNewestyADyxq___GSicAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","BufferingPolicy","bufferingNewest(_:)"],"names":{"title":"AsyncThrowingStream.Continuation.BufferingPolicy.bufferingNewest(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingNewest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"When the buffer is full, discard the oldest element in the buffer."},{"text":""},{"text":"This strategy enforces keeping the specified amount of newest values."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingNewest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA27AsyncThrowingFilterSequenceVyxGSb7ElementQzYaKcF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given error-throwing predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values,"},{"text":"but also throws an error for values divisible by 5:"},{"text":""},{"text":"    do {"},{"text":"        let stream =  Counter(howHigh: 10)"},{"text":"            .filter {"},{"text":"                if $0 % 5 == 0 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return $0 % 2 == 0"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print(\"\\(number) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: 2  4  Error: MyError()"},{"text":""},{"text":"- Parameter isIncluded: An error-throwing closure that takes an element"},{"text":"  of the asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate. If the predicate"},{"text":"  throws an error, the sequence contains only values produced prior to"},{"text":"  the error."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFilterSequence","preciseIdentifier":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency16PartialAsyncTaska","interfaceLanguage":"swift"},"pathComponents":["PartialAsyncTask"],"names":{"title":"PartialAsyncTask","navigator":[{"kind":"identifier","spelling":"PartialAsyncTask"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"PartialAsyncTask"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"PartialAsyncTask"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"UnownedJob","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP10backgroundScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","background"],"names":{"title":"background","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"background"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"background"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:12_Concurrency11GlobalActorPAAE21sharedUnownedExecutorScevpZ::SYNTHESIZED::s:ScM","interfaceLanguage":"swift"},"pathComponents":["MainActor","sharedUnownedExecutor"],"names":{"title":"sharedUnownedExecutor","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"The shared executor instance that will be used to provide"},{"text":"mutually-exclusive access for the global actor."},{"text":""},{"text":"The value of this property must be equivalent to `shared.unownedExecutor`."}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency26UnsafeThrowingContinuationa","interfaceLanguage":"swift"},"pathComponents":["UnsafeThrowingContinuation"],"names":{"title":"UnsafeThrowingContinuation","navigator":[{"kind":"identifier","spelling":"UnsafeThrowingContinuation"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeThrowingContinuation"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeThrowingContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> = "},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"please use UnsafeContinuation<..., Error>","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScG20asyncUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","asyncUnlessCancelled(priority:operation:)"],"names":{"title":"asyncUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTaskUnlessCancelled(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORs_rlE8priority9operationScTyxACGScPSg_xyYaYbcntcfc","interfaceLanguage":"swift"},"pathComponents":["Task","init(priority:operation:)"],"names":{"title":"init(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Runs the given nonthrowing operation asynchronously"},{"text":"as part of a new top-level task on behalf of the current actor."},{"text":""},{"text":"Use this function when creating asynchronous work"},{"text":"that operates on behalf of the synchronous function that calls it."},{"text":"Like `Task.detached(priority:operation:)`,"},{"text":"this function creates a separate, top-level task."},{"text":"Unlike `Task.detached(priority:operation:)`,"},{"text":"the task created by `Task.init(priority:operation:)`"},{"text":"inherits the priority and actor context of the caller,"},{"text":"so the operation is treated more like an asynchronous extension"},{"text":"to the synchronous operation."},{"text":""},{"text":"You need to keep a reference to the task"},{"text":"if you want to cancel it by calling the `Task.cancel()` method."},{"text":"Discarding your reference to a detached task"},{"text":"doesn't implicitly cancel that task,"},{"text":"it only makes it impossible for you to explicitly cancel the task."},{"text":""},{"text":"- Parameters:"},{"text":"  - priority: The priority of the task."},{"text":"    Pass `nil` to use the priority from `Task.currentPriority`."},{"text":"  - operation: The operation to perform."}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scg8IteratorV","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","Iterator"],"names":{"title":"ThrowingTaskGroup.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"A type that provides an iteration interface"},{"text":"over the results of tasks added to the group."},{"text":""},{"text":"The elements returned by this iterator"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":""},{"text":"This iterator terminates after all tasks have completed successfully,"},{"text":"or after any task completes by throwing an error."},{"text":"If a task completes by throwing an error,"},{"text":"it doesn't return any further task results."},{"text":"After iterating over the results of each task,"},{"text":"it's valid to make a new iterator for the task group,"},{"text":"which you can use to iterate over the results of new tasks you add to the group."},{"text":"You can also make a new iterator to resume iteration"},{"text":"after a child task thows an error."},{"text":"For example:"},{"text":""},{"text":"    group.addTask { 1 }"},{"text":"    group.addTask { throw SomeError }"},{"text":"    group.addTask { 2 }"},{"text":"    "},{"text":"    do { "},{"text":"        // Assuming the child tasks complete in order, this prints \"1\""},{"text":"        // and then throws an error."},{"text":"        for try await r in group { print(r) }"},{"text":"    } catch {"},{"text":"        // Resolve the error."},{"text":"    }"},{"text":"    "},{"text":"    // Assuming the child tasks complete in order, this prints \"2\"."},{"text":"    for try await r in group { print(r) }"},{"text":""},{"text":"- SeeAlso: `ThrowingTaskGroup.next()`"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV11YieldResultO7droppedyADyxq___GxcAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","YieldResult","dropped(_:)"],"names":{"title":"AsyncThrowingStream.Continuation.YieldResult.dropped(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropped"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"The stream didn't enqueue the element because the buffer was full."},{"text":""},{"text":"The associated element for this case is the element that the stream"},{"text":"dropped."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropped"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV11TerminationO9cancelledyADyxq___GAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","Termination","cancelled"],"names":{"title":"AsyncThrowingStream.Continuation.Termination.cancelled","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelled"}]},"docComment":{"lines":[{"text":"The stream finished as a result of cancellation."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelled"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV11YieldResultO10terminatedyADyxq___GAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","YieldResult","terminated"],"names":{"title":"AsyncThrowingStream.Continuation.YieldResult.terminated","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"terminated"}]},"docComment":{"lines":[{"text":"The stream didn't enqueue the element because the stream was in a"},{"text":"terminal state."},{"text":""},{"text":"This indicates the stream terminated prior to calling `yield`, either"},{"text":"because the stream finished normally or through cancellation, or"},{"text":"it threw an error."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"terminated"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:Scg13AsyncIteratora","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","AsyncIterator"],"names":{"title":"ThrowingTaskGroup.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Sct","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask"],"names":{"title":"UnsafeCurrentTask","navigator":[{"kind":"identifier","spelling":"UnsafeCurrentTask"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeCurrentTask"}]},"docComment":{"lines":[{"text":"An unsafe reference to the current task."},{"text":""},{"text":"To get an instance of `UnsafeCurrentTask` for the current task,"},{"text":"call the `withUnsafeCurrentTask(body:)` method."},{"text":"Don't store an unsafe task reference"},{"text":"for use outside that method's closure."},{"text":"Storing an unsafe reference doesn't affect the task's actual life cycle,"},{"text":"and the behavior of accessing an unsafe task reference"},{"text":"outside of the `withUnsafeCurrentTask(body:)` method's closure isn't defined."},{"text":""},{"text":"Only APIs on `UnsafeCurrentTask` that are also part of `Task`"},{"text":"are safe to invoke from a task other than"},{"text":"the task that this `UnsafeCurrentTask` instance refers to."},{"text":"Calling other APIs from another task is undefined behavior,"},{"text":"breaks invariants in other parts of the program running on this task,"},{"text":"and may lead to crashes or data loss."},{"text":""},{"text":"For information about the language-level concurrency model that `UnsafeCurrentTask` is part of,"},{"text":"see [Concurrency][concurrency] in [The Swift Programming Language][tspl]."},{"text":""},{"text":"[concurrency]: https://docs.swift.org/swift-book/LanguageGuide/Concurrency.html"},{"text":"[tspl]: https://docs.swift.org/swift-book/"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeCurrentTask"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:Sct","interfaceLanguage":"swift"},"pathComponents":["UnsafeCurrentTask","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA30AsyncThrowingDropWhileSequenceVyxGSb7ElementQzYaKc_tF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base sequence until a given error-throwing closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify. If the closure you"},{"text":"provide throws an error, the sequence produces no elements and throws"},{"text":"the error instead."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The predicate passed to the `drop(while:)`"},{"text":"method throws an error if it encounters an even number, and otherwise"},{"text":"returns `true` while it receives elements less than `5`. Because the"},{"text":"predicate throws when it receives `2` from the base sequence, this example"},{"text":"throws without ever printing anything."},{"text":""},{"text":"    do {"},{"text":"        let stream =  Counter(howHigh: 10)"},{"text":"            .drop {"},{"text":"                if $0 % 2 == 0 {"},{"text":"                    throw EvenError()"},{"text":"                }"},{"text":"                return $0 < 5"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print(\"\\(number) \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"\\(error)\")"},{"text":"    }"},{"text":"    // Prints: EvenError()"},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence. A predicate that throws an error also never executes again."},{"text":""},{"text":"- Parameter predicate: An error-throwing closure that takes an element as"},{"text":"  a parameter and returns a Boolean value indicating whether to drop the"},{"text":"  element from the modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values until the"},{"text":"  provided closure returns `false` or throws an error."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingDropWhileSequence","preciseIdentifier":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg17makeAsyncIteratorScg0C0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"ThrowingTaskGroup","preciseIdentifier":"s:Scg"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:Scg8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP7defaultScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","default"],"names":{"title":"default","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"`default`"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"`default`"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"medium","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE8Prioritya","interfaceLanguage":"swift"},"pathComponents":["Task","Priority"],"names":{"title":"Task.Priority","navigator":[{"kind":"identifier","spelling":"Priority"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Priority"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Priority"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"Task.Priority has been removed; use TaskPriority","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:Scg7Elementa","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","Element"],"names":{"title":"ThrowingTaskGroup.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scf7enqueueyyScJF","interfaceLanguage":"swift"},"pathComponents":["SerialExecutor","enqueue(_:)"],"names":{"title":"enqueue(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"job","declarationFragments":[{"kind":"identifier","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"}]}],"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:SYsSERzs5UInt8V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","encode(to:)"],"names":{"title":"encode(to:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"lines":[{"text":"Encodes this value into the given encoder, when the type's `RawValue`"},{"text":"is `UInt8`."},{"text":""},{"text":"This function throws an error if any values are invalid for the given"},{"text":"encoder's format."},{"text":""},{"text":"- Parameter encoder: The encoder to write data to."}]},"functionSignature":{"parameters":[{"name":"to","internalName":"encoder","declarationFragments":[{"kind":"identifier","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Encoder","preciseIdentifier":"s:s7EncoderP"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"Encodable","rhsPrecise":"s:SE"},{"kind":"sameType","lhs":"Self.RawValue","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self","rhs":"Encodable","rhsPrecise":"s:SE"},{"kind":"sameType","lhs":"Self.RawValue","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"encode"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"to"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"encoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Encoder","preciseIdentifier":"s:s7EncoderP"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public"},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV11YieldResultO8enqueuedyADyxq___GSi_tcAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","YieldResult","enqueued(remaining:)"],"names":{"title":"AsyncThrowingStream.Continuation.YieldResult.enqueued(remaining:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueued"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"The stream successfully enqueued the element."},{"text":""},{"text":"This value represents the successful enqueueing of an element, whether"},{"text":"the stream buffers the element or delivers it immediately to a pending"},{"text":"call to `next()`. The associated value `remaining` is a hint that"},{"text":"indicates the number of remaining slots in the buffer at the time of"},{"text":"the `yield` call."},{"text":""},{"text":"- Note: From a thread safety perspective, `remaining` is a lower bound"},{"text":"on the number of remaining slots. This is because a subsequent call"},{"text":"that uses the `remaining` value could race on the consumption of"},{"text":"values from the stream."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueued"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:Scs12ContinuationV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation"],"names":{"title":"AsyncThrowingStream.Continuation","navigator":[{"kind":"identifier","spelling":"Continuation"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Continuation"}]},"docComment":{"lines":[{"text":"A mechanism to interface between synchronous code and an asynchronous"},{"text":"stream."},{"text":""},{"text":"The closure you provide to the `AsyncThrowingStream` in"},{"text":"`init(_:bufferingPolicy:_:)` receives an instance of this type when"},{"text":"invoked. Use this continuation to provide elements to the stream by"},{"text":"calling one of the `yield` methods, then terminate the stream normally by"},{"text":"calling the `finish()` method. You can also use the continuation's"},{"text":"`finish(throwing:)` method to terminate the stream by throwing an error."},{"text":""},{"text":"- Note: Unlike other continuations in Swift,"},{"text":"`AsyncThrowingStream.Continuation` supports escaping."}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Continuation"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg5async8priority9operationyScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","async(priority:operation:)"],"names":{"title":"async(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"async"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV15BufferingPolicyO15bufferingNewestyADyx__GSicAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","BufferingPolicy","bufferingNewest(_:)"],"names":{"title":"AsyncStream.Continuation.BufferingPolicy.bufferingNewest(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingNewest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"When the buffer is full, discard the oldest element in the buffer."},{"text":""},{"text":"This strategy enforces keeping at most the specified number of newest"},{"text":"values."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingNewest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV15BufferingPolicyO9unboundedyADyxq___GAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","BufferingPolicy","unbounded"],"names":{"title":"AsyncThrowingStream.Continuation.BufferingPolicy.unbounded","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unbounded"}]},"docComment":{"lines":[{"text":"Continue to add to the buffer, treating its capacity as infinite."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unbounded"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","Iterator"],"names":{"title":"AsyncThrowingCompactMapSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the compact map sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScM15unownedExecutorScevp","interfaceLanguage":"swift"},"pathComponents":["MainActor","unownedExecutor"],"names":{"title":"unownedExecutor","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"Retrieve the executor for this actor as an optimized, unowned"},{"text":"reference."},{"text":""},{"text":"This property must always evaluate to the same executor for a"},{"text":"given actor instance, and holding on to the actor must keep the"},{"text":"executor alive."},{"text":""},{"text":"This property will be implicitly accessed when work needs to be"},{"text":"scheduled onto this actor.  These accesses may be merged,"},{"text":"eliminated, and rearranged with other work, and they may even"},{"text":"be introduced when not strictly required.  Visible side effects"},{"text":"are therefore strongly discouraged within this property."}]},"declarationFragments":[{"kind":"keyword","spelling":"nonisolated"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV15BufferingPolicyO15bufferingOldestyADyx__GSicAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","BufferingPolicy","bufferingOldest(_:)"],"names":{"title":"AsyncStream.Continuation.BufferingPolicy.bufferingOldest(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingOldest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"When the buffer is full, discard the newly received element."},{"text":""},{"text":"This strategy enforces keeping at most the specified number of oldest"},{"text":"values."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingOldest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:Scs12ContinuationV15BufferingPolicyO15bufferingOldestyADyxq___GSicAFms5ErrorR_r0_lF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","Continuation","BufferingPolicy","bufferingOldest(_:)"],"names":{"title":"AsyncThrowingStream.Continuation.BufferingPolicy.bufferingOldest(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingOldest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"When the buffer is full, discard the newly received element."},{"text":""},{"text":"This strategy enforces keeping the specified amount of oldest values."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"bufferingOldest"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","Element"],"names":{"title":"AsyncThrowingCompactMapSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The compact map sequence produces whatever type of element its"},{"text":"transforming closure produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ElementOfResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:Scg7isEmptySbvp","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","isEmpty"],"names":{"title":"isEmpty","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the group has any remaining tasks."},{"text":""},{"text":"At the start of the body of a `withThrowingTaskGroup(of:returning:body:)` call,"},{"text":"the task group is always empty."},{"text":"It's guaranteed to be empty when returning from that body"},{"text":"because a task group waits for all child tasks to complete before returning."},{"text":""},{"text":"- Returns: `true` if the group has no pending tasks; otherwise `false`."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether all elements produced by the"},{"text":"asynchronous sequence satisfies the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `allSatisfy(_:)` method checks to see whether"},{"text":"all elements produced by the sequence are less than `10`."},{"text":""},{"text":"    let allLessThanTen = await Counter(howHigh: 10)"},{"text":"        .allSatisfy { $0 < 10 }"},{"text":"    print(allLessThanTen)"},{"text":"    // Prints: false"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate returns `false` or the sequence ends."},{"text":""},{"text":"If the asynchronous sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:Sci","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence"],"names":{"title":"AsyncSequence","navigator":[{"kind":"identifier","spelling":"AsyncSequence"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncSequence"}]},"docComment":{"lines":[{"text":"A type that provides asynchronous, sequential, iterated access to its"},{"text":"elements."},{"text":""},{"text":"An `AsyncSequence` resembles the `Sequence` type --- offering a list of"},{"text":"values you can step through one at a time --- and adds asynchronicity. An"},{"text":"`AsyncSequence` may have all, some, or none of its values available when"},{"text":"you first use it. Instead, you use `await` to receive values as they become"},{"text":"available."},{"text":""},{"text":"As with `Sequence`, you typically iterate through an `AsyncSequence` with a"},{"text":"`for await`-`in` loop. However, because the caller must potentially wait for values,"},{"text":"you use the `await` keyword. The following example shows how to iterate"},{"text":"over `Counter`, a custom `AsyncSequence` that produces `Int` values from"},{"text":"`1` up to a `howHigh` value:"},{"text":""},{"text":"    for await i in Counter(howHigh: 10) {"},{"text":"        print(i, terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 2 3 4 5 6 7 8 9 10"},{"text":""},{"text":"An `AsyncSequence` doesn't generate or contain the values; it just defines"},{"text":"how you access them. Along with defining the type of values as an associated"},{"text":"type called `Element`, the `AsyncSequence` defines a `makeAsyncIterator()`"},{"text":"method. This returns an instance of type `AsyncIterator`. Like the standard"},{"text":"`IteratorProtocol`, the `AsyncIteratorProtocol` defines a single `next()`"},{"text":"method to produce elements. The difference is that the `AsyncIterator`"},{"text":"defines its `next()` method as `async`, which requires a caller to wait for"},{"text":"the next value with the `await` keyword."},{"text":""},{"text":"`AsyncSequence` also defines methods for processing the elements you"},{"text":"receive, modeled on the operations provided by the basic `Sequence` in the"},{"text":"standard library. There are two categories of methods: those that return a"},{"text":"single value, and those that return another `AsyncSequence`."},{"text":""},{"text":"Single-value methods eliminate the need for a `for await`-`in` loop, and instead"},{"text":"let you make a single `await` call. For example, the `contains(_:)` method"},{"text":"returns a Boolean value that indicates if a given value exists in the"},{"text":"`AsyncSequence`. Given the `Counter` sequence from the previous example,"},{"text":"you can test for the existence of a sequence member with a one-line call:"},{"text":""},{"text":"    let found = await Counter(howHigh: 10).contains(5) // true"},{"text":""},{"text":"Methods that return another `AsyncSequence` return a type specific to the"},{"text":"method's semantics. For example, the `.map(_:)` method returns a"},{"text":"`AsyncMapSequence` (or a `AsyncThrowingMapSequence`, if the closure you"},{"text":"provide to the `map(_:)` method can throw an error). These returned"},{"text":"sequences don't eagerly await the next member of the sequence, which allows"},{"text":"the caller to decide when to start work. Typically, you'll iterate over"},{"text":"these sequences with `for await`-`in`, like the base `AsyncSequence` you started"},{"text":"with. In the following example, the `map(_:)` method transforms each `Int`"},{"text":"received from a `Counter` sequence into a `String`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .map { $0 % 2 == 0 ? \"Even\" : \"Odd\" }"},{"text":"    for await s in stream {"},{"text":"        print(s, terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: Odd Even Odd Even Odd Even Odd Even Odd Even"},{"text":""}]},"declarationFragments":[{"kind":"attribute","spelling":"@rethrows"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncSequence"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","AsyncIterator"],"names":{"title":"AsyncThrowingCompactMapSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","..<(_:_:)"],"names":{"title":"..<(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns a half-open range that contains its lower bound but not its upper"},{"text":"bound."},{"text":""},{"text":"Use the half-open range operator (`..<`) to create a range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`Range<Double>` from zero up to, but not including, 5.0."},{"text":""},{"text":"    let lessThanFive = 0.0..<5.0"},{"text":"    print(lessThanFive.contains(3.14))  // Prints \"true\""},{"text":"    print(lessThanFive.contains(5.0))   // Prints \"false\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"name":"minimum","declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"maximum","declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..<"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScM6sharedScMvpZ","interfaceLanguage":"swift"},"pathComponents":["MainActor","shared"],"names":{"title":"shared","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shared"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"MainActor","preciseIdentifier":"s:ScM"}]},"docComment":{"lines":[{"text":"The shared actor instance that will be used to provide mutually-exclusive"},{"text":"access to declarations annotated with the given global actor type."},{"text":""},{"text":"The value of this property must always evaluate to the same actor"},{"text":"instance."}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shared"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"MainActor","preciseIdentifier":"s:ScM"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:Scg11isCancelledSbvp","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","isCancelled"],"names":{"title":"isCancelled","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the group was canceled."},{"text":""},{"text":"To cancel a group, call the `ThrowingTaskGroup.cancelAll()` method."},{"text":""},{"text":"If the task that's currently running this group is canceled,"},{"text":"the group is also implicitly canceled,"},{"text":"which is also reflected in this property's value."}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scf23asUnownedSerialExecutorSceyF","interfaceLanguage":"swift"},"pathComponents":["SerialExecutor","asUnownedSerialExecutor()"],"names":{"title":"asUnownedSerialExecutor()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asUnownedSerialExecutor"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"Convert this executor value to the optimized form of borrowed"},{"text":"executor references."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asUnownedSerialExecutor"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg20spawnUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","spawnUnlessCancelled(priority:operation:)"],"names":{"title":"spawnUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawnUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawnUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTaskUnlessCancelled(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV04makeB8IteratorAC0H0Vyxq__GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg9cancelAllyyF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","cancelAll()"],"names":{"title":"cancelAll()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelAll"},{"kind":"text","spelling":"()"}]},"docComment":{"lines":[{"text":"Cancel all of the remaining tasks in the group."},{"text":""},{"text":"After cancellation,"},{"text":"any new results or errors from the tasks in this group"},{"text":"are silently discarded."},{"text":""},{"text":"If you add a task to a group after canceling the group,"},{"text":"that task is canceled immediately after being added to the group."},{"text":""},{"text":"There are no restrictions on where you can call this method."},{"text":"Code inside a child task or even another task can cancel a group."},{"text":""},{"text":"- SeeAlso: `Task.isCancelled`"},{"text":"- SeeAlso: `ThrowingTaskGroup.isCancelled`"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"cancelAll"},{"kind":"text","spelling":"()"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV15BufferingPolicyO9unboundedyADyx__GAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","BufferingPolicy","unbounded"],"names":{"title":"AsyncStream.Continuation.BufferingPolicy.unbounded","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unbounded"}]},"docComment":{"lines":[{"text":"Continue to add to the buffer, without imposing a limit on the number"},{"text":"of buffered elements."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unbounded"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP13userInitiatedScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","userInitiated"],"names":{"title":"userInitiated","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"userInitiated"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"userInitiated"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV04makeB8IteratorAC0G0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","makeAsyncIterator()"],"names":{"title":"makeAsyncIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV"}]},"docComment":{"lines":[{"text":"Creates the asynchronous iterator that produces elements of this"},{"text":"asynchronous sequence."},{"text":""},{"text":"- Returns: An instance of the `AsyncIterator` type used to produce"},{"text":"elements of the asynchronous sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAsyncIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP3lowScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","low"],"names":{"title":"low","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"low"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"let"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"low"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScM21sharedUnownedExecutorScevpZ","interfaceLanguage":"swift"},"pathComponents":["MainActor","sharedUnownedExecutor"],"names":{"title":"sharedUnownedExecutor","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"}]},"docComment":{"lines":[{"text":"The shared executor instance that will be used to provide"},{"text":"mutually-exclusive access for the global actor."},{"text":""},{"text":"The value of this property must be equivalent to `shared.unownedExecutor`."}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sharedUnownedExecutor"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedSerialExecutor","preciseIdentifier":"s:Sce"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV0B8Iteratora","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","AsyncIterator"],"names":{"title":"AsyncDropFirstSequence.AsyncIterator","navigator":[{"kind":"identifier","spelling":"AsyncIterator"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"}]},"docComment":{"lines":[{"text":"The type of iterator that produces elements of the sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncIterator"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency23withCheckedContinuation8function_xSS_yScCyxs5NeverOGXEtYalF","interfaceLanguage":"swift"},"pathComponents":["withCheckedContinuation(function:_:)"],"names":{"title":"withCheckedContinuation(function:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCheckedContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Suspends the current task,"},{"text":"then calls the given closure with a checked continuation for the current task."},{"text":""},{"text":"- Parameters:"},{"text":"  - function: A string identifying the declaration that is the notional"},{"text":"    source for the continuation, used to identify the continuation in"},{"text":"    runtime diagnostics related to misuse of this continuation."},{"text":"  - body: A closure that takes a `CheckedContinuation` parameter."},{"text":"    You must resume the continuation exactly once."}]},"functionSignature":{"parameters":[{"name":"function","declarationFragments":[{"kind":"identifier","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCheckedContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#function"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV4next7ElementQy_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the flat map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns `nil`. Otherwise, `next()` calls the"},{"text":"transforming closure on the received element, takes the resulting"},{"text":"asynchronous sequence, and creates an asynchronous iterator from it."},{"text":"`next()` then consumes values from this iterator until it terminates."},{"text":"At this point, `next()` is ready to receive the next value from the base"},{"text":"sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"SegmentOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV11YieldResultO10terminatedyADyx__GAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","YieldResult","terminated"],"names":{"title":"AsyncStream.Continuation.YieldResult.terminated","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"terminated"}]},"docComment":{"lines":[{"text":"The stream didn't enqueue the element because the stream was in a"},{"text":"terminal state."},{"text":""},{"text":"This indicates the stream terminated prior to calling `yield`, either"},{"text":"because the stream finished normally or through cancellation."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"terminated"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the prefix sequence."},{"text":""},{"text":"Until reaching the number of elements to include, this iterator calls"},{"text":"`next()` on its base iterator and passes through the result. After"},{"text":"reaching the maximum number of elements, subsequent calls to `next()`"},{"text":"return `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingPrefixWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ScF7enqueueyyScJF","interfaceLanguage":"swift"},"pathComponents":["Executor","enqueue(_:)"],"names":{"title":"enqueue(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"job","declarationFragments":[{"kind":"identifier","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"}]}],"returns":[{"kind":"text","spelling":"()"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueue"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"job"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UnownedJob","preciseIdentifier":"s:ScJ"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFilterSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains the given element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(_:)` method checks to see whether"},{"text":"the sequence produces the value `5`:"},{"text":""},{"text":"    let containsFive = await Counter(howHigh: 10)"},{"text":"        .contains(5)"},{"text":"    print(containsFive)"},{"text":"    // Prints: true"},{"text":""},{"text":"- Parameter search: The element to find in the asynchronous sequence."},{"text":"- Returns: `true` if the method found the element in the asynchronous"},{"text":"  sequence; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"search","declarationFragments":[{"kind":"identifier","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"search"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","Iterator"],"names":{"title":"AsyncDropFirstSequence.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"docComment":{"lines":[{"text":"The iterator that produces elements of the drop-first sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV11YieldResultO7droppedyADyx__GxcAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","YieldResult","dropped(_:)"],"names":{"title":"AsyncStream.Continuation.YieldResult.dropped(_:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropped"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"The stream didn't enqueue the element because the buffer was full."},{"text":""},{"text":"The associated element for this case is the element dropped by the stream."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropped"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg5spawn8priority9operationyScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","spawn(priority:operation:)"],"names":{"title":"spawn(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawn"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"spawn"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTask(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE11isCancelledSbvpZ","interfaceLanguage":"swift"},"pathComponents":["Task","isCancelled"],"names":{"title":"isCancelled","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the task should stop executing."},{"text":""},{"text":"After the value of this property becomes `true`, it remains `true` indefinitely."},{"text":"There is no way to uncancel a task."},{"text":""},{"text":"- SeeAlso: `checkCancellation()`"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:12_Concurrency22AsyncDropFirstSequenceV7Elementa","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","Element"],"names":{"title":"AsyncDropFirstSequence.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"docComment":{"lines":[{"text":"The type of element produced by this asynchronous sequence."},{"text":""},{"text":"The drop-first sequence produces whatever type of element its base"},{"text":"iterator produces."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority",">=(_:_:)"],"names":{"title":">=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than-or-equal-to operator"},{"text":"(`>=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."},{"text":"- Returns: `true` if `lhs` is greater than or equal to `rhs`; otherwise,"},{"text":"  `false`."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScT5valuexvp","interfaceLanguage":"swift"},"pathComponents":["Task","value"],"names":{"title":"value","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Success"}]},"docComment":{"lines":[{"text":"The result from a throwing task, after it completes."},{"text":""},{"text":"If the task hasn't completed,"},{"text":"accessing this property waits for it to complete"},{"text":"and its priority increases to that of the current task."},{"text":"Note that this might not be as effective as"},{"text":"creating the task with the correct priority,"},{"text":"depending on the executor's scheduling details."},{"text":""},{"text":"If the task throws an error, this property propagates that error."},{"text":"Tasks that respond to cancellation by throwing `CancellationError`"},{"text":"have that error propagated here upon cancellation."},{"text":""},{"text":"- Returns: The task's result."}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:ScG","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence"],"names":{"title":"AsyncThrowingDropWhileSequence","navigator":[{"kind":"identifier","spelling":"AsyncThrowingDropWhileSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingDropWhileSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence which omits elements from the base sequence until a"},{"text":"given error-throwing closure returns false, after which it passes through"},{"text":"all remaining elements."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncThrowingDropWhileSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV4nextq_SgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the compact map sequence."},{"text":""},{"text":"This iterator calls `next()` on its base iterator; if this call returns"},{"text":"`nil`, `next()` returns `nil`. Otherwise, `next()` calls the"},{"text":"transforming closure on the received element, returning it if the"},{"text":"transform returns a non-`nil` value. If the transform returns `nil`,"},{"text":"this method continues to wait for further elements until it gets one"},{"text":"that transforms to a non-`nil` value."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0},{"name":"ElementOfResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.typealias","displayName":"Type Alias"},"identifier":{"precise":"s:ScG8IteratorV7Elementa","interfaceLanguage":"swift"},"pathComponents":["TaskGroup","Iterator","Element"],"names":{"title":"TaskGroup.Iterator.Element","navigator":[{"kind":"identifier","spelling":"Element"}],"subHeading":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"typealias"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Element"},{"kind":"text","spelling":" = "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence"],"names":{"title":"AsyncPrefixSequence","navigator":[{"kind":"identifier","spelling":"AsyncPrefixSequence"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncPrefixSequence"}]},"docComment":{"lines":[{"text":"An asynchronous sequence, up to a specified maximum length,"},{"text":"containing the initial elements of a base asynchronous sequence."}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AsyncPrefixSequence"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Base"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.enum.case","displayName":"Case"},"identifier":{"precise":"s:ScS12ContinuationV11YieldResultO8enqueuedyADyx__GSi_tcAFmlF","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","Continuation","YieldResult","enqueued(remaining:)"],"names":{"title":"AsyncStream.Continuation.YieldResult.enqueued(remaining:)","subHeading":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueued"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"The stream successfully enqueued the element."},{"text":""},{"text":"This value represents the successful enqueueing of an element, whether"},{"text":"the stream buffers the element or delivers it immediately to a pending"},{"text":"call to `next()`. The associated value `remaining` is a hint that"},{"text":"indicates the number of remaining slots in the buffer at the time of"},{"text":"the `yield` call."},{"text":""},{"text":"- Note: From a thread safety point of view, `remaining` is a lower bound"},{"text":"on the number of remaining slots. This is because a subsequent call"},{"text":"that uses the `remaining` value could race on the consumption of"},{"text":"values from the stream."}]},"declarationFragments":[{"kind":"keyword","spelling":"case"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enqueued"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"remaining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","...(_:_:)"],"names":{"title":"...(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns a closed range that contains both of its bounds."},{"text":""},{"text":"Use the closed range operator (`...`) to create a closed range of any type"},{"text":"that conforms to the `Comparable` protocol. This example creates a"},{"text":"`ClosedRange<Character>` from \"a\" up to, and including, \"z\"."},{"text":""},{"text":"    let lowercase = \"a\"...\"z\""},{"text":"    print(lowercase.contains(\"z\"))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameters:"},{"text":"  - minimum: The lower bound for the range."},{"text":"  - maximum: The upper bound for the range."},{"text":""},{"text":"- Precondition: `minimum <= maximum`."}]},"functionSignature":{"parameters":[{"name":"minimum","declarationFragments":[{"kind":"identifier","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"maximum","declarationFragments":[{"kind":"identifier","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"..."},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"minimum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"maximum"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"ClosedRange","preciseIdentifier":"s:SN"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, containing the initial, consecutive"},{"text":"elements of the base sequence that satisfy the given predicate."},{"text":""},{"text":"Use `prefix(while:)` to produce values while elements from the base"},{"text":"sequence meet a condition you specify. The modified sequence ends when"},{"text":"the predicate closure returns `false`."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(while:)` method causes the modified"},{"text":"sequence to pass along values so long as they arenâ€™t divisible by `2` and"},{"text":"`3`. Upon reaching `6`, the sequence ends:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .prefix { $0 % 2 != 0 || $0 % 3 != 0 }"},{"text":"    for try await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"1  2  3  4  5\""},{"text":"    "},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether the element should be"},{"text":"  included in the modified sequence."},{"text":"- Returns: An asynchronous sequence of the initial, consecutive"},{"text":"  elements that satisfy `predicate`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixWhileSequence","preciseIdentifier":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","<=(_:_:)"],"names":{"title":"<=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is less than or equal to that of the second argument."},{"text":""},{"text":"This is the default implementation of the less-than-or-equal-to"},{"text":"operator (`<=`) for any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"<="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`."},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .flatMap { Counter(howHigh: $0) }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number)\", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 1 2 3 4 1 2 3 4 5"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns an `AsyncSequence`."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFlatMapSequence","preciseIdentifier":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency6detach8priority9operationScTyxs5NeverOGScPSg_xyYaYbcnts8SendableRzlF","interfaceLanguage":"swift"},"pathComponents":["detach(priority:operation:)"],"names":{"title":"detach(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detach"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detach"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"`detach` was replaced by `Task.detached` and will be removed shortly.","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency22withUnsafeContinuationyxySccyxs5NeverOGXEYalF","interfaceLanguage":"swift"},"pathComponents":["withUnsafeContinuation(_:)"],"names":{"title":"withUnsafeContinuation(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Suspends the current task,"},{"text":"then calls the given closure with an unsafe continuation for the current task."},{"text":""},{"text":"- Parameter fn: A closure that takes an `UnsafeContinuation` parameter."},{"text":"You must resume the continuation exactly once."},{"text":""},{"text":"- Returns: The value passed to the continuation by the closure."}]},"functionSignature":{"parameters":[{"name":"fn","declarationFragments":[{"kind":"identifier","spelling":"fn"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withUnsafeContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"fn"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeContinuation","preciseIdentifier":"s:Scc"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Never","preciseIdentifier":"s:s5NeverO"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg22addTaskUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","addTaskUnlessCancelled(priority:operation:)"],"names":{"title":"addTaskUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTaskUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Adds a child task to the group, unless the group has been canceled."},{"text":""},{"text":"This method doesn't throw an error, even if the child task does."},{"text":"Instead, the corresponding call to `ThrowingTaskGroup.next()` rethrows that error."},{"text":""},{"text":"- Parameters:"},{"text":"  - overridingPriority: The priority of the operation task."},{"text":"    Omit this parameter or pass `.unspecified`"},{"text":"    to set the child task's priority to the priority of the group."},{"text":"  - operation: The operation to execute as part of the task group."},{"text":"- Returns: `true` if the child task was added to the group;"},{"text":"  otherwise `false`."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addTaskUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency13withTaskGroup2of9returning4bodyq_xm_q_mq_ScGyxGzYaXEtYas8SendableRzr0_lF","interfaceLanguage":"swift"},"pathComponents":["withTaskGroup(of:returning:body:)"],"names":{"title":"withTaskGroup(of:returning:body:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"GroupResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"}]},"docComment":{"lines":[{"text":"Starts a new scope that can contain a dynamic number of child tasks."},{"text":""},{"text":"A group waits for all of its child tasks"},{"text":"to complete or be canceled before it returns."},{"text":"After this function returns, the task group is always empty."},{"text":""},{"text":"To collect the results of the group's child tasks,"},{"text":"you can use a `for`-`await`-`in` loop:"},{"text":""},{"text":"    var sum = 0"},{"text":"    for await result in group {"},{"text":"        sum += result"},{"text":"    }"},{"text":""},{"text":"If you need more control or only a few results,"},{"text":"you can call `next()` directly:"},{"text":""},{"text":"    guard let first = await group.next() else {"},{"text":"        group.cancelAll()"},{"text":"        return 0"},{"text":"    }"},{"text":"    let second = await group.next() ?? 0"},{"text":"    group.cancelAll()"},{"text":"    return first + second"},{"text":""},{"text":"Task Group Cancellation"},{"text":"======================="},{"text":""},{"text":"You can cancel a task group and all of its child tasks"},{"text":"by calling the `cancellAll()` method on the task group,"},{"text":"or by canceling the task in which the group is running."},{"text":""},{"text":"If you call `async(priority:operation:)` to create a new task in a canceled group,"},{"text":"that task is immediately canceled after creation."},{"text":"Alternatively, you can call `asyncUnlessCancelled(priority:operation:)`,"},{"text":"which doesn't create the task if the group has already been canceled"},{"text":"Choosing between these two functions"},{"text":"lets you control how to react to cancellation within a group:"},{"text":"some child tasks need to run regardless of cancellation,"},{"text":"but other tasks are better not even being created"},{"text":"when you know they can't produce useful results."},{"text":""},{"text":"Because the tasks you add to a group with this method are nonthrowing,"},{"text":"those tasks can't respond to cancellation by throwing `CancellationError`."},{"text":"The tasks must handle cancellation in some other way,"},{"text":"such as returning the work completed so far, returning an empty result, or returning `nil`."},{"text":"For tasks that need to handle cancellation by throwing an error,"},{"text":"use the `withThrowingTaskGroup(of:returning:body:)` method instead."}]},"functionSignature":{"parameters":[{"name":"of","internalName":"childTaskResultType","declarationFragments":[{"kind":"identifier","spelling":"childTaskResultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type"}]},{"name":"returning","internalName":"returnType","declarationFragments":[{"kind":"identifier","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"GroupResult"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"GroupResult","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withTaskGroup"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"genericParameter","spelling":"GroupResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"of"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"childTaskResultType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":".Type, "},{"kind":"externalParam","spelling":"returning"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"returnType"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":".Type = GroupResult.self, "},{"kind":"externalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"TaskGroup","preciseIdentifier":"s:ScG"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"GroupResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.property","displayName":"Type Property"},"identifier":{"precise":"s:ScP15userInteractiveScPvpZ","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","userInteractive"],"names":{"title":"userInteractive","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"userInteractive"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"userInteractive"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","message":"userInteractive priority will be removed","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5NeverORszACRs_rlE5yieldyyYaFZ","interfaceLanguage":"swift"},"pathComponents":["Task","yield()"],"names":{"title":"yield()","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}]},"docComment":{"lines":[{"text":"Suspends the current task and allows other tasks to execute."},{"text":""},{"text":"A task can voluntarily suspend itself"},{"text":"in the middle of a long-running operation"},{"text":"that doesn't contain any suspension points,"},{"text":"to let other tasks run for a while"},{"text":"before execution returns to this task."},{"text":""},{"text":"If this task is the highest-priority task in the system,"},{"text":"the executor immediately resumes execution of the same task."},{"text":"As such,"},{"text":"this method isn't necessarily a way to avoid resource starvation."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"sameType","lhs":"Success","rhs":"Never","rhsPrecise":"s:s5NeverO"},{"kind":"sameType","lhs":"Failure","rhs":"Never","rhsPrecise":"s:s5NeverO"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"yield"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScP8rawValues5UInt8Vvp","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","rawValue"],"names":{"title":"rawValue","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt8","preciseIdentifier":"s:s5UInt8V"}]},"docComment":{"lines":[{"text":"The corresponding value of the raw type."},{"text":""},{"text":"A new instance initialized with `rawValue` will be equivalent to this"},{"text":"instance. For example:"},{"text":""},{"text":"    enum PaperSize: String {"},{"text":"        case A4, A5, Letter, Legal"},{"text":"    }"},{"text":""},{"text":"    let selectedSize = PaperSize.Letter"},{"text":"    print(selectedSize.rawValue)"},{"text":"    // Prints \"Letter\""},{"text":""},{"text":"    print(selectedSize == PaperSize(rawValue: selectedSize.rawValue)!)"},{"text":"    // Prints \"true\""}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt8","preciseIdentifier":"s:s5UInt8V"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg4nextxSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Wait for the next child task to complete,"},{"text":"and return the value it returned or rethrow the error it threw."},{"text":""},{"text":"The values returned by successive calls to this method"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":"For example:"},{"text":""},{"text":"    group.addTask { 1 }"},{"text":"    group.addTask { 2 }"},{"text":""},{"text":"    print(await group.next())"},{"text":"    // Prints either \"2\" or \"1\"."},{"text":""},{"text":"If there aren't any pending tasks in the task group,"},{"text":"this method returns `nil`,"},{"text":"which lets you write the following"},{"text":"to wait for a single task to complete:"},{"text":""},{"text":"    if let first = try await group.next() {"},{"text":"       return first"},{"text":"    }"},{"text":""},{"text":"It also lets you write code like the following"},{"text":"to wait for all the child tasks to complete,"},{"text":"collecting the values they returned:"},{"text":""},{"text":"    while let first = try await group.next() {"},{"text":"       collected += value"},{"text":"    }"},{"text":"    return collected"},{"text":""},{"text":"Awaiting on an empty group"},{"text":"immediate returns `nil` without suspending."},{"text":""},{"text":"You can also use a `for`-`await`-`in` loop to collect results of a task group:"},{"text":""},{"text":"    for await try value in group {"},{"text":"        collected += value"},{"text":"    }"},{"text":""},{"text":"If the next child task throws an error"},{"text":"and you propagate that error from this method"},{"text":"out of the body of a call to the"},{"text":"`ThrowingTaskGroup.withThrowingTaskGroup(of:returning:body:)` method,"},{"text":"then all remaining child tasks in that group are implicitly canceled."},{"text":""},{"text":"Don't call this method from outside the task"},{"text":"where this task group was created."},{"text":"In most cases, the Swift type system prevents this mistake;"},{"text":"for example, because the `add(priority:operation:)` method is mutating,"},{"text":"that method can't be called from a concurrent execution context like a child task."},{"text":""},{"text":"- Returns: The value returned by the next child task that completes."},{"text":""},{"text":"- Throws: The error thrown by the next child task that completes."},{"text":""},{"text":"- SeeAlso: `nextResult()`"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.protocol","displayName":"Protocol"},"identifier":{"precise":"s:ScA","interfaceLanguage":"swift"},"pathComponents":["Actor"],"names":{"title":"Actor","navigator":[{"kind":"identifier","spelling":"Actor"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Actor"}]},"docComment":{"lines":[{"text":"Common protocol to which all actors conform."},{"text":""},{"text":"The `Actor` protocol generalizes over all actor types. Actor types"},{"text":"implicitly conform to this protocol."}]},"declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Actor"},{"kind":"text","spelling":" : AnyObject, "},{"kind":"typeIdentifier","spelling":"Sendable","preciseIdentifier":"s:s8SendableP"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure, given a mutable initial value."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on a"},{"text":"sequence of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"Prefer this method over `reduce(_:_:)` for efficiency when the result is"},{"text":"a copy-on-write type, for example an `Array` or `Dictionary`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure executes."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits elements from the base asynchronous sequence until a given closure"},{"text":"returns false, after which it passes through all remaining elements."},{"text":""},{"text":"Use `drop(while:)` to omit elements from an asynchronous sequence until"},{"text":"the element received meets a condition you specify."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `drop(while:)` method causes the modified"},{"text":"sequence to ignore received values until it encounters one that is"},{"text":"divisible by `3`:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .drop { $0 % 3 != 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"3 4 5 6 7 8 9 10\""},{"text":""},{"text":"After the predicate returns `false`, the sequence never executes it again,"},{"text":"and from then on the sequence passes through elements from its underlying"},{"text":"sequence as-is."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element as a parameter and"},{"text":"  returns a Boolean value indicating whether to drop the element from the"},{"text":"  modified sequence."},{"text":"- Returns: An asynchronous sequence that skips over values from the"},{"text":"  base sequence until the provided closure returns `false`."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropWhileSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:ScT11isCancelledSbvp","interfaceLanguage":"swift"},"pathComponents":["Task","isCancelled"],"names":{"title":"isCancelled","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"A Boolean value that indicates whether the task should stop executing."},{"text":""},{"text":"After the value of this property becomes `true`, it remains `true` indefinitely."},{"text":"There is no way to uncancel a task."},{"text":""},{"text":"- SeeAlso: `checkCancellation()`"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isCancelled"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority",">(_:_:)"],"names":{"title":">(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value indicating whether the value of the first argument"},{"text":"is greater than that of the second argument."},{"text":""},{"text":"This is the default implementation of the greater-than operator (`>`) for"},{"text":"any type that conforms to `Comparable`."},{"text":""},{"text":"- Parameters:"},{"text":"  - lhs: A value to compare."},{"text":"  - rhs: Another value to compare."}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":">"},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given error-throwing"},{"text":"closure over the asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces. Also, the dictionary doesn't provide a key for"},{"text":"`4`, and the closure throws an error for any key it can't look up, so"},{"text":"receiving this value from `Counter` ends the modified sequence with an"},{"text":"error."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .map { (value) throws -> String in"},{"text":"                guard let roman = romanNumeralDict[value] else {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return roman"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print (\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type. `transform` can also throw an error, which"},{"text":"  ends the transformed sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingMapSequence","preciseIdentifier":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScS","interfaceLanguage":"swift"},"pathComponents":["AsyncStream","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements, omitting results that don't return a"},{"text":"value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Because there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":"        "},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .compactMap { romanNumeralDict[$0] }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncCompactMapSequence","preciseIdentifier":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"lines":[{"text":"Returns a Boolean value that indicates whether the asynchronous sequence"},{"text":"contains an element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that doesnâ€™t"},{"text":"conform to the `Equatable` protocol, or to find an element that satisfies"},{"text":"a general condition."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `contains(where:)` method checks to see"},{"text":"whether the sequence produces a value divisible by `3`:"},{"text":""},{"text":"    let containsDivisibleByThree = await Counter(howHigh: 10)"},{"text":"        .contains { $0 % 3 == 0 }"},{"text":"    print(containsDivisibleByThree)"},{"text":"    // Prints: true"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":"  sequence as its argument and returns a Boolean value that indicates"},{"text":"  whether the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  predicate; otherwise, `false`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingFlatMapSequence","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `min(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let min = await RankCounter()"},{"text":"        .min { $0.rawValue < $1.rawValue }"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: ace"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingCompactMapSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.func","displayName":"Function"},"identifier":{"precise":"s:12_Concurrency31withCheckedThrowingContinuation8function_xSS_yScCyxs5Error_pGXEtYaKlF","interfaceLanguage":"swift"},"pathComponents":["withCheckedThrowingContinuation(function:_:)"],"names":{"title":"withCheckedThrowingContinuation(function:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCheckedThrowingContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]},"docComment":{"lines":[{"text":"Suspends the current task,"},{"text":"then calls the given closure with a checked throwing continuation for the current task."},{"text":""},{"text":"- Parameters:"},{"text":"  - function: A string identifying the declaration that is the notional"},{"text":"    source for the continuation, used to identify the continuation in"},{"text":"    runtime diagnostics related to misuse of this continuation."},{"text":"  - body: A closure that takes an `UnsafeContinuation` parameter."},{"text":"    You must resume the continuation exactly once."},{"text":""},{"text":"If `resume(throwing:)` is called on the continuation,"},{"text":"this function throws that error."}]},"functionSignature":{"parameters":[{"name":"function","declarationFragments":[{"kind":"identifier","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":0}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withCheckedThrowingContinuation"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"function"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#function"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"CheckedContinuation","preciseIdentifier":"s:ScC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `max()` method returns the max value"},{"text":"of the sequence."},{"text":""},{"text":"    let max = await Counter(howHigh: 10)"},{"text":"        .max()"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: 10"},{"text":""},{"text":"- Returns: The sequenceâ€™s maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:ScP8rawValueScPs5UInt8V_tcfc","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","init(rawValue:)"],"names":{"title":"init(rawValue:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","spelling":")"}]},"docComment":{"lines":[{"text":"Creates a new instance with the specified raw value."},{"text":""},{"text":"If there is no value of the type that corresponds with the specified raw"},{"text":"value, this initializer returns `nil`. For example:"},{"text":""},{"text":"    enum PaperSize: String {"},{"text":"        case A4, A5, Letter, Legal"},{"text":"    }"},{"text":""},{"text":"    print(PaperSize(rawValue: \"Legal\"))"},{"text":"    // Prints \"Optional(\"PaperSize.Legal\")\""},{"text":""},{"text":"    print(PaperSize(rawValue: \"Tabloid\"))"},{"text":"    // Prints \"nil\""},{"text":""},{"text":"- Parameter rawValue: The raw value to use for the new instance."}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"rawValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","spelling":")"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:SYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:ScP","interfaceLanguage":"swift"},"pathComponents":["TaskPriority","init(from:)"],"names":{"title":"init(from:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"lines":[{"text":"Creates a new instance by decoding from the given decoder, when the"},{"text":"type's `RawValue` is `UInt8`."},{"text":""},{"text":"This initializer throws an error if reading from the decoder fails, or"},{"text":"if the data read is corrupted or otherwise invalid."},{"text":""},{"text":"- Parameter decoder: The decoder to read data from."}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self","rhs":"Decodable","rhsPrecise":"s:Se"},{"kind":"sameType","lhs":"Self.RawValue","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self","rhs":"Decodable","rhsPrecise":"s:Se"},{"kind":"sameType","lhs":"Self.RawValue","rhs":"UInt8","rhsPrecise":"s:s5UInt8V"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"from"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"decoder"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scg","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"lines":[{"text":"Returns the result of combining the elements of the asynchronous sequence"},{"text":"using the given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements of"},{"text":"an entire sequence. For example, you can use this method on an sequence of"},{"text":"numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure executes sequentially with an accumulating"},{"text":"value initialized to `initialResult` and each element of the sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `4`. The `reduce(_:_:)` method sums the values"},{"text":"received from the asynchronous sequence."},{"text":""},{"text":"    let sum = await Counter(howHigh: 4)"},{"text":"        .reduce(0) {"},{"text":"            $0 + $1"},{"text":"        }"},{"text":"    print(sum)"},{"text":"    // Prints: 10"},{"text":""},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    The `nextPartialResult` closure receives `initialResult` the first"},{"text":"    time the closure runs."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the asynchronous sequence into a new accumulating value,"},{"text":"    for use in the next call of the `nextPartialResult` closure or"},{"text":"    returned to the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg20asyncUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","asyncUnlessCancelled(priority:operation:)"],"names":{"title":"asyncUnlessCancelled(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"asyncUnlessCancelled"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"*","renamed":"addTaskUnlessCancelled(priority:operation:)","isUnconditionallyDeprecated":true},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC3getxyF","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","get()"],"names":{"title":"get()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Value"}]},"docComment":{"lines":[{"text":"Gets the value currently bound to this task-local from the current task."},{"text":""},{"text":"If no current task is available in the context where this call is made,"},{"text":"or if the task-local has no value bound, this will return the `defaultValue`"},{"text":"of the task local."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Value"}]},"swiftGenerics":{"parameters":[{"name":"Value","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Value","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"get"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Value"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that contains, in order, the elements of"},{"text":"the base sequence that satisfy the given predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `filter(_:)` method returns `true` for even"},{"text":"values and `false` for odd values, thereby filtering out the odd values:"},{"text":""},{"text":"    let stream = Counter(howHigh: 10)"},{"text":"        .filter { $0 % 2 == 0 }"},{"text":"    for await number in stream {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: 2  4  6  8  10"},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  asynchronous sequence as its argument and returns a Boolean value"},{"text":"  that indicates whether to include the element in the filtered sequence."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  of the base sequence that satisfy the given predicate."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncFilterSequence","preciseIdentifier":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps the given closure over the"},{"text":"asynchronous sequenceâ€™s elements."},{"text":""},{"text":"Use the `map(_:)` method to transform every element received from a base"},{"text":"asynchronous sequence. Typically, you use this to transform from one type"},{"text":"of element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `map(_:)` method"},{"text":"takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. This means the outer `for await in` loop"},{"text":"iterates over `String` instances instead of the underlying `Int` values"},{"text":"that `Counter` produces:"},{"text":""},{"text":"    let romanNumeralDict: [Int: String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    let stream = Counter(howHigh: 5)"},{"text":"        .map { romanNumeralDict[$0] ?? \"(unknown)\" }"},{"text":"    for await numeral in stream {"},{"text":"        print(\"\\(numeral) \", terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: I  II  III  (unknown)  V"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an element"},{"text":"  of this sequence as its parameter and returns a transformed value of the"},{"text":"  same or of a different type."},{"text":"- Returns: An asynchronous sequence that contains, in order, the elements"},{"text":"  produced by the `transform` closure."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Transformed","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Transformed"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncMapSequence","preciseIdentifier":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Transformed"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncCompactMapSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropFirstSequence","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the maximum element in the asynchronous sequence, using the given"},{"text":"predicate as the comparison between elements."},{"text":""},{"text":"Use this method when the asynchronous sequence's values don't conform"},{"text":"to `Comparable`, or when you want to apply a custom ordering to the"},{"text":"sequence."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That is,"},{"text":"for any elements `a`, `b`, and `c`, the following conditions must hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The following example uses an enumeration of playing cards ranks, `Rank`,"},{"text":"which ranges from `ace` (low) to `king` (high). An asynchronous sequence"},{"text":"called `RankCounter` produces all elements of the array. The predicate"},{"text":"provided to the `max(by:)` method sorts ranks based on their `rawValue`:"},{"text":""},{"text":"    enum Rank: Int {"},{"text":"        case ace = 1, two, three, four, five, six, seven, eight, nine, ten, jack, queen, king"},{"text":"    }"},{"text":""},{"text":"    let max = await RankCounter()"},{"text":"        .max { $0.rawValue < $1.rawValue }"},{"text":"    print(max ?? \"none\")"},{"text":"    // Prints: king"},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument; otherwise,"},{"text":"  `false`."},{"text":"- Returns: The sequenceâ€™s minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns `nil`."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingMapSequence","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that concatenates the results of calling"},{"text":"the given error-throwing transformation with each element of this"},{"text":"sequence."},{"text":""},{"text":"Use this method to receive a single-level asynchronous sequence when your"},{"text":"transformation produces an asynchronous sequence for each element."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The transforming closure takes the received `Int`"},{"text":"and returns a new `Counter` that counts that high. For example, when the"},{"text":"transform receives `3` from the base sequence, it creates a new `Counter`"},{"text":"that produces the values `1`, `2`, and `3`. The `flatMap(_:)` method"},{"text":"\"flattens\" the resulting sequence-of-sequences into a single"},{"text":"`AsyncSequence`. However, when the closure receives `4`, it throws an"},{"text":"error, terminating the sequence."},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .flatMap { (value) -> Counter in"},{"text":"                if value == 4 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return Counter(howHigh: value)"},{"text":"            }"},{"text":"        for try await number in stream {"},{"text":"            print (\"\\(number)\", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(error)"},{"text":"    }"},{"text":"    // Prints: 1 1 2 1 2 3 MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns an"},{"text":"  `AsyncSequence`. If `transform` throws an error, the sequence ends."},{"text":"- Returns: A single, flattened asynchronous sequence that contains all"},{"text":"  elements in all the asychronous sequences produced by `transform`. The"},{"text":"  sequence ends either when the the last sequence created from the last"},{"text":"  element from base sequence ends, or when `transform` throws an error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingFlatMapSequence","preciseIdentifier":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"AsyncSequence","preciseIdentifier":"s:Sci"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncPrefixWhileSequence","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Produces the next element in the prefix-while sequence."},{"text":""},{"text":"If the predicate hasn't yet failed, this method gets the next element"},{"text":"from the base sequence and calls the predicate with it. If this call"},{"text":"succeeds, this method passes along the element. Otherwise, it returns"},{"text":"`nil`, ending the sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Base","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Base"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:Scs","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingStream","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `first(where:)` method returns the first"},{"text":"member of the sequence that's evenly divisible by both `2` and `3`."},{"text":""},{"text":"    let divisibleBy2And3 = await Counter(howHigh: 10)"},{"text":"        .first { $0 % 2 == 0 && $0 % 3 == 0 }"},{"text":"    print(divisibleBy2And3 ?? \"none\")"},{"text":"    // Prints: 6"},{"text":""},{"text":"The predicate executes each time the asynchronous sequence produces an"},{"text":"element, until either the predicate finds a match or the sequence ends."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the asynchronous"},{"text":" sequence as its argument and returns a Boolean value that indicates"},{"text":" whether the element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncMapSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.type.method","displayName":"Type Method"},"identifier":{"precise":"s:ScT12_Concurrencys5Error_pRs_rlE8detached8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntFZ","interfaceLanguage":"swift"},"pathComponents":["Task","detached(priority:operation:)"],"names":{"title":"detached(priority:operation:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Runs the given throwing operation asynchronously"},{"text":"as part of a new top-level task."},{"text":""},{"text":"If the operation throws an error, this method propagates that error."},{"text":""},{"text":"Don't use a detached task if it's possible"},{"text":"to model the operation using structured concurrency features like child tasks."},{"text":"Child tasks inherit the parent task's priority and task-local storage,"},{"text":"and canceling a parent task automatically cancels all of its child tasks."},{"text":"You need to handle these considerations manually with a detached task."},{"text":""},{"text":"You need to keep a reference to the detached task"},{"text":"if you want to cancel it by calling the `Task.cancel()` method."},{"text":"Discarding your reference to a detached task"},{"text":"doesn't implicitly cancel that task,"},{"text":"it only makes it impossible for you to explicitly cancel the task."},{"text":""},{"text":"- Parameters:"},{"text":"  - priority: The priority of the task."},{"text":"  - operation: The operation to perform."},{"text":""},{"text":"- Returns: A reference to the task."}]},"functionSignature":{"parameters":[{"name":"priority","declarationFragments":[{"kind":"identifier","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"?"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Success","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"sameType","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"detached"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"priority"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"TaskPriority","preciseIdentifier":"s:ScP"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Task","preciseIdentifier":"s:ScT"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Success"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFilterSequence","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Creates an asynchronous sequence that maps an error-throwing closure over"},{"text":"the base sequenceâ€™s elements, omitting results that don't return a value."},{"text":""},{"text":"Use the `compactMap(_:)` method to transform every element received from"},{"text":"a base asynchronous sequence, while also discarding any `nil` results"},{"text":"from the closure. Typically, you use this to transform from one type of"},{"text":"element to another."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `5`. The closure provided to the `compactMap(_:)`"},{"text":"method takes each `Int` and looks up a corresponding `String` from a"},{"text":"`romanNumeralDict` dictionary. Since there is no key for `4`, the closure"},{"text":"returns `nil` in this case, which `compactMap(_:)` omits from the"},{"text":"transformed asynchronous sequence. When the value is `5`, the closure"},{"text":"throws `MyError`, terminating the sequence."},{"text":""},{"text":"    let romanNumeralDict: [Int : String] ="},{"text":"        [1: \"I\", 2: \"II\", 3: \"III\", 5: \"V\"]"},{"text":""},{"text":"    do {"},{"text":"        let stream = Counter(howHigh: 5)"},{"text":"            .compactMap { (value) throws -> String? in"},{"text":"                if value == 5 {"},{"text":"                    throw MyError()"},{"text":"                }"},{"text":"                return romanNumeralDict[value]"},{"text":"            }"},{"text":"        for try await numeral in stream {"},{"text":"            print(\"\\(numeral) \", terminator: \" \")"},{"text":"        }"},{"text":"    } catch {"},{"text":"        print(\"Error: \\(error)\")"},{"text":"    }"},{"text":"    // Prints: I  II  III  Error: MyError()"},{"text":""},{"text":"- Parameter transform: An error-throwing mapping closure. `transform`"},{"text":"  accepts an element of this sequence as its parameter and returns a"},{"text":"  transformed value of the same or of a different type. If `transform`"},{"text":"  throws an error, the sequence ends."},{"text":"- Returns: An asynchronous sequence that contains, in order, the"},{"text":"  non-`nil` elements produced by the `transform` closure. The sequence"},{"text":"  ends either when the base sequence ends or when `transform` throws an"},{"text":"  error."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"@escaping"},{"kind":"text","spelling":" ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"AsyncThrowingCompactMapSequence","preciseIdentifier":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncThrowingDropWhileSequence","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Omits a specified number of elements from the base asynchronous sequence,"},{"text":"then passes through all remaining elements."},{"text":""},{"text":"Use `dropFirst(_:)` when you want to drop the first *n* elements from the"},{"text":"base sequence and pass through the remaining elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `dropFirst(_:)` method causes the modified"},{"text":"sequence to ignore the values `0` through `4`, and instead emit `5` through `10`:"},{"text":""},{"text":"    for await number in Counter(howHigh: 10).dropFirst(3) {"},{"text":"        print(\"\\(number) \", terminator: \" \")"},{"text":"    }"},{"text":"    // prints \"4 5 6 7 8 9 10\""},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in the"},{"text":"sequence, the result is an empty sequence."},{"text":""},{"text":"- Parameter count: The number of elements to drop from the beginning of"},{"text":"  the sequence. `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence that drops the first `count`"},{"text":"  elements from the base sequence."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"AsyncDropFirstSequence","preciseIdentifier":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Scg10nextResults0B0Oyxq_GSgyYaF","interfaceLanguage":"swift"},"pathComponents":["ThrowingTaskGroup","nextResult()"],"names":{"title":"nextResult()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nextResult"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">?"}]},"docComment":{"lines":[{"text":"Wait for the next child task to complete,"},{"text":"and return a result containing either"},{"text":"the value that the child task returned or the error that it threw."},{"text":""},{"text":"The values returned by successive calls to this method"},{"text":"appear in the order that the tasks *completed*,"},{"text":"not in the order that those tasks were added to the task group."},{"text":"For example:"},{"text":""},{"text":"    group.addTask { 1 }"},{"text":"    group.addTask { 2 }"},{"text":""},{"text":"    guard let result = await group.nextResult() else {"},{"text":"        return  // No task to wait on, which won't happen in this example."},{"text":"    }"},{"text":"    "},{"text":"    switch result { "},{"text":"    case .success(let value): print(value)"},{"text":"    case .failure(let error): print(\"Failure: \\(error)\")"},{"text":"    }"},{"text":"    // Prints either \"2\" or \"1\"."},{"text":""},{"text":"If the next child task throws an error"},{"text":"and you propagate that error from this method"},{"text":"out of the body of a call to the"},{"text":"`ThrowingTaskGroup.withThrowingTaskGroup(of:returning:body:)` method,"},{"text":"then all remaining child tasks in that group are implicitly canceled."},{"text":""},{"text":"- Returns: A `Result.success` value"},{"text":"  containing the value that the child task returned,"},{"text":"  or a `Result.failure` value"},{"text":"  containing the error that the child task threw."},{"text":""},{"text":"- SeeAlso: `next()`"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">?"}]},"swiftGenerics":{"parameters":[{"name":"ChildTaskResult","index":0,"depth":0},{"name":"Failure","index":1,"depth":0}],"constraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nextResult"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"ChildTaskResult"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Failure"},{"kind":"text","spelling":">?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:12_Concurrency9TaskLocalC9withValue_9operation4file4lineqd__x_qd__yYaKXESSSutYaKlF","interfaceLanguage":"swift"},"pathComponents":["TaskLocal","withValue(_:operation:file:line:)"],"names":{"title":"withValue(_:operation:file:line:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withValue"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}]},"docComment":{"lines":[{"text":"Binds the task-local to the specific value for the duration of the asynchronous operation."},{"text":""},{"text":"The value is available throughout the execution of the operation closure,"},{"text":"including any `get` operations performed by child-tasks created during the"},{"text":"execution of the operation closure."},{"text":""},{"text":"If the same task-local is bound multiple times, be it in the same task, or"},{"text":"in specific child tasks, the more specific (i.e. \"deeper\") binding is"},{"text":"returned when the value is read."},{"text":""},{"text":"If the value is a reference type, it will be retained for the duration of"},{"text":"the operation closure."}]},"functionSignature":{"parameters":[{"name":"valueDuringOperation","declarationFragments":[{"kind":"identifier","spelling":"valueDuringOperation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"}]},{"name":"operation","declarationFragments":[{"kind":"identifier","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}]},{"name":"file","declarationFragments":[{"kind":"identifier","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},{"name":"line","declarationFragments":[{"kind":"identifier","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"}]}],"returns":[{"kind":"typeIdentifier","spelling":"R"}]},"swiftGenerics":{"parameters":[{"name":"Value","index":0,"depth":0},{"name":"R","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"Value","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withValue"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"valueDuringOperation"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Value"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"operation"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"file"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#file"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"line"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","spelling":" = "},{"kind":"keyword","spelling":"#line"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","interfaceLanguage":"swift"},"pathComponents":["AsyncSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncDropWhileSequence","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"lines":[{"text":"Returns an asynchronous sequence, up to the specified maximum length,"},{"text":"containing the initial elements of the base asynchronous sequence."},{"text":""},{"text":"Use `prefix(_:)` to reduce the number of elements produced by the"},{"text":"asynchronous sequence."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `prefix(_:)` method causes the modified"},{"text":"sequence to pass through the first six values, then end."},{"text":""},{"text":"    for await number in Counter(howHigh: 10).prefix(6) {"},{"text":"        print(\"\\(number) \")"},{"text":"    }"},{"text":"    // prints \"1 2 3 4 5 6\""},{"text":""},{"text":"If the count passed to `prefix(_:)` exceeds the number of elements in the"},{"text":"base sequence, the result contains all of the elements in the sequence."},{"text":""},{"text":"- Parameter count: The maximum number of elements to return. The value of"},{"text":"  `count` must be greater than or equal to zero."},{"text":"- Returns: An asynchronous sequence starting at the beginning of the"},{"text":"  base sequence with at most `count` elements."}]},"functionSignature":{"parameters":[{"name":"count","declarationFragments":[{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"_Concurrency"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"AsyncPrefixSequence","preciseIdentifier":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","interfaceLanguage":"swift"},"pathComponents":["AsyncFlatMapSequence","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"lines":[{"text":"Returns the minimum element in an asynchronous sequence of comparable"},{"text":"elements."},{"text":""},{"text":"In this example, an asynchronous sequence called `Counter` produces `Int`"},{"text":"values from `1` to `10`. The `min()` method returns the minimum value"},{"text":"of the sequence."},{"text":""},{"text":"    let min = await Counter(howHigh: 10)"},{"text":"        .min()"},{"text":"    print(min ?? \"none\")"},{"text":"    // Prints: 1"},{"text":""},{"text":"- Returns: The sequenceâ€™s minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_Concurrency","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() "},{"kind":"keyword","spelling":"async"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","availability":[{"domain":"macOS","introduced":{"major":10,"minor":15}},{"domain":"watchOS","introduced":{"major":6,"minor":0}},{"domain":"iOS","introduced":{"major":13,"minor":0}},{"domain":"tvOS","introduced":{"major":13,"minor":0}}]}],"relationships":[{"kind":"conformsTo","source":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:ScP2neoiySbScP_ScPtFZ","target":"s:ScP"},{"kind":"memberOf","source":"s:ScP13userInitiatedScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Scs9unfoldingScsyxs5Error_pGxSgyYaKc_tcsAB_pRs_rlufc","target":"s:Scs"},{"kind":"conformsTo","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"conformsTo","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"conformsTo","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"conformsTo","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:ScS12ContinuationV11TerminationO","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"conformsTo","source":"s:Sce","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE23withCancellationHandler7handler9operationqd__yyYbXE_qd__yYaKXEtYaKlFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency9TaskLocalC","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV4nextq_SgyYaKF","target":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"requirementOf","source":"s:Sci17makeAsyncIterator0bC0QzyF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5Error_pRs_rlE8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntcfc","target":"s:ScT"},{"kind":"memberOf","source":"s:ScS12ContinuationV11TerminationO8finishedyADyx__GAFmlF","target":"s:ScS12ContinuationV11TerminationO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV11TerminationO9cancelledyADyx__GAFmlF","target":"s:ScS12ContinuationV11TerminationO"},{"kind":"memberOf","source":"s:Scc6resumeyyytRszrlF","target":"s:Scc"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV7Elementa","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI7ElementQa","displayName":"AsyncIteratorProtocol.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"conformsTo","source":"s:ScJ","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC11descriptionSSvp","target":"s:12_Concurrency9TaskLocalC","sourceOrigin":{"identifier":"s:s23CustomStringConvertibleP11descriptionSSvp","displayName":"CustomStringConvertible.description"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropWhileSequenceV7Elementa","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"conformsTo","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Scc6resume4withys6ResultOyxq_G_tF","target":"s:Scc"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"conformsTo","source":"s:ScP","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"conformsTo","source":"s:Scc","target":"s:s8SendableP","targetFallback":"Swift.Sendable","swiftConstraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC12wrappedValuexvp","target":"s:12_Concurrency9TaskLocalC"},{"kind":"conformsTo","source":"s:ScM","target":"s:ScA"},{"kind":"memberOf","source":"s:ScT12_Concurrencys5Error_pRs_rlE11runDetached8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:ScP1loiySbScP_ScPtFZ","target":"s:ScP","sourceOrigin":{"identifier":"s:SL1loiySbx_xtFZ","displayName":"Comparable.<(_:_:)"}},{"kind":"conformsTo","source":"s:ScS12ContinuationV11TerminationO","target":"s:SH","targetFallback":"Swift.Hashable"},{"kind":"memberOf","source":"s:Scc6resume4withys6ResultOyxqd__G_ts5Error_pRs_sAFRd__lF","target":"s:Scc"},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORs_rlE8detached8priority9operationScTyxACGScPSg_xyYaYbcntFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:ScS12ContinuationV5yieldyAB11YieldResultOyx__GxnF","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency24AsyncThrowingMapSequenceV7Elementa","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"conformsTo","source":"s:Sct","target":"s:SH","targetFallback":"Swift.Hashable"},{"kind":"memberOf","source":"s:ScP2leoiySbScP_ScPtFZ","target":"s:ScP","sourceOrigin":{"identifier":"s:SL2leoiySbx_xtFZ","displayName":"Comparable.<=(_:_:)"}},{"kind":"conformsTo","source":"s:Sct","target":"s:SQ","targetFallback":"Swift.Equatable"},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC14projectedValueACyxGvp","target":"s:12_Concurrency9TaskLocalC"},{"kind":"memberOf","source":"s:12_Concurrency16AsyncMapSequenceV8IteratorV","target":"s:12_Concurrency16AsyncMapSequenceV"},{"kind":"conformsTo","source":"s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"conformsTo","source":"s:12_Concurrency19AsyncFilterSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"conformsTo","source":"s:ScM","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"conformsTo","source":"s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"},{"kind":"conformance","lhs":"SegmentOfResult","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:12_Concurrency16AsyncMapSequenceV7Elementa","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropWhileSequenceV04makeB8IteratorAC0G0Vyx_GyF","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:ScS9unfolding8onCancelScSyxGxSgyYac_yyYbcSgtcfc","target":"s:ScS"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","target":"s:Sci"},{"kind":"memberOf","source":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV4nextq_SgyYaKF","target":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:ScP4highScPvpZ","target":"s:ScP"},{"kind":"conformsTo","source":"s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:ScM7enqueueyyScJF","target":"s:ScM"},{"kind":"memberOf","source":"s:12_Concurrency16AsyncMapSequenceV8IteratorV4nextq_SgyYaKF","target":"s:12_Concurrency16AsyncMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV","target":"s:12_Concurrency22AsyncDropWhileSequenceV"},{"kind":"conformsTo","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:ScP1goiySbScP_ScPtFZ","target":"s:ScP","sourceOrigin":{"identifier":"s:SL1goiySbx_xtFZ","displayName":"Comparable.>(_:_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE5Groupa","target":"s:ScT"},{"kind":"conformsTo","source":"s:Scf","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:ScP6mediumScPvpZ","target":"s:ScP"},{"kind":"conformsTo","source":"s:ScC","target":"s:s8SendableP","targetFallback":"Swift.Sendable","swiftConstraints":[{"kind":"conformance","lhs":"T","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"E","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:Scc6resume8throwingyq_n_tF","target":"s:Scc"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA30AsyncThrowingDropWhileSequenceVyxGSb7ElementQzYaKc_tF","target":"s:Sci"},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropWhileSequenceV0B8Iteratora","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC9withValue_9operation4file4lineqd__x_qd__yKXESSSutKlF","target":"s:12_Concurrency9TaskLocalC"},{"kind":"memberOf","source":"s:Scs_15bufferingPolicy_Scsyxs5Error_pGxm_Scs12ContinuationV09BufferingB0OyxsAB_p__GyAEyxsAB_p_GXEtcsAB_pRs_rlufc","target":"s:Scs"},{"kind":"requirementOf","source":"s:ScA15unownedExecutorScevp","target":"s:ScA"},{"kind":"memberOf","source":"s:ScS12ContinuationV","target":"s:ScS"},{"kind":"memberOf","source":"s:ScS_15bufferingPolicy_ScSyxGxm_ScS12ContinuationV09BufferingB0Oyx__GyADyx_GXEtcfc","target":"s:ScS"},{"kind":"conformsTo","source":"s:ScS12ContinuationV11TerminationO","target":"s:SQ","targetFallback":"Swift.Equatable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","target":"s:Sci"},{"kind":"memberOf","source":"s:ScP8RawValuea","target":"s:ScP","sourceOrigin":{"identifier":"s:SY8RawValueQa","displayName":"RawRepresentable.RawValue"}},{"kind":"memberOf","source":"s:Scc6resume9returningyxn_tF","target":"s:Scc"},{"kind":"conformsTo","source":"s:ScT","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"conformsTo","source":"s:ScF","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:ScP2geoiySbScP_ScPtFZ","target":"s:ScP","sourceOrigin":{"identifier":"s:SL2geoiySbx_xtFZ","displayName":"Comparable.>=(_:_:)"}},{"kind":"conformsTo","source":"s:Scg8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:12_Concurrency16AsyncMapSequenceV04makeB8IteratorAC0F0Vyxq__GyF","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV04dropD0yACyxGSiF","target":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"memberOf","source":"s:12_Concurrency16AsyncMapSequenceV0B8Iteratora","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE9withGroup10resultType9returning4bodyqd_0_qd__m_qd_0_mqd_0_Scgyqd__s5Error_pGzYaKXEtYaKs8SendableRd__r0_lFZ","target":"s:ScT"},{"kind":"requirementOf","source":"s:Sci7ElementQa","target":"s:Sci"},{"kind":"memberOf","source":"s:Scc6resume9returningyxn_ts5NeverORs_rlF","target":"s:Scc"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA27AsyncThrowingFilterSequenceVyxGSb7ElementQzYaKcF","target":"s:Sci"},{"kind":"memberOf","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV7Elementa","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE5sleep11nanosecondsys6UInt64V_tYaKFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:ScG5spawn8priority9operationyScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"conformsTo","source":"s:Scg","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"conformsTo","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:ScG20spawnUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC12wrappedValueACyxGx_tcfc","target":"s:12_Concurrency9TaskLocalC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","displayName":"AsyncSequence.allSatisfy(_:)"}},{"kind":"conformsTo","source":"s:ScE","target":"s:s5ErrorP","targetFallback":"Swift.Error"},{"kind":"memberOf","source":"s:ScC6resume4withys6ResultOyxq_G_tF","target":"s:ScC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:ScT3getxyYaKF","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV15BufferingPolicyO","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV04makeB8IteratorAC0G0Vyx_GyF","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"conformsTo","source":"s:ScM","target":"s:12_Concurrency11GlobalActorP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV0B8Iteratora","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:ScG8IteratorV6cancelyyF","target":"s:ScG8IteratorV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:ScG5async8priority9operationyScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"conformsTo","source":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency9TaskLocalC","target":"s:s23CustomStringConvertibleP","targetFallback":"Swift.CustomStringConvertible"},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV7Elementa","target":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI7ElementQa","displayName":"AsyncIteratorProtocol.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:ScC6resume4withys6ResultOyxqd__G_ts5Error_pRs_sAFRd__lF","target":"s:ScC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","displayName":"AsyncSequence.contains(_:)"}},{"kind":"memberOf","source":"s:ScG8IteratorV4nextxSgyYaF","target":"s:ScG8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScT","target":"s:ScT","sourceOrigin":{"identifier":"s:SQsE2neoiySbx_xtFZ","displayName":"Equatable.!=(_:_:)"}},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SQsE2neoiySbx_xtFZ","displayName":"Equatable.!=(_:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV"},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:Sct","target":"s:Sct","sourceOrigin":{"identifier":"s:SQsE2neoiySbx_xtFZ","displayName":"Equatable.!=(_:_:)"}},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:ScS12ContinuationV11TerminationO","target":"s:ScS12ContinuationV11TerminationO","sourceOrigin":{"identifier":"s:SQsE2neoiySbx_xtFZ","displayName":"Equatable.!=(_:_:)"}},{"kind":"conformsTo","source":"s:ScP","target":"s:SQ","targetFallback":"Swift.Equatable"},{"kind":"memberOf","source":"s:ScS12ContinuationV13onTerminationyAB0C0Oyx__GYbcSgvp","target":"s:ScS12ContinuationV"},{"kind":"conformsTo","source":"s:12_Concurrency19AsyncPrefixSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"requirementOf","source":"s:Scf23asUnownedSerialExecutorSceyF","target":"s:Scf"},{"kind":"memberOf","source":"s:ScS12ContinuationV11YieldResultO","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:Scg10waitForAllyyYaKF","target":"s:Scg"},{"kind":"conformsTo","source":"s:ScS","target":"s:Sci"},{"kind":"memberOf","source":"s:ScT9getResults0B0Oyxq_GyYaF","target":"s:ScT"},{"kind":"memberOf","source":"s:ScC12continuation8functionScCyxq_GSccyxq_G_SStcfc","target":"s:ScC"},{"kind":"memberOf","source":"s:ScS12ContinuationV6finishyyF","target":"s:ScS12ContinuationV"},{"kind":"requirementOf","source":"s:Sci13AsyncIteratorQa","target":"s:Sci"},{"kind":"requirementOf","source":"s:ScF7enqueueyyScJF","target":"s:ScF"},{"kind":"memberOf","source":"s:ScS12ContinuationV5yield4withAB11YieldResultOyx__Gs0E0Oyxs5NeverOG_tF","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:12_Concurrency20AsyncFlatMapSequenceV7Elementa","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:ScP2eeoiySbScP_ScPtFZ","target":"s:ScP","sourceOrigin":{"identifier":"s:SQ2eeoiySbx_xtFZ","displayName":"Equatable.==(_:_:)"}},{"kind":"memberOf","source":"s:ScC6resumeyyytRszrlF","target":"s:ScC"},{"kind":"memberOf","source":"s:ScS8IteratorV","target":"s:ScS"},{"kind":"memberOf","source":"s:Scg7addTask8priority9operationyScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"conformsTo","source":"s:Scg","target":"s:s8SendableP","targetFallback":"Swift.Sendable","swiftConstraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORs_rlE3getxyYaF","target":"s:ScT"},{"kind":"requirementOf","source":"s:Scf7enqueueyyScJF","target":"s:Scf"},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV","target":"s:12_Concurrency20AsyncFlatMapSequenceV"},{"kind":"conformsTo","source":"s:ScP","target":"s:SL","targetFallback":"Swift.Comparable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sce8ordinaryScexh_tcScfRzlufc","target":"s:Sce"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV8IteratorV","target":"s:12_Concurrency23AsyncCompactMapSequenceV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency20AsyncFlatMapSequenceV0B8Iteratora","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:12_Concurrency24AsyncThrowingMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:12_Concurrency20AsyncFlatMapSequenceV04makeB8IteratorAC0G0Vyxq__GyF","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV0B8Iteratora","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency24AsyncThrowingMapSequenceV0B8Iteratora","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncPrefixSequenceV7Elementa","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncFilterSequenceV0B8Iteratora","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV","target":"s:12_Concurrency19AsyncPrefixSequenceV"},{"kind":"requirementOf","source":"s:ScI7ElementQa","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:ScC6resume8throwingyq_n_tF","target":"s:ScC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV5yieldAB11YieldResultOyyt__GyytRszlF","target":"s:ScS12ContinuationV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"conformsTo","source":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"conformsTo","source":"s:ScS12ContinuationV","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE7suspendyyYaFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:ScP7defaultScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:ScP10backgroundScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncFilterSequenceV04makeB8IteratorAC0F0Vyx_GyF","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Scg20asyncUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:ScC6resume9returningyxn_tF","target":"s:ScC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency19AsyncPrefixSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Scg10nextResults0B0Oyxq_GSgyYaF","target":"s:Scg"},{"kind":"conformsTo","source":"s:ScT","target":"s:SQ","targetFallback":"Swift.Equatable","swiftConstraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV7Elementa","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE17CancellationErrorScEyFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:ScG11isCancelledSbvp","target":"s:ScG"},{"kind":"memberOf","source":"s:ScG10waitForAllyyYaF","target":"s:ScG"},{"kind":"memberOf","source":"s:ScT4hash4intoys6HasherVz_tF","target":"s:ScT","sourceOrigin":{"identifier":"s:SH4hash4intoys6HasherVz_tF","displayName":"Hashable.hash(into:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE15currentPriorityScPvpZ","target":"s:ScT"},{"kind":"memberOf","source":"s:ScP7utilityScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA32AsyncThrowingPrefixWhileSequenceVyxGSb7ElementQzYaKc_tKF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV0B8Iteratora","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV04makeB8IteratorAC0H0Vyxq__GyF","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncPrefixSequenceV0B8Iteratora","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncFilterSequenceV7Elementa","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:ScT2eeoiySbScTyxq_G_ABtFZ","target":"s:ScT","sourceOrigin":{"identifier":"s:SQ2eeoiySbx_xtFZ","displayName":"Equatable.==(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV","target":"s:12_Concurrency19AsyncFilterSequenceV"},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE6Handlea","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"conformsTo","source":"s:ScT","target":"s:SH","targetFallback":"Swift.Hashable","swiftConstraints":[{"kind":"conformance","lhs":"Success","rhs":"Sendable","rhsPrecise":"s:s8SendableP"},{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sct11isCancelledSbvp","target":"s:Sct"},{"kind":"memberOf","source":"s:12_Concurrency19AsyncPrefixSequenceV04makeB8IteratorAC0F0Vyx_GyF","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE3zzlopys16PartialRangeUpToVyxGxFZ","displayName":"Comparable...<(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE17checkCancellationyyKFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"conformsTo","source":"s:ScA","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:ScG20asyncUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"memberOf","source":"s:Scg4nextxSgyYaKF","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE5sleepyys6UInt64VYaFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScG9cancelAllyyF","target":"s:ScG"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA24AsyncThrowingMapSequenceVyxqd__Gqd__7ElementQzYaKclF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:ScG7isEmptySbvp","target":"s:ScG"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Scg8IteratorV6cancelyyF","target":"s:Scg8IteratorV"},{"kind":"memberOf","source":"s:Scg22addTaskUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Scg8IteratorV4nextxSgyYaKF","target":"s:Scg8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE8Prioritya","target":"s:ScT"},{"kind":"conformsTo","source":"s:ScP","target":"s:SE","targetFallback":"Swift.Encodable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV4next7ElementQy_SgyYaKF","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"requirementOf","source":"s:ScI4next7ElementQzSgyYaKF","target":"s:ScI"},{"kind":"memberOf","source":"s:ScG22addTaskUnlessCancelled8priority9operationSbScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"memberOf","source":"s:ScS12ContinuationV15BufferingPolicyO15bufferingNewestyADyx__GSicAFmlF","target":"s:ScS12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:ScM3run10resultType4bodyxxm_xyYbKScMYcXEtYaKs8SendableRzlFZ","target":"s:ScM"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE3zzzopys19PartialRangeThroughVyxGxFZ","displayName":"Comparable....(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV8IteratorV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV"},{"kind":"memberOf","source":"s:ScS12ContinuationV15BufferingPolicyO15bufferingOldestyADyx__GSicAFmlF","target":"s:ScS12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Scs12ContinuationV11TerminationO8finishedyADyxq___Gq_SgcAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV11TerminationO"},{"kind":"memberOf","source":"s:ScP11unspecifiedScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Scg5spawn8priority9operationyScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORs_rlE8priority9operationScTyxACGScPSg_xyYaYbcntcfc","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV7Elementa","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","displayName":"AsyncSequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:ScG4nextxSgyYaF","target":"s:ScG"},{"kind":"memberOf","source":"s:Sct4hash4intoys6HasherVz_tF","target":"s:Sct","sourceOrigin":{"identifier":"s:SH4hash4intoys6HasherVz_tF","displayName":"Hashable.hash(into:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV11YieldResultO8enqueuedyADyx__GSi_tcAFmlF","target":"s:ScS12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV15BufferingPolicyO9unboundedyADyx__GAFmlF","target":"s:ScS12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"conformsTo","source":"s:ScP","target":"s:Se","targetFallback":"Swift.Decodable"},{"kind":"memberOf","source":"s:ScG7addTask8priority9operationyScPSg_xyYaYbcntF","target":"s:ScG"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:ScG3add8priority9operationSbScPSg_xyYaYbcntYaF","target":"s:ScG"},{"kind":"memberOf","source":"s:ScT6results6ResultOyxq_Gvp","target":"s:ScT"},{"kind":"memberOf","source":"s:Scs12ContinuationV15BufferingPolicyO9unboundedyADyxq___GAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"conformsTo","source":"s:ScG8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","displayName":"AsyncSequence.max()"}},{"kind":"memberOf","source":"s:Scg7isEmptySbvp","target":"s:Scg"},{"kind":"memberOf","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA09AsyncFlatC8SequenceVyxqd__Gqd__7ElementQzYacSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV04makeB8IteratorAC0H0Vyx_GyF","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefixyAA19AsyncPrefixSequenceVyxGSiF","displayName":"AsyncSequence.prefix(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA020AsyncThrowingCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaKclF","target":"s:Sci"},{"kind":"memberOf","source":"s:Scg5async8priority9operationyScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"memberOf","source":"s:ScT6cancelyyF","target":"s:ScT"},{"kind":"memberOf","source":"s:Scg9cancelAllyyF","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Scg20spawnUnlessCancelled8priority9operationSbScPSg_xyYaYbKcntF","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE12basePriorityScPSgvpZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV0B8Iteratora","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORs_rlE5valuexvp","target":"s:ScT"},{"kind":"defaultImplementationOf","source":"s:12_Concurrency11GlobalActorPAAE21sharedUnownedExecutorScevpZ","target":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","sourceOrigin":{"identifier":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","displayName":"GlobalActor.sharedUnownedExecutor"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sct2eeoiySbSct_ScttFZ","target":"s:Sct","sourceOrigin":{"identifier":"s:SQ2eeoiySbx_xtFZ","displayName":"Equatable.==(_:_:)"}},{"kind":"conformsTo","source":"s:ScG","target":"s:s8SendableP","targetFallback":"Swift.Sendable","swiftConstraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScS12ContinuationV11YieldResultO10terminatedyADyx__GAFmlF","target":"s:ScS12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:12_Concurrency11GlobalActorPAAE21sharedUnownedExecutorScevpZ::SYNTHESIZED::s:ScM","target":"s:ScM","sourceOrigin":{"identifier":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","displayName":"GlobalActor.sharedUnownedExecutor"}},{"kind":"conformsTo","source":"s:Scf","target":"s:ScF"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"conformsTo","source":"s:12_Concurrency24AsyncThrowingMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV"},{"kind":"memberOf","source":"s:Scg11isCancelledSbvp","target":"s:Scg"},{"kind":"memberOf","source":"s:ScG8IteratorV7Elementa","target":"s:ScG8IteratorV","sourceOrigin":{"identifier":"s:ScI7ElementQa","displayName":"AsyncIteratorProtocol.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE11isCancelledSbvpZ","target":"s:ScT"},{"kind":"memberOf","source":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV4next7ElementQy_SgyYaKF","target":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE3zzzoPys16PartialRangeFromVyxGxFZ","displayName":"Comparable....(_:)"}},{"kind":"conformsTo","source":"s:Scs","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Failure","rhs":"Error","rhsPrecise":"s:s5ErrorP"}]},{"kind":"memberOf","source":"s:Scs12ContinuationV15BufferingPolicyO","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:SYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc","displayName":"RawRepresentable.init(from:)"}},{"kind":"memberOf","source":"s:ScS8IteratorV4nextxSgyYaF","target":"s:ScS8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","target":"s:Sci"},{"kind":"memberOf","source":"s:Scg8IteratorV","target":"s:Scg"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:ScP8rawValueScPs5UInt8V_tcfc","target":"s:ScP","sourceOrigin":{"identifier":"s:SY8rawValuexSg03RawB0Qz_tcfc","displayName":"RawRepresentable.init(rawValue:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6filteryAA19AsyncFilterSequenceVyxGSb7ElementQzYacF","displayName":"AsyncSequence.filter(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3maxACSgyYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:ScM6sharedScMvpZ","target":"s:ScM","sourceOrigin":{"identifier":"s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ","displayName":"GlobalActor.shared"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV4next7ElementQzSgyYaKF","target":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"conformsTo","source":"s:Scs12ContinuationV","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:ScS17makeAsyncIteratorScS0C0Vyx_GyF","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6reduceyqd__qd___qd__qd___7ElementQztYaKXEtYaKlF","displayName":"AsyncSequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:ScT5valuexvp","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE6prefix5whileAA24AsyncPrefixWhileSequenceVyxGSb7ElementQzYac_tKF","displayName":"AsyncSequence.prefix(while:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","displayName":"AsyncSequence.drop(while:)"}},{"kind":"conformsTo","source":"s:12_Concurrency20AsyncFlatMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:ScS12ContinuationV11YieldResultO7droppedyADyx__GxcAFmlF","target":"s:ScS12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:ScM15unownedExecutorScevp","target":"s:ScM","sourceOrigin":{"identifier":"s:ScA15unownedExecutorScevp","displayName":"Actor.unownedExecutor"}},{"kind":"conformsTo","source":"s:ScP","target":"s:SY","targetFallback":"Swift.RawRepresentable"},{"kind":"memberOf","source":"s:Scg17makeAsyncIteratorScg0C0Vyxq__GyF","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Scs12ContinuationV15BufferingPolicyO15bufferingNewestyADyxq___GSicAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:12_Concurrency23AsyncCompactMapSequenceV7Elementa","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"conformsTo","source":"s:ScG","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"ChildTaskResult","rhs":"Sendable","rhsPrecise":"s:s8SendableP"}]},{"kind":"memberOf","source":"s:Scg7Elementa","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE7flatMapyAA017AsyncThrowingFlatC8SequenceVyxqd__Gqd__7ElementQzYaKcSciRd__lF","displayName":"AsyncSequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE10compactMapyAA012AsyncCompactC8SequenceVyxqd__Gqd__Sg7ElementQzYaclF","displayName":"AsyncSequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Scs8IteratorV4nextxSgyYaKF","target":"s:Scs8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"conformsTo","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE9dropFirstyAA09AsyncDropC8SequenceVyxGSiF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Scs8IteratorV","target":"s:Scs"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:ScP8rawValues5UInt8Vvp","target":"s:ScP","sourceOrigin":{"identifier":"s:SY8rawValue03RawB0Qzvp","displayName":"RawRepresentable.rawValue"}},{"kind":"memberOf","source":"s:Scs12ContinuationV","target":"s:Scs"},{"kind":"memberOf","source":"s:ScP15userInteractiveScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Scs17makeAsyncIteratorScs0C0Vyxq__GyF","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Scg13AsyncIteratora","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"conformsTo","source":"s:Sct","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"requirementOf","source":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","target":"s:12_Concurrency11GlobalActorP"},{"kind":"memberOf","source":"s:Scs12ContinuationV11TerminationO9cancelledyADyxq___GAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV11TerminationO"},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC3getxyF","target":"s:12_Concurrency9TaskLocalC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"conformsTo","source":"s:ScS8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Scs12ContinuationV15BufferingPolicyO15bufferingOldestyADyxq___GSicAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV15BufferingPolicyO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:Scs12ContinuationV11YieldResultO","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:Scs12ContinuationV5yield4withAB11YieldResultOyxs5Error_p__Gs0E0OyxsAG_pG_tsAG_pRs_rlF","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:SLsE2leoiySbx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE2leoiySbx_xtFZ","displayName":"Comparable.<=(_:_:)"}},{"kind":"memberOf","source":"s:SLsE3zzzoiySNyxGx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE3zzzoiySNyxGx_xtFZ","displayName":"Comparable....(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3max2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.max(by:)"}},{"kind":"memberOf","source":"s:SLsE1goiySbx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE1goiySbx_xtFZ","displayName":"Comparable.>(_:_:)"}},{"kind":"requirementOf","source":"s:12_Concurrency11GlobalActorP6shared0C4TypeQzvpZ","target":"s:12_Concurrency11GlobalActorP"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3mapyAA16AsyncMapSequenceVyxqd__Gqd__7ElementQzYaclF","displayName":"AsyncSequence.map(_:)"}},{"kind":"conformsTo","source":"s:ScE","target":"s:s8SendableP","targetFallback":"Swift.Sendable"},{"kind":"memberOf","source":"s:Scs12ContinuationV5yieldAB11YieldResultOyytq___GyytRszrlF","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency9TaskLocalC9withValue_9operation4file4lineqd__x_qd__yYaKXESSSutYaKlF","target":"s:12_Concurrency9TaskLocalC"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE8contains5whereS2b7ElementQzYaKXE_tYaKF","displayName":"AsyncSequence.contains(where:)"}},{"kind":"memberOf","source":"s:ScM21sharedUnownedExecutorScevpZ","target":"s:ScM","sourceOrigin":{"identifier":"s:12_Concurrency11GlobalActorP21sharedUnownedExecutorScevpZ","displayName":"GlobalActor.sharedUnownedExecutor"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE4drop5whileAA22AsyncDropWhileSequenceVyxGSb7ElementQzYac_tF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Scg8IteratorV7Elementa","target":"s:Scg8IteratorV","sourceOrigin":{"identifier":"s:ScI7ElementQa","displayName":"AsyncIteratorProtocol.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE6reduce4into_qd__qd__n_yqd__z_7ElementQztYaKXEtYaKlF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5Error_pRs_rlE8detached8priority9operationScTyxsAB_pGScPSg_xyYaYbKcntFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySQ7ElementRpzrlE8containsySbACYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV7Elementa","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV8IteratorV","target":"s:12_Concurrency22AsyncDropFirstSequenceV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:Sct8priorityScPvp","target":"s:Sct"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:ScG8IteratorV","target":"s:ScG"},{"kind":"memberOf","source":"s:Scs12ContinuationV6finish8throwingyq_Sgn_tF","target":"s:Scs12ContinuationV"},{"kind":"conformsTo","source":"s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]},{"kind":"memberOf","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV7Elementa","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:S2cEycfc","target":"s:ScE"},{"kind":"memberOf","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV"},{"kind":"memberOf","source":"s:Scs12ContinuationV11YieldResultO10terminatedyADyxq___GAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"memberOf","source":"s:ScP3lowScPvpZ","target":"s:ScP"},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV0B8Iteratora","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Scg3add8priority9operationSbScPSg_xyYaYbKcntYaF","target":"s:Scg"},{"kind":"memberOf","source":"s:Scs12ContinuationV11YieldResultO7droppedyADyxq___GxcAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV0B8Iteratora","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"conformsTo","source":"s:12_Concurrency19AsyncFilterSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:SLsE2geoiySbx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE2geoiySbx_xtFZ","displayName":"Comparable.>=(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV0B8Iteratora","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:ScG13AsyncIteratora","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"conformsTo","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV8IteratorV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV7Elementa","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:Scs12ContinuationV11YieldResultO8enqueuedyADyxq___GSi_tcAFms5ErrorR_r0_lF","target":"s:Scs12ContinuationV11YieldResultO"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE10allSatisfyyS2b7ElementQzYaKXEYaKF","target":"s:Sci"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV04makeB8IteratorAC0H0Vyx_GyF","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"conformsTo","source":"s:Scs8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"conformsTo","source":"s:12_Concurrency16AsyncMapSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF::SYNTHESIZED::s:ScS","target":"s:ScS","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE5first5where7ElementQzSgSbAEYaKXE_tYaKF","displayName":"AsyncSequence.first(where:)"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV04makeB8IteratorAC0H0Vyxq__GyF","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"requirementOf","source":"s:12_Concurrency11GlobalActorP0C4TypeQa","target":"s:12_Concurrency11GlobalActorP"},{"kind":"memberOf","source":"s:Scs12ContinuationV5yieldyAB11YieldResultOyxq___GxnF","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF::SYNTHESIZED::s:Scg","target":"s:Scg","sourceOrigin":{"identifier":"s:Sci12_ConcurrencySL7ElementRpzrlE3minACSgyYaKF","displayName":"AsyncSequence.min()"}},{"kind":"conformsTo","source":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV8IteratorV","target":"s:ScI"},{"kind":"memberOf","source":"s:Scs12ContinuationV11TerminationO","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:Sct6cancelyyF","target":"s:Sct"},{"kind":"memberOf","source":"s:Scs12ContinuationV13onTerminationyAB0C0Oyxq___GYbcSgvp","target":"s:Scs12ContinuationV"},{"kind":"memberOf","source":"s:12_Concurrency24AsyncPrefixWhileSequenceV04makeB8IteratorAC0G0Vyx_GyF","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV0B8Iteratora","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci13AsyncIteratorQa","displayName":"AsyncSequence.AsyncIterator"}},{"kind":"memberOf","source":"s:ScG7Elementa","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:ScG17makeAsyncIteratorScG0C0Vyx_GyF","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:ScT11isCancelledSbvp","target":"s:ScT"},{"kind":"memberOf","source":"s:SYsSERzs5UInt8V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SYsSERzs5UInt8V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF","displayName":"RawRepresentable.encode(to:)"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV4nextq_SgyYaKF","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV","sourceOrigin":{"identifier":"s:ScI4next7ElementQzSgyYaKF","displayName":"AsyncIteratorProtocol.next()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency30AsyncThrowingDropWhileSequenceV","target":"s:12_Concurrency30AsyncThrowingDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency27AsyncThrowingFilterSequenceV","target":"s:12_Concurrency27AsyncThrowingFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV7Elementa","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci7ElementQa","displayName":"AsyncSequence.Element"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency28AsyncThrowingFlatMapSequenceV","target":"s:12_Concurrency28AsyncThrowingFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropFirstSequenceV","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncFilterSequenceV","target":"s:12_Concurrency19AsyncFilterSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency23AsyncCompactMapSequenceV","target":"s:12_Concurrency23AsyncCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency16AsyncMapSequenceV","target":"s:12_Concurrency16AsyncMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:12_Concurrency22AsyncDropFirstSequenceV04makeB8IteratorAC0G0Vyx_GyF","target":"s:12_Concurrency22AsyncDropFirstSequenceV","sourceOrigin":{"identifier":"s:Sci17makeAsyncIterator0bC0QzyF","displayName":"AsyncSequence.makeAsyncIterator()"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","target":"s:12_Concurrency32AsyncThrowingPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency22AsyncDropWhileSequenceV","target":"s:12_Concurrency22AsyncDropWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:ScG","target":"s:ScG","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV8IteratorV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency19AsyncPrefixSequenceV","target":"s:12_Concurrency19AsyncPrefixSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency20AsyncFlatMapSequenceV","target":"s:12_Concurrency20AsyncFlatMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:ScT12_Concurrencys5NeverORszACRs_rlE5yieldyyYaFZ","target":"s:ScT"},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:Scs","target":"s:Scs","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncPrefixWhileSequenceV","target":"s:12_Concurrency24AsyncPrefixWhileSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency31AsyncThrowingCompactMapSequenceV","target":"s:12_Concurrency31AsyncThrowingCompactMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"memberOf","source":"s:SLsE3zzloiySnyxGx_xtFZ::SYNTHESIZED::s:ScP","target":"s:ScP","sourceOrigin":{"identifier":"s:SLsE3zzloiySnyxGx_xtFZ","displayName":"Comparable...<(_:_:)"}},{"kind":"memberOf","source":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF::SYNTHESIZED::s:12_Concurrency24AsyncThrowingMapSequenceV","target":"s:12_Concurrency24AsyncThrowingMapSequenceV","sourceOrigin":{"identifier":"s:Sci12_ConcurrencyE3min2by7ElementQzSgSbAE_AEtYaKXE_tYaKF","displayName":"AsyncSequence.min(by:)"}},{"kind":"conformsTo","source":"s:12_Concurrency22AsyncDropWhileSequenceV8IteratorV","target":"s:ScI"},{"kind":"conformsTo","source":"s:12_Concurrency16AsyncMapSequenceV","target":"s:Sci","swiftConstraints":[{"kind":"conformance","lhs":"Base","rhs":"AsyncSequence","rhsPrecise":"s:Sci"}]}]}