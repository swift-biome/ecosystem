{"culture":"BSON","dependencies":[{"package":"swift-nio","modules":["NIO","NIOConcurrencyHelpers","NIOCore","NIOEmbedded","NIOPosix","_NIODataStructures"]}],"extensions":[],"partitions":[{"namespace":"BSON","communities":[{"community":"protocol","startIndex":0,"endIndex":2},{"community":"enum","startIndex":2,"endIndex":9},{"community":"struct","startIndex":9,"endIndex":32},{"community":"class","startIndex":32,"endIndex":33},{"community":"enum.case","startIndex":33,"endIndex":63},{"community":"init","startIndex":63,"endIndex":102},{"community":"subscript","startIndex":102,"endIndex":108},{"community":"type.property","startIndex":108,"endIndex":111},{"community":"property","startIndex":111,"endIndex":178},{"community":"type.method","startIndex":178,"endIndex":179},{"community":"method","startIndex":179,"endIndex":221},{"community":"type.op","startIndex":221,"endIndex":228},{"community":"typealias","startIndex":228,"endIndex":234}]},{"namespace":"Foundation","communities":[{"community":"init","startIndex":234,"endIndex":235},{"community":"method","startIndex":235,"endIndex":236}]},{"namespace":"Swift","communities":[{"community":"subscript","startIndex":236,"endIndex":238},{"community":"property","startIndex":238,"endIndex":240},{"community":"method","startIndex":240,"endIndex":249}]}],"identifiers":["s4BSON18PrimitiveEncodableP","s4BSON9PrimitiveP","s4BSON19BSONDecoderSettingsV21FloatDecodingStrategyO","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO","s4BSON21BSONEncoderStrategiesV24KeyedNilEncodingStrategyO","s4BSON21BSONEncoderStrategiesV31UnsignedIntegerEncodingStrategyO","s4BSON6BinaryV7SubTypeO","s4BSON10Decimal128V","s4BSON11BSONDecoderV","s4BSON12AnyPrimitiveV","s4BSON12DocumentPairV","s4BSON13DocumentIndexV","s4BSON13DocumentSliceV","s4BSON14JavaScriptCodeV","s4BSON15EitherPrimitiveV","s4BSON16DocumentIteratorV","s4BSON16ValidationResultV","s4BSON17BSONValueNotFoundV","s4BSON17RegularExpressionV","s4BSON19BSONDecoderSettingsV","s4BSON20DocumentPairIteratorV","s4BSON21BSONEncoderStrategiesV","s4BSON23JavaScriptCodeWithScopeV","s4BSON4NullV","s4BSON6BinaryV","s4BSON6MaxKeyV","s4BSON6MinKeyV","s4BSON8DocumentV","s4BSON8ObjectIdV","s4BSON9TimestampV","s4BSON11BSONEncoderC","s4BSON19BSONDecoderSettingsV21FloatDecodingStrategyO6customyAESfSgSSSg_AA9Primitive_pSgtKccAEmF","s4BSON19BSONDecoderSettingsV21FloatDecodingStrategyO6doubleyA2EmF","s4BSON19BSONDecoderSettingsV21FloatDecodingStrategyO6stringyA2EmF","s4BSON19BSONDecoderSettingsV21FloatDecodingStrategyO8adaptiveyA2EmF","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO6customyAESdSgSSSg_AA9Primitive_pSgtKccAEmF","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO6doubleyA2EmF","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO7textualyA2EmF","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO8adaptiveyA2EmF","s4BSON19BSONDecoderSettingsV22DoubleDecodingStrategyO9numericalyA2EmF","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO6customyAESSSgAG_AA9Primitive_pSgtKccAEmF","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO6stringyA2EmF","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO8adaptiveyA2EmF","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO8integersyA2EmF","s4BSON19BSONDecoderSettingsV22StringDecodingStrategyO9numericalyA2EmF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO03anyD0yAEy_xGAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO17roundingAnyNumberyAEy_xGAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO5int32yAEy_xGAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO5int64yAEy_xGAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO6customyAEy_xGxSgSSSg_AA9Primitive_pSgtKccAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO6stringyAEy_xGAGms010FixedWidthD0RzlF","s4BSON19BSONDecoderSettingsV23IntegerDecodingStrategyO8adaptiveyAEy_xGAGms010FixedWidthD0RzlF","s4BSON21BSONEncoderStrategiesV24KeyedNilEncodingStrategyO4nullyA2EmF","s4BSON21BSONEncoderStrategiesV24KeyedNilEncodingStrategyO7omittedyA2EmF","s4BSON21BSONEncoderStrategiesV31UnsignedIntegerEncodingStrategyO5int64yA2EmF","s4BSON21BSONEncoderStrategiesV31UnsignedIntegerEncodingStrategyO6stringyA2EmF","s4BSON6BinaryV7SubTypeO11userDefinedyAEs5UInt8VcAEmF","s4BSON6BinaryV7SubTypeO3md5yA2EmF","s4BSON6BinaryV7SubTypeO4uuidyA2EmF","s4BSON6BinaryV7SubTypeO7genericyA2EmF","s4BSON6BinaryV7SubTypeO8functionyA2EmF","s4BSON10Decimal128V4fromACs7Decoder_p_tKcfc","s4BSON11BSONDecoderV8settingsAcA0B8SettingsV_tcfc","s4BSON11BSONEncoderC10strategiesAcA0B10StrategiesV_tcfc","s4BSON12AnyPrimitiveV4fromACs7Decoder_p_tKcfc","s4BSON12AnyPrimitiveVyAcA0C0_pcfc","s4BSON14JavaScriptCodeV13stringLiteralACSS_tcfc","s4BSON14JavaScriptCodeV4fromACs7Decoder_p_tKcfc","s4BSON14JavaScriptCodeVyACSScfc","s4BSON15EitherPrimitiveVyACyxq_Gq_cfc","s4BSON15EitherPrimitiveVyACyxq_Gxcfc","s4BSON16DocumentIteratorV8documentAcA0B0V_tcfc","s4BSON17RegularExpressionV4fromACs7Decoder_p_tKcfc","s4BSON17RegularExpressionV7pattern7optionsACSS_SStcfc","s4BSON17RegularExpressionVyAC10Foundation09NSRegularC0Ccfc","s4BSON20DocumentPairIteratorV8documentAcA0B0V_tcfc","s4BSON23JavaScriptCodeWithScopeV4fromACs7Decoder_p_tKcfc","s4BSON23JavaScriptCodeWithScopeV_5scopeACSS_AA8DocumentVtcfc","s4BSON4NullV4fromACs7Decoder_p_tKcfc","s4BSON4NullVACycfc","s4BSON6BinaryV4fromACs7Decoder_p_tKcfc","s4BSON6BinaryV7subType6bufferA2C03SubD0O_7NIOCore10ByteBufferVtcfc","s4BSON6MaxKeyV4fromACs7Decoder_p_tKcfc","s4BSON6MaxKeyVACycfc","s4BSON6MinKeyV4fromACs7Decoder_p_tKcfc","s4BSON6MinKeyVACycfc","s4BSON8DocumentV12arrayLiteralAcA9Primitive_pd_tcfc","s4BSON8DocumentV17dictionaryLiteralACSS_AA9Primitive_ptd_tcfc","s4BSON8DocumentV4data7isArrayAC10Foundation4DataV_Sbtcfc","s4BSON8DocumentV4fromACs7Decoder_p_tKcfc","s4BSON8DocumentV5arrayACSayAA18PrimitiveEncodable_pG_tKcfc","s4BSON8DocumentV5bytes7isArrayACSays5UInt8VG_Sbtcfc","s4BSON8DocumentV6buffer7isArrayAC7NIOCore10ByteBufferV_Sbtcfc","s4BSON8DocumentV7isArrayACSb_tcfc","s4BSON8DocumentV8elements7isArrayACx_SbtcSTRzSS_AA9Primitive_pt7ElementRtzlufc","s4BSON8ObjectIdV4fromACs7Decoder_p_tKcfc","s4BSON8ObjectIdVACycfc","s4BSON8ObjectIdVyACSgSScfc","s4BSON9TimestampV4fromACs7Decoder_p_tKcfc","s4BSON9TimestampV9increment9timestampACs5Int32V_AGtcfc","s4BSON13DocumentSliceVyACSnyAA0B5IndexVGcip","s4BSON13DocumentSliceVySS_AA9Primitive_ptAA0B5IndexVcip","s4BSON8DocumentVyAA0B5SliceVSnyAA0B5IndexVGcip","s4BSON8DocumentVyAA9Primitive_pSgSScip","s4BSON8DocumentVyAA9Primitive_pSicip","s4BSON8DocumentVySS_AA9Primitive_ptAA0B5IndexVcip","s4BSON19BSONDecoderSettingsV6strictACvpZ","s4BSON19BSONDecoderSettingsV8adaptiveACvpZ","s4BSON21BSONEncoderStrategiesV7defaultACvpZ","s4BSON11BSONDecoderV8settingsAA0B8SettingsVvp","s4BSON11BSONDecoderV8userInfoSDys010CodingUserD3KeyVypGvp","s4BSON11BSONEncoderC10strategiesAA0B10StrategiesVvp","s4BSON11BSONEncoderC8userInfoSDys010CodingUserD3KeyVypGvp","s4BSON12AnyPrimitiveV9primitiveAA0C0_pvp","s4BSON12DocumentPairV3keySSvp","s4BSON12DocumentPairV5indexSivp","s4BSON12DocumentPairV5valueAA9Primitive_pvp","s4BSON13DocumentSliceV10startIndexAA0bE0Vvp","s4BSON13DocumentSliceV8endIndexAA0bE0Vvp","s4BSON14JavaScriptCodeV4codeSSvp","s4BSON15EitherPrimitiveV3lhsxSgvp","s4BSON15EitherPrimitiveV3rhsq_Sgvp","s4BSON15EitherPrimitiveV9primitiveAA0C0_pvp","s4BSON16ValidationResultV13errorPositionSiSgvp","s4BSON16ValidationResultV3keySSSgvp","s4BSON16ValidationResultV6reasonSSSgvp","s4BSON16ValidationResultV7isValidSbvp","s4BSON17BSONValueNotFoundV11descriptionSSvp","s4BSON17BSONValueNotFoundV4pathSaySSGvp","s4BSON17BSONValueNotFoundV4typeypXpvp","s4BSON17RegularExpressionV7optionsSSvp","s4BSON17RegularExpressionV7patternSSvp","s4BSON19BSONDecoderSettingsV15decodeNullAsNilSbvp","s4BSON19BSONDecoderSettingsV18filterDollarPrefixSbvp","s4BSON19BSONDecoderSettingsV19intDecodingStrategyAC07IntegereF0Oy_SiGvp","s4BSON19BSONDecoderSettingsV20int8DecodingStrategyAC07IntegereF0Oy_s4Int8VGvp","s4BSON19BSONDecoderSettingsV20uintDecodingStrategyAC07IntegereF0Oy_SuGvp","s4BSON19BSONDecoderSettingsV21floatDecodingStrategyAC05FloateF0Ovp","s4BSON19BSONDecoderSettingsV21int16DecodingStrategyAC07IntegereF0Oy_s5Int16VGvp","s4BSON19BSONDecoderSettingsV21int32DecodingStrategyAC07IntegereF0Oy_s5Int32VGvp","s4BSON19BSONDecoderSettingsV21int64DecodingStrategyAC07IntegereF0Oy_s5Int64VGvp","s4BSON19BSONDecoderSettingsV21uint8DecodingStrategyAC07IntegereF0Oy_s5UInt8VGvp","s4BSON19BSONDecoderSettingsV22doubleDecodingStrategyAC06DoubleeF0Ovp","s4BSON19BSONDecoderSettingsV22stringDecodingStrategyAC06StringeF0Ovp","s4BSON19BSONDecoderSettingsV22uint16DecodingStrategyAC07IntegereF0Oy_s6UInt16VGvp","s4BSON19BSONDecoderSettingsV22uint32DecodingStrategyAC07IntegereF0Oy_s6UInt32VGvp","s4BSON19BSONDecoderSettingsV22uint64DecodingStrategyAC07IntegereF0Oy_s6UInt64VGvp","s4BSON19BSONDecoderSettingsV23decodeDateFromTimestampSbvp","s4BSON19BSONDecoderSettingsV24decodeObjectIdFromStringSbvp","s4BSON20DocumentPairIteratorV12currentIndexSivp","s4BSON20DocumentPairIteratorV18currentBinaryIndexSivp","s4BSON20DocumentPairIteratorV5countSivp","s4BSON20DocumentPairIteratorV9isDrainedSbvp","s4BSON21BSONEncoderStrategiesV18filterDollarPrefixSbvp","s4BSON21BSONEncoderStrategiesV24keyedNilEncodingStrategyAC05KeyedefG0Ovp","s4BSON21BSONEncoderStrategiesV31unsignedIntegerEncodingStrategyAC08UnsignedefG0Ovp","s4BSON23JavaScriptCodeWithScopeV4codeSSvp","s4BSON23JavaScriptCodeWithScopeV5scopeAA8DocumentVvp","s4BSON6BinaryV4data10Foundation4DataVvp","s4BSON6BinaryV5countSivp","s4BSON6BinaryV7storage7NIOCore10ByteBufferVvp","s4BSON6BinaryV7subTypeAC03SubD0Ovp","s4BSON8DocumentV10startIndexAA0bD0Vvp","s4BSON8DocumentV16debugDescriptionSSvp","s4BSON8DocumentV4keysSaySSGvp","s4BSON8DocumentV5countSivp","s4BSON8DocumentV5pairsAA0B12PairIteratorVvp","s4BSON8DocumentV6valuesSayAA9Primitive_pGvp","s4BSON8DocumentV7isArraySbvp","s4BSON8DocumentV8endIndexAA0bD0Vvp","s4BSON8ObjectIdV11descriptionSSvp","s4BSON8ObjectIdV16debugDescriptionSSvp","s4BSON8ObjectIdV4date10Foundation4DateVvp","s4BSON8ObjectIdV9hexStringSSvp","s4BSON9TimestampV9increments5Int32Vvp","s4BSON9TimestampV9timestamps5Int32Vvp","s4BSON8ObjectIdV4make4fromACSS_tKFZ","s4BSON10Decimal128V6encode2toys7Encoder_p_tKF","s4BSON11BSONDecoderV6decode_13fromPrimitivexxm_AA0E0_ptKSeRzlF","s4BSON11BSONDecoderV6decode_4fromxxm_AA8DocumentVtKSeRzlF","s4BSON11BSONEncoderC15encodePrimitiveyAA0D0_pSgSE_pKF","s4BSON11BSONEncoderC6encodeyAA8DocumentVSE_pKF","s4BSON12AnyPrimitiveV06encodeC0AA0C0_pyKF","s4BSON12AnyPrimitiveV4hash4intoys6HasherVz_tF","s4BSON12AnyPrimitiveV6encode2toys7Encoder_p_tKF","s4BSON13DocumentSliceV5index5afterAA0B5IndexVAG_tF","s4BSON13DocumentSliceV5index6beforeAA0B5IndexVAG_tF","s4BSON15EitherPrimitiveV06encodeC0AA0C0_pyKF","s4BSON15EitherPrimitiveV6encode2toys7Encoder_p_tKF","s4BSON16DocumentIteratorV4nextSS_AA9Primitive_ptSgyF","s4BSON17RegularExpressionV6encode2toys7Encoder_p_tKF","s4BSON18PrimitiveEncodableP06encodeB0AA0B0_pyKF","s4BSON20DocumentPairIteratorV4nextAA0bC0VSgyF","s4BSON4NullV6encode2toys7Encoder_p_tKF","s4BSON6BinaryV4hash4intoys6HasherVz_tF","s4BSON6BinaryV6encode2toys7Encoder_p_tKF","s4BSON8DocumentV11appendValue_6forKeyyAA9Primitive_p_SStF","s4BSON8DocumentV11containsKeyySbSSF","s4BSON8DocumentV11removeValue6forKeyAA9Primitive_pSgSS_tF","s4BSON8DocumentV12makeIteratorAA0bD0VyF","s4BSON8DocumentV14makeByteBuffer7NIOCore0dE0VyF","s4BSON8DocumentV4hash4intoys6HasherVz_tF","s4BSON8DocumentV5index5afterAA0B5IndexVAG_tF","s4BSON8DocumentV5index6beforeAA0B5IndexVAG_tF","s4BSON8DocumentV6append10contentsOfyAC_tF","s4BSON8DocumentV6appendyyAA9Primitive_pF","s4BSON8DocumentV6appendyyxKAA18PrimitiveEncodableRzlF","s4BSON8DocumentV6encode2toys7Encoder_p_tKF","s4BSON8DocumentV6insert10contentsOf2atyAC_SitF","s4BSON8DocumentV6insert_2atyAA9Primitive_p_SitF","s4BSON8DocumentV6insert_2atyx_SitKAA18PrimitiveEncodableRzlF","s4BSON8DocumentV6insert_6forKey2atyAA9Primitive_p_SSSitF","s4BSON8DocumentV6remove2atySi_tF","s4BSON8DocumentV8makeData10Foundation0D0VyF","s4BSON8DocumentV8validateAA16ValidationResultVyF","s4BSON8ObjectIdV4hash4intoys6HasherVz_tF","s4BSON8ObjectIdV6encode2toys7Encoder_p_tKF","s4BSON9PrimitivePAAE06encodeB0AaB_pyKF","s4BSON9PrimitivePAAE6equalsySbAaB_pF","s4BSON12AnyPrimitiveV2eeoiySbAC_ACtFZ","s4BSON13DocumentIndexV1loiySbAC_ACtFZ","s4BSON6BinaryV2eeoiySbAC_ACtFZ","s4BSON8DocumentV2eeoiySbAC_ACtFZ","s4BSON8ObjectIdV1loiySbAC_ACtFZ","s4BSON8ObjectIdV2eeoiySbAC_ACtFZ","s4BSON9TimestampV2eeoiySbAC_ACtFZ","s4BSON13DocumentSliceV11SubSequencea","s4BSON13DocumentSliceV7Elementa","s4BSON19BSONDecoderSettingsV16DecodingStrategya","s4BSON8DocumentV11SubSequencea","s4BSON8DocumentV5Indexa","s4BSON8DocumentV8Iteratora","s10Foundation19NSRegularExpressionC4BSONEyAcD07RegularC0VKcfc","s10Foundation19NSRegularExpressionC4BSONE15encodePrimitiveAD0F0_pyKF","sSq4BSONAA9Primitive_pRszlEyAaB_pSgSScip","sSq4BSONAA9Primitive_pRszlEyAaB_pSicip","sSD4BSONSSRszAA9PrimitiveR_rlE9primitiveAaB_pvp","sSa4BSONAA9PrimitiveRzlE9primitiveAaB_pvp","sSD4BSONSSRszSER_rlE15encodePrimitiveAA0C0_pyKF","sSa4BSONSERzlE15encodePrimitiveAA0C0_pyKF","sSh4BSONSERzrlE15encodePrimitiveAA0C0_pyKF","sSq4BSONAA18PrimitiveEncodableRzlE06encodeB0AA0B0_pyKF","ss22KeyedDecodingContainerV4BSONE15decodeIfPresent_6forKeyAC9Primitive_pSgAcF_pm_xtKF","ss22KeyedDecodingContainerV4BSONE6decode_6forKeyAC9Primitive_pAcF_pm_xtKF","ss22KeyedEncodingContainerV4BSONE19encodeBSONPrimitive_6forKeyyAC9Primitive_pSg_xtKF","ss24UnkeyedEncodingContainerP4BSONE19encodeBSONPrimitiveyyAC9Primitive_pSgKF","ss28SingleValueEncodingContainerP4BSONE19encodeBSONPrimitiveyyAC9Primitive_pSgKF","s10Foundation12DataProtocolP10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF","s10Foundation12DataProtocolP9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF","s10Foundation12DataProtocolPAAE10firstRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF","s10Foundation12DataProtocolPAAE10firstRange2ofSny5IndexQzGSgqd___tAaBRd__lF","s10Foundation12DataProtocolPAAE9copyBytes2toSiSw_tF","s10Foundation12DataProtocolPAAE9lastRange2of2inSny5IndexQzGSgqd___qd_0_tAaBRd__SXRd_0_5BoundQyd_0_AHRSr0_lF","s10Foundation12DataProtocolPAAE9lastRange2ofSny5IndexQzGSgqd___tAaBRd__lF","s10Foundation19MutableDataProtocolP10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF","s10Foundation19MutableDataProtocolPAAE10resetBytes2inyqd___tSXRd__5BoundQyd__5IndexRtzlF","s10Foundation19NSRegularExpressionC","s10Foundation4DataV","s10Foundation4DateV","s4BSON26BSONPrimitiveRepresentableP9primitiveAA9Primitive_pvp","s7NIOCore10ByteBufferV","sSD","sSE","sSE6encode2toys7Encoder_p_tKF","sSH","sSH4hash4intoys6HasherVz_tF","sSK","sSK12_RegexParserE10mapOffsetsySny5IndexQzGSi5lower_Si5uppert_tF","sSK12_RegexParserE14flatmapOffsetsySny5IndexQzGSi5lower_Si5uppertSgF","sSK17_StringProcessingSL7ElementRpzrlE10firstRange2ofSny5IndexQzGSgqd___tSlRd__ABQyd__ACRSlF","sSK9formIndex6beforey0B0Qzz_tF","sSKs11SubSequenceQzRszrlE10removeLast7ElementQzyF","sSKs11SubSequenceQzRszrlE10removeLastyySiF","sSKs11SubSequenceQzRszrlE7popLast7ElementQzSgyF","sSKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF","sSKsE4last5where7ElementQzSgSbADKXE_tKF","sSKsE4last7ElementQzSgvp","sSKsE5index_8offsetBy5IndexQzAD_SitF","sSKsE6suffixy11SubSequenceQzSiF","sSKsE8distance4from2toSi5IndexQz_AEtF","sSKsE8dropLasty11SubSequenceQzSiF","sSKsE8reverseds18ReversedCollectionVyxGyF","sSKsE9formIndex6beforey0B0Qzz_tF","sSKsE9lastIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF","sSKsSQ7ElementRpzrlE9lastIndex2of0C0QzSgAB_tF","sSL","sSL1goiySbx_xtFZ","sSL1loiySbx_xtFZ","sSL2geoiySbx_xtFZ","sSL2leoiySbx_xtFZ","sSLsE1goiySbx_xtFZ","sSLsE2geoiySbx_xtFZ","sSLsE2leoiySbx_xtFZ","sSLsE3zzloiySnyxGx_xtFZ","sSLsE3zzlopys16PartialRangeUpToVyxGxFZ","sSLsE3zzzoPys16PartialRangeFromVyxGxFZ","sSLsE3zzzoiySNyxGx_xtFZ","sSLsE3zzzopys19PartialRangeThroughVyxGxFZ","sSM39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF","sSMsE39withContiguousMutableStorageIfAvailableyqd__Sgqd__Sry7ElementQzGzKXEKlF","sSMsE6swapAtyy5IndexQz_ACtF","sSMsE9partition2by5IndexQzSb7ElementQzKXE_tKF","sSMsEy11SubSequenceQzSny5IndexQzGcip","sSMsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip","sSMsEy11SubSequenceQzys15UnboundedRange_OXEcip","sSMsEys5SliceVyxGSny5IndexQzGcip","sSMsSKRzrlE7reverseyyF","sSMsSKRzrlE9partition2by5IndexSlQzSb7ElementSTQzKXE_tKF","sSMsSkRzSL7ElementSTRpzrlE4sortyyF","sSMsSkRzrlE4sort2byySb7ElementSTQz_ADtKXE_tKF","sSMsSkRzrlE7shuffle5usingyqd__z_tSGRd__lF","sSMsSkRzrlE7shuffleyyF","sSQ","sSQ2eeoiySbx_xtFZ","sSQsE2neoiySbx_xtFZ","sSS","sST","sST12_RegexParserE3allyS2b7ElementQzXEF","sST12_RegexParserE3anyyS2b7ElementQzXEF","sST12_RegexParserE4noneyS2b7ElementQzXEF","sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sST7ElementQa","sSTs8IteratorSTQzRszrlE04makeA0xyF","sSTsE10allSatisfyyS2b7ElementQzKXEKF","sSTsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE10enumerateds18EnumeratedSequenceVyxGyF","sSTsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF","sSTsE19underestimatedCountSivp","sSTsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF","sSTsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sSTsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSTsE3max2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE3min2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF","sSTsE4lazys12LazySequenceVyxGvp","sSTsE5first5where7ElementQzSgSbADKXE_tKF","sSTsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSays10ArraySliceVy7ElementQzGGSi_S2bAHKXEtKF","sSTsE6filterySay7ElementQzGSbACKXEKF","sSTsE6prefix5whileSay7ElementQzGSbADKXE_tKF","sSTsE6prefixys14PrefixSequenceVyxGSiF","sSTsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF","sSTsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF","sSTsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF","sSTsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF","sSTsE6suffixySay7ElementQzGSiF","sSTsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF","sSTsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE7forEachyyy7ElementQzKXEKF","sSTsE8contains5whereS2b7ElementQzKXE_tKF","sSTsE8dropLastySay7ElementQzGSiF","sSTsE8reversedSay7ElementQzGyF","sSTsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF","sSTsE8shuffledSay7ElementQzGyF","sSTsE9dropFirstys04DropB8SequenceVyxGSiF","sSTsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF","sSTsSL7ElementRpzrlE3maxABSgyF","sSTsSL7ElementRpzrlE3minABSgyF","sSTsSL7ElementRpzrlE6sortedSayABGyF","sSTsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE8containsySbABF","sSZsE8isSignedSbvpZ","sSZss17FixedWidthIntegerRzrlE10isMultiple2ofSbx_tF","sSZss17FixedWidthIntegerRzrlE3maxxvpZ","sSZss17FixedWidthIntegerRzrlE3minxvpZ","sSZss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc","sSZss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc","sSa","sSb","sSd","sSe","sSe4fromxs7Decoder_p_tKcfc","sSf","sSh","sSi","sSk","sSk5index5after5IndexQzAD_tF","sSk5index6before5IndexQzAD_tF","sSksE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF","sSky11SubSequenceQzSny5IndexQzGcip","sSl","sSl10startIndex0B0Qzvp","sSl11SubSequenceQa","sSl12_RegexParserE15convertByOffset_2in5IndexQyd__ADQz_qd__tSlRd__lF","sSl12_RegexParserE15convertByOffset_2inSny5IndexQyd__GSnyADQzG_qd__tSlRd__lF","sSl12_RegexParserE5index8atOffset5IndexQzSi_tF","sSl12_RegexParserE5split6around11SubSequenceQz6prefix_A2E6suffixtSny5IndexQzG_tF","sSl12_RegexParserE6offset2ofSi5IndexQz_tF","sSl12_RegexParserE6offset7ofIndexSi0E0Qz_tF","sSl12_RegexParserE7offsets2ofSnySiGSny5IndexQzG_tF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropPrefixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropSuffixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSl12makeIterator0B0QzyF","sSl17_StringProcessing11SubSequenceQzRszSQ7ElementRpzrlE10trimPrefixyyqd__STRd__ADQyd__AERSlF","sSl17_StringProcessing11SubSequenceQzRszrlE10trimPrefix5whileySb7ElementQzKXE_tKF","sSl17_StringProcessingE14trimmingPrefix5while11SubSequenceQzSb7ElementQzKXE_tKF","sSl17_StringProcessingSQ7ElementRpzrlE10firstRange2ofSny5IndexQzGSgqd___tSlRd__ABQyd__ACRSlF","sSl17_StringProcessingSQ7ElementRpzrlE14trimmingPrefixy11SubSequenceQzqd__STRd__ABQyd__ACRSlF","sSl17_StringProcessingSQ7ElementRpzrlE6ranges2ofSaySny5IndexQzGGqd___tSlRd__ABQyd__ACRSlF","sSl5IndexQa","sSl5countSivp","sSl8IteratorQa","sSl8endIndex0B0Qzvp","sSls11SubSequenceQzRszrlE11removeFirst7ElementQzyF","sSls11SubSequenceQzRszrlE11removeFirstyySiF","sSls11SubSequenceQzRszrlE8popFirst7ElementQzSgyF","sSlsE10firstIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSlsE13randomElement0B0QzSgyF","sSlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF","sSlsE19underestimatedCountSivp","sSlsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE5countSivp","sSlsE5first7ElementQzSgvp","sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF","sSlsE6prefix4upTo11SubSequenceQz5IndexQz_tF","sSlsE6prefix5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE6prefix7through11SubSequenceQz5IndexQz_tF","sSlsE6prefixy11SubSequenceQzSiF","sSlsE6suffix4from11SubSequenceQz5IndexQz_tF","sSlsE7isEmptySbvp","sSlsE9dropFirsty11SubSequenceQzSiF","sSlsE9formIndex5aftery0B0Qzz_tF","sSlsE9formIndex_8offsetBy07limitedD0Sb0B0Qzz_SiAEtF","sSlsE9formIndex_8offsetByy0B0Qzz_SitF","sSlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip","sSlsEy11SubSequenceQzys15UnboundedRange_OXEcip","sSlsSIyxG7IndicesRtzrlE7indicesAAvp","sSlsSQ7ElementRpzrlE10firstIndex2of0C0QzSgAB_tF","sSlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF","sSlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF","sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF","sSly7ElementQz5IndexQzcip","sSm15replaceSubrange_4withySny5IndexQzG_qd__ntSlRd__7ElementQyd__AFRtzlF","sSm17_StringProcessingE10trimPrefix5whileySb7ElementQzKXE_tKF","sSm17_StringProcessingSQ7ElementRpzrlE10trimPrefixyyqd__STRd__ABQyd__ACRSlF","sSm17_StringProcessingSQ7ElementRpzrlE7replace_4with15maxReplacementsyqd___qd_0_SitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AGRSr0_lF","sSm17_StringProcessingSQ7ElementRpzrlE9replacing_4with15maxReplacementsxqd___qd_0_SitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AGRSr0_lF","sSm17_StringProcessingSQ7ElementRpzrlE9replacing_4with8subrange15maxReplacementsxqd___qd_0_Sny5IndexQzGSitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AKRSr0_lF","sSms11SubSequenceQzRszrlE11removeFirst7ElementQzyF","sSms11SubSequenceQzRszrlE11removeFirstyySiF","sSmsE11removeFirst7ElementQzyF","sSmsE11removeFirstyySiF","sSmsE14removeSubrangeyySny5IndexQzGF","sSmsE14removeSubrangeyyqd__SXRd__5BoundQyd__5IndexRtzlF","sSmsE15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AFRtzlF","sSmsE15replaceSubrange_4withyqd_0__qd__ntSlRd__SXRd_0_7ElementQyd__ACRtz5BoundQyd_0_5IndexRtzr0_lF","sSmsE15reserveCapacityyySiF","sSmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ","sSmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ","sSmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ","sSmsE2peoiyyxz_qd__tSTRd__7ElementQyd__ABRtzlFZ","sSmsE6append10contentsOfyqd__n_tSTRd__7ElementQyd__ACRtzlF","sSmsE6appendyy7ElementQznF","sSmsE6filteryxSb7ElementQzKXEKF","sSmsE6insert10contentsOf2atyqd__n_5IndexQztSlRd__7ElementQyd__AFRtzlF","sSmsE6insert_2aty7ElementQzn_5IndexQztF","sSmsE6remove2at7ElementQz5IndexQz_tF","sSmsE8applyingyxSgs20CollectionDifferenceVy7ElementQzGF","sSmsE9removeAll15keepingCapacityySb_tF","sSmsE9removeAll5whereySb7ElementQzKXE_tKF","sSmsE9repeating5countx7ElementQz_Sitcfc","sSmsEyxqd__cSTRd__7ElementQyd__AARtzlufc","sSmsSKRz11SubSequenceSlQzRszrlE10removeLast7ElementSTQzyF","sSmsSKRz11SubSequenceSlQzRszrlE10removeLastyySiF","sSmsSKRz11SubSequenceSlQzRszrlE7popLast7ElementSTQzSgyF","sSmsSKRzrlE10removeLast7ElementSTQzyF","sSmsSKRzrlE10removeLastyySiF","sSmsSKRzrlE7popLast7ElementSTQzSgyF","sSmsSMRzrlE9removeAll5whereySb7ElementSTQzKXE_tKF","sSn","sSq","sSt","sSt4next7ElementQzSgyF","sSu","sSxsE1loiySbx_xtFZ","sSxsE2eeoiySbx_xtFZ","sSz10isMultiple2ofSbx_tF","sSz12_RegexParserE9assertingxqd___tcSzRd__lufc","sSz3ggeoiyyxz_qd__tSzRd__lFZ","sSz3lleoiyyxz_qd__tSzRd__lFZ","sSzsE11descriptionSSvp","sSzsE1aoiyxx_xtFZ","sSzsE1goiySbx_qd__tSzRd__lFZ","sSzsE1goiySbx_xtFZ","sSzsE1loiySbx_qd__tSzRd__lFZ","sSzsE1ooiyxx_xtFZ","sSzsE1xoiyxx_xtFZ","sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF","sSzsE2eeoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_xtFZ","sSzsE2ggoiyxx_qd__tSzRd__lFZ","sSzsE2leoiySbx_qd__tSzRd__lFZ","sSzsE2leoiySbx_xtFZ","sSzsE2lloiyxx_qd__tSzRd__lFZ","sSzsE2neoiySbx_qd__tSzRd__lFZ","sSzsE2neoiySbx_xtFZ","sSzsE8advanced2byxSi_tF","sSzsE8distance2toSix_tF","sSzsExycfc","ss13SignedNumericPsE1sopyxxFZ","ss13SignedNumericPsE6negateyyF","ss17CodingUserInfoKeyV","ss17FixedWidthIntegerP","ss17FixedWidthIntegerPsE03bitB0Sivp","ss17FixedWidthIntegerPsE12littleEndianxvp","ss17FixedWidthIntegerPsE12littleEndianxx_tcfc","ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE1topyxxFZ","ss17FixedWidthIntegerPsE2amoiyxx_xtFZ","ss17FixedWidthIntegerPsE2apoiyxx_xtFZ","ss17FixedWidthIntegerPsE2asoiyxx_xtFZ","ss17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_xtFZ","ss17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3alloiyxx_xtFZ","ss17FixedWidthIntegerPsE3ameoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3apeoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3aseoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2inxSNyxG_tFZ","ss17FixedWidthIntegerPsE6random2inxSnyxG_tFZ","ss17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc","ss17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE9bigEndianxvp","ss17FixedWidthIntegerPsE9bigEndianxx_tcfc","ss17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc","ss17FixedWidthIntegerPsEyxSgSScfc","ss17FixedWidthIntegerPsEyxqd__cSBRd__lufc","ss18AdditiveArithmeticP2peoiyyxz_xtFZ","ss18AdditiveArithmeticP2seoiyyxz_xtFZ","ss18AdditiveArithmeticPsE1popyxxFZ","ss18AdditiveArithmeticPsE2peoiyyxz_xtFZ","ss18AdditiveArithmeticPsE2seoiyyxz_xtFZ","ss18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ","ss22KeyedDecodingContainerV","ss22KeyedEncodingContainerV","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss24UnkeyedEncodingContainerP","ss25ExpressibleByArrayLiteralP","ss25ExpressibleByArrayLiteralP05arrayD0x0cD7ElementQzd_tcfc","ss25LosslessStringConvertibleP","ss25LosslessStringConvertiblePyxSgSScfc","ss26ExpressibleByStringLiteralP","ss26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc","ss26ExpressibleByStringLiteralPs0cD4TypeQz023ExtendedGraphemeClusterdE0RtzrlE08extendedghD0xAF_tcfc","ss27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc","ss27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc","ss28CustomDebugStringConvertibleP","ss28CustomDebugStringConvertibleP16debugDescriptionSSvp","ss28SingleValueEncodingContainerP","ss30ExpressibleByDictionaryLiteralP","ss30ExpressibleByDictionaryLiteralP010dictionaryD0x3KeyQz_5ValueQztd_tcfc","ss33ExpressibleByUnicodeScalarLiteralP","ss33ExpressibleByUnicodeScalarLiteralP07unicodedE0x0cdE4TypeQz_tcfc","ss43ExpressibleByExtendedGraphemeClusterLiteralP","ss43ExpressibleByExtendedGraphemeClusterLiteralP08extendeddeF0x0cdeF4TypeQz_tcfc","ss43ExpressibleByExtendedGraphemeClusterLiteralPs013UnicodeScalarF4TypeQz0cdefI0RtzrlE07unicodehF0xAF_tcfc","ss4Int8V","ss5ErrorP","ss5ErrorP10FoundationE20localizedDescriptionSSvp","ss5Int16V","ss5Int32V","ss5Int64V","ss5UInt8V","ss6HasherV","ss6UInt16V","ss6UInt32V","ss6UInt64V","ss7DecoderP","ss7EncoderP","ss8SendableP","ss9CodingKeyP"],"vertices":[{"p":["PrimitiveEncodable"],"f":[["protocol",12],[" ",17],["PrimitiveEncodable",7]],"s":[["protocol",12],[" ",17],["PrimitiveEncodable",7]]},{"p":["Primitive"],"f":[["protocol",12],[" ",17],["Primitive",7],[" : ",17],["PrimitiveEncodable",18,0],[", ",17],["Decodable",18,373],[", ",17],["Encodable",18,264],[", ",17],["Sendable",18,584]],"s":[["protocol",12],[" ",17],["Primitive",7]]},{"p":["BSONDecoderSettings","FloatDecodingStrategy"],"f":[["enum",12],[" ",17],["FloatDecodingStrategy",7]],"s":[["enum",12],[" ",17],["FloatDecodingStrategy",7]],"d":"A strategy used to decode float values\nFloats are not a native BSON type\n\nWARNING: This API may have cases added to it, do *not* manually switch over them"},{"p":["BSONDecoderSettings","DoubleDecodingStrategy"],"f":[["enum",12],[" ",17],["DoubleDecodingStrategy",7]],"s":[["enum",12],[" ",17],["DoubleDecodingStrategy",7]],"d":"A strategy used to decode double values\nAlthough Doubles are a native BSON type, lossy conversion may be favourable in certain circumstances\n\nWARNING: This API may have cases added to it, do *not* manually switch over them"},{"p":["BSONDecoderSettings","StringDecodingStrategy"],"f":[["enum",12],[" ",17],["StringDecodingStrategy",7]],"s":[["enum",12],[" ",17],["StringDecodingStrategy",7]],"d":"A strategy used to influence decoding Strings\n\nWARNING: This API may have cases added to it, do *not* manually switch over them"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy"],"f":[["enum",12],[" ",17],["IntegerDecodingStrategy",7],["<",17],["I",0],["> ",17],["where",12],[" ",17],["I",18],[" : ",17],["FixedWidthInteger",18,507]],"s":[["enum",12],[" ",17],["IntegerDecodingStrategy",7]],"c":[["I",1,"FixedWidthInteger",507]],"g":[["I",0,0]],"d":"A strategy used to decode float values\nFloats are not a native BSON type\n\nWARNING: This API may have cases added to it, do *not* manually switch over them"},{"p":["BSONEncoderStrategies","KeyedNilEncodingStrategy"],"f":[["enum",12],[" ",17],["KeyedNilEncodingStrategy",7]],"s":[["enum",12],[" ",17],["KeyedNilEncodingStrategy",7]],"d":"Defines how optionals that are `nil` are encoded in keyed containers\n\nNote that for unkeyed containers, like arrays, `nil` is always encoded as `null`"},{"p":["BSONEncoderStrategies","UnsignedIntegerEncodingStrategy"],"f":[["enum",12],[" ",17],["UnsignedIntegerEncodingStrategy",7]],"s":[["enum",12],[" ",17],["UnsignedIntegerEncodingStrategy",7]],"d":"Defines how unsigned integers are encoded"},{"p":["Binary","SubType"],"f":[["enum",12],[" ",17],["SubType",7]],"s":[["enum",12],[" ",17],["SubType",7]]},{"p":["Decimal128"],"f":[["struct",12],[" ",17],["Decimal128",7]],"s":[["struct",12],[" ",17],["Decimal128",7]],"d":"A BSON Decimal128 value\n\nOpenKitten BSON currently does not support the handling of Decimal128 values. The type is a stub and provides no API. It serves as a point for future implementation."},{"p":["BSONDecoder"],"f":[["struct",12],[" ",17],["BSONDecoder",7]],"s":[["struct",12],[" ",17],["BSONDecoder",7]],"d":"A helper that is able to decode BSON data types into a `Decodable` type"},{"p":["AnyPrimitive"],"f":[["struct",12],[" ",17],["AnyPrimitive",7]],"s":[["struct",12],[" ",17],["AnyPrimitive",7]]},{"p":["DocumentPair"],"f":[["struct",12],[" ",17],["DocumentPair",7]],"s":[["struct",12],[" ",17],["DocumentPair",7]],"d":"A key-value pair from a Document\n\nContains all metadata for a given Pair"},{"p":["DocumentIndex"],"f":[["struct",12],[" ",17],["DocumentIndex",7]],"s":[["struct",12],[" ",17],["DocumentIndex",7]]},{"p":["DocumentSlice"],"f":[["struct",12],[" ",17],["DocumentSlice",7]],"s":[["struct",12],[" ",17],["DocumentSlice",7]]},{"p":["JavaScriptCode"],"f":[["struct",12],[" ",17],["JavaScriptCode",7]],"s":[["struct",12],[" ",17],["JavaScriptCode",7]]},{"p":["EitherPrimitive"],"f":[["struct",12],[" ",17],["EitherPrimitive",7],["<",17],["L",0],[", ",17],["R",0],["> ",17],["where",12],[" ",17],["L",18],[" : ",17],["Primitive",18,1],[", ",17],["R",18],[" : ",17],["Primitive",18,1]],"s":[["struct",12],[" ",17],["EitherPrimitive",7]],"c":[["L",1,"Primitive",1],["R",1,"Primitive",1]],"g":[["L",0,0],["R",1,0]]},{"p":["DocumentIterator"],"f":[["struct",12],[" ",17],["DocumentIterator",7]],"s":[["struct",12],[" ",17],["DocumentIterator",7]]},{"p":["ValidationResult"],"f":[["struct",12],[" ",17],["ValidationResult",7]],"s":[["struct",12],[" ",17],["ValidationResult",7]]},{"p":["BSONValueNotFound"],"f":[["struct",12],[" ",17],["BSONValueNotFound",7]],"s":[["struct",12],[" ",17],["BSONValueNotFound",7]]},{"p":["RegularExpression"],"f":[["struct",12],[" ",17],["RegularExpression",7]],"s":[["struct",12],[" ",17],["RegularExpression",7]],"d":"The `RegularExpression` struct represents a regular expression as part of a BSON `Document`.\n\nAn extension to `NSRegularExpression` is provided for converting between `Foundation.NSRegularExpression` and `BSON.RegularExpression`."},{"p":["BSONDecoderSettings"],"f":[["struct",12],[" ",17],["BSONDecoderSettings",7]],"s":[["struct",12],[" ",17],["BSONDecoderSettings",7]],"d":"A configuration structs that contains all strategies for (lossy) decoding values"},{"p":["DocumentPairIterator"],"f":[["struct",12],[" ",17],["DocumentPairIterator",7]],"s":[["struct",12],[" ",17],["DocumentPairIterator",7]]},{"p":["BSONEncoderStrategies"],"f":[["struct",12],[" ",17],["BSONEncoderStrategies",7]],"s":[["struct",12],[" ",17],["BSONEncoderStrategies",7]],"d":"A configuration structs that contains all strategies for encoding BSON values"},{"p":["JavaScriptCodeWithScope"],"f":[["struct",12],[" ",17],["JavaScriptCodeWithScope",7]],"s":[["struct",12],[" ",17],["JavaScriptCodeWithScope",7]]},{"p":["Null"],"f":[["struct",12],[" ",17],["Null",7]],"s":[["struct",12],[" ",17],["Null",7]],"d":"The BSON Null type"},{"p":["Binary"],"f":[["struct",12],[" ",17],["Binary",7]],"s":[["struct",12],[" ",17],["Binary",7]]},{"p":["MaxKey"],"f":[["struct",12],[" ",17],["MaxKey",7]],"s":[["struct",12],[" ",17],["MaxKey",7]]},{"p":["MinKey"],"f":[["struct",12],[" ",17],["MinKey",7]],"s":[["struct",12],[" ",17],["MinKey",7]]},{"p":["Document"],"f":[["struct",12],[" ",17],["Document",7]],"s":[["struct",12],[" ",17],["Document",7]]},{"p":["ObjectId"],"f":[["struct",12],[" ",17],["ObjectId",7]],"s":[["struct",12],[" ",17],["ObjectId",7]]},{"p":["Timestamp"],"f":[["struct",12],[" ",17],["Timestamp",7]],"s":[["struct",12],[" ",17],["Timestamp",7]],"d":"Special internal type used by MongoDB replication and sharding. First 4 bytes are an increment, second 4 are a timestamp."},{"p":["BSONEncoder"],"f":[["final",12],[" ",17],["class",12],[" ",17],["BSONEncoder",7]],"s":[["class",12],[" ",17],["BSONEncoder",7]],"d":"An object that encodes instances of `Encodable` types as BSON Documents."},{"p":["BSONDecoderSettings","FloatDecodingStrategy","custom(_:)"],"f":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18,21],[".",17],["DecodingStrategy",18,230],["<",17],["Float",18,375],[">)",17]],"s":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18],[".",17],["DecodingStrategy",18],["<",17],["Float",18],[">)",17]]},{"p":["BSONDecoderSettings","FloatDecodingStrategy","double"],"f":[["case",12],[" ",17],["double",7]],"s":[["case",12],[" ",17],["double",7]]},{"p":["BSONDecoderSettings","FloatDecodingStrategy","string"],"f":[["case",12],[" ",17],["string",7]],"s":[["case",12],[" ",17],["string",7]]},{"p":["BSONDecoderSettings","FloatDecodingStrategy","adaptive"],"f":[["case",12],[" ",17],["adaptive",7]],"s":[["case",12],[" ",17],["adaptive",7]]},{"p":["BSONDecoderSettings","DoubleDecodingStrategy","custom(_:)"],"f":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18,21],[".",17],["DecodingStrategy",18,230],["<",17],["Double",18,372],[">)",17]],"s":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18],[".",17],["DecodingStrategy",18],["<",17],["Double",18],[">)",17]],"d":"Used for specifying a custom decoding strategy\n\nThis may be used for applying fallback values or other custom behaviour"},{"p":["BSONDecoderSettings","DoubleDecodingStrategy","double"],"f":[["case",12],[" ",17],["double",7]],"s":[["case",12],[" ",17],["double",7]],"d":"Decodes only the correct type. No lossy decoding."},{"p":["BSONDecoderSettings","DoubleDecodingStrategy","textual"],"f":[["case",12],[" ",17],["textual",7]],"s":[["case",12],[" ",17],["textual",7]],"d":"Allows lossy decoding from `String` as well as `Double`\n\nIf the String is formatted as a Double as permitted by the currently used Swift standard library"},{"p":["BSONDecoderSettings","DoubleDecodingStrategy","adaptive"],"f":[["case",12],[" ",17],["adaptive",7]],"s":[["case",12],[" ",17],["adaptive",7]],"d":"Allows both lossy conversions from both numerical and strings in addition to the regular `Double`."},{"p":["BSONDecoderSettings","DoubleDecodingStrategy","numerical"],"f":[["case",12],[" ",17],["numerical",7]],"s":[["case",12],[" ",17],["numerical",7]],"d":"Decodes from any numerical type, meaning `Int32` and `Int64` will be converted\n\nSome data loss may occur for Int64"},{"p":["BSONDecoderSettings","StringDecodingStrategy","custom(_:)"],"f":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18,21],[".",17],["DecodingStrategy",18,230],["<",17],["String",18,318],[">)",17]],"s":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18],[".",17],["DecodingStrategy",18],["<",17],["String",18],[">)",17]],"d":"Used for specifying a custom decoding strategy\n\nThis may be used for applying fallback values or other custom behaviour"},{"p":["BSONDecoderSettings","StringDecodingStrategy","string"],"f":[["case",12],[" ",17],["string",7]],"s":[["case",12],[" ",17],["string",7]],"d":"Decode only strings themselves"},{"p":["BSONDecoderSettings","StringDecodingStrategy","adaptive"],"f":[["case",12],[" ",17],["adaptive",7]],"s":[["case",12],[" ",17],["adaptive",7]],"d":"Try to decode from any type\n\n- ObjectId.hexString\n- Int32.desciption\n- Int64.description\n- Bool ? \"true\" : \"false\""},{"p":["BSONDecoderSettings","StringDecodingStrategy","integers"],"f":[["case",12],[" ",17],["integers",7]],"s":[["case",12],[" ",17],["integers",7]],"d":"Decode strings from integers' textual representations"},{"p":["BSONDecoderSettings","StringDecodingStrategy","numerical"],"f":[["case",12],[" ",17],["numerical",7]],"s":[["case",12],[" ",17],["numerical",7]],"d":"Decode strings from any numerical's textual representations"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","anyInteger"],"f":[["case",12],[" ",17],["anyInteger",7]],"s":[["case",12],[" ",17],["anyInteger",7]],"d":"Decodes this integer from either BSON Int32 or Int64"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","roundingAnyNumber"],"f":[["case",12],[" ",17],["roundingAnyNumber",7]],"s":[["case",12],[" ",17],["roundingAnyNumber",7]],"d":"Decodes this integer from any number (Int32, Int64 or Double), rouding Doubles"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","int32"],"f":[["case",12],[" ",17],["int32",7]],"s":[["case",12],[" ",17],["int32",7]],"d":"Decodes this integer type only from BSON Int32"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","int64"],"f":[["case",12],[" ",17],["int64",7]],"s":[["case",12],[" ",17],["int64",7]],"d":"Decodes this integer type only from BSON Int64"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","custom(_:)"],"f":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18,21],[".",17],["DecodingStrategy",18,230],["<",17],["I",18],[">)",17]],"s":[["case",12],[" ",17],["custom",7],["(",17],["BSONDecoderSettings",18],[".",17],["DecodingStrategy",18],["<",17],["I",18],[">)",17]],"d":"Applies a custom decoding strategy"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","string"],"f":[["case",12],[" ",17],["string",7]],"s":[["case",12],[" ",17],["string",7]],"d":"Decodes this integer type only from Strings"},{"p":["BSONDecoderSettings","IntegerDecodingStrategy","adaptive"],"f":[["case",12],[" ",17],["adaptive",7]],"s":[["case",12],[" ",17],["adaptive",7]],"d":"Decodes this integer from either a String or a number (rounding Doubles)"},{"p":["BSONEncoderStrategies","KeyedNilEncodingStrategy","null"],"f":[["case",12],[" ",17],["null",7]],"s":[["case",12],[" ",17],["null",7]],"d":"A value of `nil` is encoded as BSON `Null`"},{"p":["BSONEncoderStrategies","KeyedNilEncodingStrategy","omitted"],"f":[["case",12],[" ",17],["omitted",7]],"s":[["case",12],[" ",17],["omitted",7]],"d":"A value of `nil` is not encoded at all"},{"p":["BSONEncoderStrategies","UnsignedIntegerEncodingStrategy","int64"],"f":[["case",12],[" ",17],["int64",7]],"s":[["case",12],[" ",17],["int64",7]],"d":"Unsigned integers are encoded as Int64. If the value is too large to fit in an int64, an error will be thrown."},{"p":["BSONEncoderStrategies","UnsignedIntegerEncodingStrategy","string"],"f":[["case",12],[" ",17],["string",7]],"s":[["case",12],[" ",17],["string",7]],"d":"Unsinged integers are encoded as strings"},{"p":["Binary","SubType","userDefined(_:)"],"f":[["case",12],[" ",17],["userDefined",7],["(",17],["UInt8",18,577],[")",17]],"s":[["case",12],[" ",17],["userDefined",7],["(",17],["UInt8",18],[")",17]]},{"p":["Binary","SubType","md5"],"f":[["case",12],[" ",17],["md5",7]],"s":[["case",12],[" ",17],["md5",7]]},{"p":["Binary","SubType","uuid"],"f":[["case",12],[" ",17],["uuid",7]],"s":[["case",12],[" ",17],["uuid",7]]},{"p":["Binary","SubType","generic"],"f":[["case",12],[" ",17],["generic",7]],"s":[["case",12],[" ",17],["generic",7]]},{"p":["Binary","SubType","function"],"f":[["case",12],[" ",17],["function",7]],"s":[["case",12],[" ",17],["function",7]]},{"p":["Decimal128","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["BSONDecoder","init(settings:)"],"f":[["init",10],["(",17],["settings",1],[": ",17],["BSONDecoderSettings",18,21],[" = .adaptive)",17]],"s":[["init",10],["(",17],["settings",1],[": ",17],["BSONDecoderSettings",18],[")",17]],"d":"Creates a new decoder using fresh settings"},{"p":["BSONEncoder","init(strategies:)"],"f":[["init",10],["(",17],["strategies",1],[": ",17],["BSONEncoderStrategies",18,23],[" = .default)",17]],"s":[["init",10],["(",17],["strategies",1],[": ",17],["BSONEncoderStrategies",18],[")",17]],"d":"Creates a new, reusable encoder with the given strategies"},{"p":["AnyPrimitive","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["AnyPrimitive","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["primitive",2],[": ",17],["Primitive",18,1],[")",17]],"s":[["init",10],["(",17],["Primitive",18],[")",17]]},{"p":["JavaScriptCode","init(stringLiteral:)"],"f":[["init",10],["(",17],["stringLiteral",1],[" ",17],["value",2],[": ",17],["String",18,318],[")",17]],"s":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18],[")",17]]},{"p":["JavaScriptCode","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["JavaScriptCode","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["code",2],[": ",17],["String",18,318],[")",17]],"s":[["init",10],["(",17],["String",18],[")",17]]},{"p":["EitherPrimitive","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["value",2],[": ",17],["R",18],[")",17]],"s":[["init",10],["(",17],["R",18],[")",17]],"c":[["L",1,"Primitive",1],["R",1,"Primitive",1]],"g":[["L",0,0],["R",1,0]]},{"p":["EitherPrimitive","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["value",2],[": ",17],["L",18],[")",17]],"s":[["init",10],["(",17],["L",18],[")",17]],"c":[["L",1,"Primitive",1],["R",1,"Primitive",1]],"g":[["L",0,0],["R",1,0]]},{"p":["DocumentIterator","init(document:)"],"f":[["init",10],["(",17],["document",1],[": ",17],["Document",18,29],[")",17]],"s":[["init",10],["(",17],["document",1],[": ",17],["Document",18],[")",17]],"d":"Creates an iterator for a given Document"},{"p":["RegularExpression","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["RegularExpression","init(pattern:options:)"],"f":[["init",10],["(",17],["pattern",1],[": ",17],["String",18,318],[", ",17],["options",1],[": ",17],["String",18,318],[")",17]],"s":[["init",10],["(",17],["pattern",1],[": ",17],["String",18],[", ",17],["options",1],[": ",17],["String",18],[")",17]],"d":"Returns an initialized BSON RegularExpression instance with the specified regular expression pattern and options."},{"p":["RegularExpression","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["regex",2],[": ",17],["NSRegularExpression",18,258],[")",17]],"s":[["init",10],["(",17],["NSRegularExpression",18],[")",17]],"d":"Initializes the `RegularExpression` using the pattern and options from the given NSRegularExpression.\n\nThe following mapping is used for regular expression options (Foundation -> BSON):\n\n- caseInsensitive -> i\n- anchorsMatchLines -> m\n- dotMatchesLineSeparators -> s\n\nOther options are discarded."},{"p":["DocumentPairIterator","init(document:)"],"f":[["init",10],["(",17],["document",1],[": ",17],["Document",18,29],[")",17]],"s":[["init",10],["(",17],["document",1],[": ",17],["Document",18],[")",17]],"d":"Creates an iterator for a given Document"},{"p":["JavaScriptCodeWithScope","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["JavaScriptCodeWithScope","init(_:scope:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["code",2],[": ",17],["String",18,318],[", ",17],["scope",1],[": ",17],["Document",18,29],[")",17]],"s":[["init",10],["(",17],["String",18],[", ",17],["scope",1],[": ",17],["Document",18],[")",17]]},{"p":["Null","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Null","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"d":"Creates a new `Null`"},{"p":["Binary","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Binary","init(subType:buffer:)"],"f":[["init",10],["(",17],["subType",1],[": ",17],["Binary",18,26],[".",17],["SubType",18,8],[" = .generic, ",17],["buffer",1],[": ",17],["ByteBuffer",18,262],[")",17]],"s":[["init",10],["(",17],["subType",1],[": ",17],["Binary",18],[".",17],["SubType",18],[", ",17],["buffer",1],[": ",17],["ByteBuffer",18],[")",17]],"d":"Initializes a new Binary from the given ByteBuffer\n\n- parameter buffer: The ByteBuffer to use as storage. The buffer will be sliced."},{"p":["MaxKey","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["MaxKey","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["MinKey","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["MinKey","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["Document","init(arrayLiteral:)"],"f":[["init",10],["(",17],["arrayLiteral",1],[" ",17],["elements",2],[": ",17],["Primitive",18,1],["...)",17]],"s":[["init",10],["(",17],["arrayLiteral",1],[": ",17],["Primitive",18],["...)",17]]},{"p":["Document","init(dictionaryLiteral:)"],"f":[["init",10],["(",17],["dictionaryLiteral",1],[" ",17],["elements",2],[": (",17],["String",18,318],[", ",17],["Primitive",18,1],[")...)",17]],"s":[["init",10],["(",17],["dictionaryLiteral",1],[": (",17],["String",18],[", ",17],["Primitive",18],[")...)",17]],"d":"Creates a new Document from a Dictionary literal"},{"p":["Document","init(data:isArray:)"],"f":[["init",10],["(",17],["data",1],[": ",17],["Data",18,259],[", ",17],["isArray",1],[": ",17],["Bool",18,371],[" = false)",17]],"s":[["init",10],["(",17],["data",1],[": ",17],["Data",18],[", ",17],["isArray",1],[": ",17],["Bool",18],[")",17]],"d":"Creates a new `Document` by parsing the existing `Data` buffer"},{"p":["Document","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Document","init(array:)"],"f":[["init",10],["(",17],["array",1],[": [",17],["PrimitiveEncodable",18,0],["]) ",17],["throws",12]],"s":[["init",10],["(",17],["array",1],[": [",17],["PrimitiveEncodable",18],["]) ",17],["throws",12]],"d":"Converts an array of Primitives to a BSON ArrayDocument"},{"p":["Document","init(bytes:isArray:)"],"f":[["init",10],["(",17],["bytes",1],[": [",17],["UInt8",18,577],["], ",17],["isArray",1],[": ",17],["Bool",18,371],[" = false)",17]],"s":[["init",10],["(",17],["bytes",1],[": [",17],["UInt8",18],["], ",17],["isArray",1],[": ",17],["Bool",18],[")",17]],"d":"Creates a new `Document` from the given bytes"},{"p":["Document","init(buffer:isArray:)"],"f":[["init",10],["(",17],["buffer",1],[": ",17],["ByteBuffer",18,262],[", ",17],["isArray",1],[": ",17],["Bool",18,371],[" = false)",17]],"s":[["init",10],["(",17],["buffer",1],[": ",17],["ByteBuffer",18],[", ",17],["isArray",1],[": ",17],["Bool",18],[")",17]],"d":"Creates a new `Document` by parsing an existing `ByteBuffer`"},{"p":["Document","init(isArray:)"],"f":[["init",10],["(",17],["isArray",1],[": ",17],["Bool",18,371],[" = false)",17]],"s":[["init",10],["(",17],["isArray",1],[": ",17],["Bool",18],[")",17]],"d":"Creates a new empty BSONDocument\n\n`isArray` dictates what kind of subdocument the `Document` is, and is `false` by default"},{"p":["Document","init(elements:isArray:)"],"f":[["init",10],["<",17],["S",0],[">(",17],["elements",1],[": ",17],["S",18],[", ",17],["isArray",1],[": ",17],["Bool",18,371],[" = false) ",17],["where",12],[" ",17],["S",18],[" : ",17],["Sequence",18,319],[", ",17],["S",18],[".",17],["Element",18],[" == (",17],["String",18,318],[", ",17],["Primitive",18,1],[")",17]],"s":[["init",10],["<",17],["S",0],[">(",17],["elements",1],[": ",17],["S",18],[", ",17],["isArray",1],[": ",17],["Bool",18],[")",17]],"c":[["S",1,"Sequence",319],["S.Element",2,"(String, Primitive)"]],"g":[["S",0,0]],"d":"Creates a new Document with the given elements"},{"p":["ObjectId","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["ObjectId","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["ObjectId","init(_:)"],"f":[["init",10],["?(",17],["_",1],[" ",17],["hex",2],[": ",17],["String",18,318],[")",17]],"s":[["init",10],["?(",17],["String",18],[")",17]],"d":"Decodes the ObjectID from the provided (24 character) hexString"},{"p":["Timestamp","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,582],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Timestamp","init(increment:timestamp:)"],"f":[["init",10],["(",17],["increment",1],[": ",17],["Int32",18,575],[", ",17],["timestamp",1],[": ",17],["Int32",18,575],[")",17]],"s":[["init",10],["(",17],["increment",1],[": ",17],["Int32",18],[", ",17],["timestamp",1],[": ",17],["Int32",18],[")",17]]},{"p":["DocumentSlice","subscript(_:)"],"f":[["subscript",10],["(",17],["bounds",2],[": ",17],["Range",18,473],["<",17],["DocumentIndex",18,13],[">) -> ",17],["DocumentSlice",18,14],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["Range",18],["<",17],["DocumentIndex",18],[">) -> ",17],["DocumentSlice",18]]},{"p":["DocumentSlice","subscript(_:)"],"f":[["subscript",10],["(",17],["position",2],[": ",17],["DocumentIndex",18,13],[") -> (",17],["String",18,318],[", ",17],["Primitive",18,1],[") { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["DocumentIndex",18],[") -> (",17],["String",18],[", ",17],["Primitive",18],[")",17]]},{"p":["Document","subscript(_:)"],"f":[["subscript",10],["(",17],["bounds",2],[": ",17],["Range",18,473],["<",17],["DocumentIndex",18,13],[">) -> ",17],["DocumentSlice",18,14],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["Range",18],["<",17],["DocumentIndex",18],[">) -> ",17],["DocumentSlice",18]]},{"p":["Document","subscript(_:)"],"f":[["subscript",10],["(",17],["key",2],[": ",17],["String",18,318],[") -> ",17],["Primitive",18,1],["? { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["subscript",10],["(",17],["String",18],[") -> ",17],["Primitive",18],["?",17]],"d":"Extracts any `Primitive` fom the value at key `key`"},{"p":["Document","subscript(_:)"],"f":[["subscript",10],["(",17],["index",2],[": ",17],["Int",18,377],[") -> ",17],["Primitive",18,1],[" { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["subscript",10],["(",17],["Int",18],[") -> ",17],["Primitive",18]]},{"p":["Document","subscript(_:)"],"f":[["subscript",10],["(",17],["position",2],[": ",17],["DocumentIndex",18,13],[") -> (",17],["String",18,318],[", ",17],["Primitive",18,1],[") { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["DocumentIndex",18],[") -> (",17],["String",18],[", ",17],["Primitive",18],[")",17]]},{"p":["BSONDecoderSettings","strict"],"f":[["static",12],[" ",17],["var",12],[" ",17],["strict",7],[": ",17],["BSONDecoderSettings",18,21],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["strict",7],[": ",17],["BSONDecoderSettings",18]],"d":"Decodes values only if they are exactly matching the expectation.\n\nFor non-BSON types, the following mapping applies:\n\n- Float: Decode from Double\n- Non-native Integer types: .anyInteger"},{"p":["BSONDecoderSettings","adaptive"],"f":[["static",12],[" ",17],["var",12],[" ",17],["adaptive",7],[": ",17],["BSONDecoderSettings",18,21],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["adaptive",7],[": ",17],["BSONDecoderSettings",18]],"d":"Tries to decode values, even if the types do not match. Some precision loss is possible."},{"p":["BSONEncoderStrategies","default"],"f":[["static",12],[" ",17],["var",12],[" ",17],["`default`",7],[": ",17],["BSONEncoderStrategies",18,23],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["`default`",7],[": ",17],["BSONEncoderStrategies",18]]},{"p":["BSONDecoder","settings"],"f":[["var",12],[" ",17],["settings",7],[": ",17],["BSONDecoderSettings",18,21]],"s":[["var",12],[" ",17],["settings",7],[": ",17],["BSONDecoderSettings",18]],"d":"The configuration used for decoding"},{"p":["BSONDecoder","userInfo"],"f":[["var",12],[" ",17],["userInfo",7],[": [",17],["CodingUserInfoKey",18,506],[" : ",17],["Any",12],["]",17]],"s":[["var",12],[" ",17],["userInfo",7],[": [",17],["CodingUserInfoKey",18],[" : ",17],["Any",12],["]",17]],"d":"A dictionary you use to customize the decoding process by providing contextual information."},{"p":["BSONEncoder","strategies"],"f":[["var",12],[" ",17],["strategies",7],[": ",17],["BSONEncoderStrategies",18,23]],"s":[["var",12],[" ",17],["strategies",7],[": ",17],["BSONEncoderStrategies",18]],"d":"Configures the behavior of the BSON Encoder. See the documentation on `BSONEncoderStrategies` for details."},{"p":["BSONEncoder","userInfo"],"f":[["var",12],[" ",17],["userInfo",7],[": [",17],["CodingUserInfoKey",18,506],[" : ",17],["Any",12],["]",17]],"s":[["var",12],[" ",17],["userInfo",7],[": [",17],["CodingUserInfoKey",18],[" : ",17],["Any",12],["]",17]],"d":"Contextual user-provided information for use during encoding."},{"p":["AnyPrimitive","primitive"],"f":[["let",12],[" ",17],["primitive",7],[": ",17],["Primitive",18,1]],"s":[["let",12],[" ",17],["primitive",7],[": ",17],["Primitive",18]]},{"p":["DocumentPair","key"],"f":[["let",12],[" ",17],["key",7],[": ",17],["String",18,318]],"s":[["let",12],[" ",17],["key",7],[": ",17],["String",18]],"d":"The key associated with this pair"},{"p":["DocumentPair","index"],"f":[["let",12],[" ",17],["index",7],[": ",17],["Int",18,377]],"s":[["let",12],[" ",17],["index",7],[": ",17],["Int",18]],"d":"The index in the Document at which this pair resides"},{"p":["DocumentPair","value"],"f":[["var",12],[" ",17],["value",7],[": ",17],["Primitive",18,1]],"s":[["var",12],[" ",17],["value",7],[": ",17],["Primitive",18]],"d":"The value associated with this pair"},{"p":["DocumentSlice","startIndex"],"f":[["let",12],[" ",17],["startIndex",7],[": ",17],["DocumentIndex",18,13]],"s":[["let",12],[" ",17],["startIndex",7],[": ",17],["DocumentIndex",18]]},{"p":["DocumentSlice","endIndex"],"f":[["let",12],[" ",17],["endIndex",7],[": ",17],["DocumentIndex",18,13]],"s":[["let",12],[" ",17],["endIndex",7],[": ",17],["DocumentIndex",18]]},{"p":["JavaScriptCode","code"],"f":[["var",12],[" ",17],["code",7],[": ",17],["String",18,318]],"s":[["var",12],[" ",17],["code",7],[": ",17],["String",18]]},{"p":["EitherPrimitive","lhs"],"f":[["var",12],[" ",17],["lhs",7],[": ",17],["L",18],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["lhs",7],[": ",17],["L",18],["?",17]]},{"p":["EitherPrimitive","rhs"],"f":[["var",12],[" ",17],["rhs",7],[": ",17],["R",18],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["rhs",7],[": ",17],["R",18],["?",17]]},{"p":["EitherPrimitive","primitive"],"f":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18,1],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18]]},{"p":["ValidationResult","errorPosition"],"f":[["var",12],[" ",17],["errorPosition",7],[": ",17],["Int",18,377],["? { get }",17]],"s":[["var",12],[" ",17],["errorPosition",7],[": ",17],["Int",18],["?",17]]},{"p":["ValidationResult","key"],"f":[["let",12],[" ",17],["key",7],[": ",17],["String",18,318],["?",17]],"s":[["let",12],[" ",17],["key",7],[": ",17],["String",18],["?",17]]},{"p":["ValidationResult","reason"],"f":[["let",12],[" ",17],["reason",7],[": ",17],["String",18,318],["?",17]],"s":[["let",12],[" ",17],["reason",7],[": ",17],["String",18],["?",17]]},{"p":["ValidationResult","isValid"],"f":[["var",12],[" ",17],["isValid",7],[": ",17],["Bool",18,371],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isValid",7],[": ",17],["Bool",18]]},{"p":["BSONValueNotFound","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,318],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]]},{"p":["BSONValueNotFound","path"],"f":[["let",12],[" ",17],["path",7],[": [",17],["String",18,318],["]",17]],"s":[["let",12],[" ",17],["path",7],[": [",17],["String",18],["]",17]]},{"p":["BSONValueNotFound","type"],"f":[["let",12],[" ",17],["type",7],[": ",17],["Any",12],[".Type",17]],"s":[["let",12],[" ",17],["type",7],[": ",17],["Any",12],[".Type",17]]},{"p":["RegularExpression","options"],"f":[["var",12],[" ",17],["options",7],[": ",17],["String",18,318]],"s":[["var",12],[" ",17],["options",7],[": ",17],["String",18]]},{"p":["RegularExpression","pattern"],"f":[["var",12],[" ",17],["pattern",7],[": ",17],["String",18,318]],"s":[["var",12],[" ",17],["pattern",7],[": ",17],["String",18]]},{"p":["BSONDecoderSettings","decodeNullAsNil"],"f":[["var",12],[" ",17],["decodeNullAsNil",7],[": ",17],["Bool",18,371]],"s":[["var",12],[" ",17],["decodeNullAsNil",7],[": ",17],["Bool",18]],"d":"If `true`, BSON Null values will be regarded as `nil`"},{"p":["BSONDecoderSettings","filterDollarPrefix"],"f":[["var",12],[" ",17],["filterDollarPrefix",7],[": ",17],["Bool",18,371]],"s":[["var",12],[" ",17],["filterDollarPrefix",7],[": ",17],["Bool",18]]},{"p":["BSONDecoderSettings","intDecodingStrategy"],"f":[["var",12],[" ",17],["intDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["Int",18,377],[">",17]],"s":[["var",12],[" ",17],["intDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["Int",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `Int`"},{"p":["BSONDecoderSettings","int8DecodingStrategy"],"f":[["var",12],[" ",17],["int8DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["Int8",18,571],[">",17]],"s":[["var",12],[" ",17],["int8DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["Int8",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `Int8`"},{"p":["BSONDecoderSettings","uintDecodingStrategy"],"f":[["var",12],[" ",17],["uintDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["UInt",18,477],[">",17]],"s":[["var",12],[" ",17],["uintDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["UInt",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `UInt`"},{"p":["BSONDecoderSettings","floatDecodingStrategy"],"f":[["var",12],[" ",17],["floatDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["FloatDecodingStrategy",18,2]],"s":[["var",12],[" ",17],["floatDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["FloatDecodingStrategy",18]],"d":"A strategy that is applied when encountering a request to decode a `Float`"},{"p":["BSONDecoderSettings","int16DecodingStrategy"],"f":[["var",12],[" ",17],["int16DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["Int16",18,574],[">",17]],"s":[["var",12],[" ",17],["int16DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["Int16",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `Int16`"},{"p":["BSONDecoderSettings","int32DecodingStrategy"],"f":[["var",12],[" ",17],["int32DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["Int32",18,575],[">",17]],"s":[["var",12],[" ",17],["int32DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["Int32",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `Int32`"},{"p":["BSONDecoderSettings","int64DecodingStrategy"],"f":[["var",12],[" ",17],["int64DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["Int64",18,576],[">",17]],"s":[["var",12],[" ",17],["int64DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["Int64",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `Int64`"},{"p":["BSONDecoderSettings","uint8DecodingStrategy"],"f":[["var",12],[" ",17],["uint8DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["UInt8",18,577],[">",17]],"s":[["var",12],[" ",17],["uint8DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["UInt8",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `UInt8`"},{"p":["BSONDecoderSettings","doubleDecodingStrategy"],"f":[["var",12],[" ",17],["doubleDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["DoubleDecodingStrategy",18,3]],"s":[["var",12],[" ",17],["doubleDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["DoubleDecodingStrategy",18]],"d":"A strategy that is applied when encountering a request to decode a `Double`"},{"p":["BSONDecoderSettings","stringDecodingStrategy"],"f":[["var",12],[" ",17],["stringDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["StringDecodingStrategy",18,4]],"s":[["var",12],[" ",17],["stringDecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["StringDecodingStrategy",18]],"d":"A strategy that is applied when encountering a request to decode a `String`"},{"p":["BSONDecoderSettings","uint16DecodingStrategy"],"f":[["var",12],[" ",17],["uint16DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["UInt16",18,579],[">",17]],"s":[["var",12],[" ",17],["uint16DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["UInt16",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `UInt16`"},{"p":["BSONDecoderSettings","uint32DecodingStrategy"],"f":[["var",12],[" ",17],["uint32DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["UInt32",18,580],[">",17]],"s":[["var",12],[" ",17],["uint32DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["UInt32",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `UInt32`"},{"p":["BSONDecoderSettings","uint64DecodingStrategy"],"f":[["var",12],[" ",17],["uint64DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18,21],[".",17],["IntegerDecodingStrategy",18,5],["<",17],["UInt64",18,581],[">",17]],"s":[["var",12],[" ",17],["uint64DecodingStrategy",7],[": ",17],["BSONDecoderSettings",18],[".",17],["IntegerDecodingStrategy",18],["<",17],["UInt64",18],[">",17]],"d":"A strategy that is applied when encountering a request to decode a `UInt64`"},{"p":["BSONDecoderSettings","decodeDateFromTimestamp"],"f":[["var",12],[" ",17],["decodeDateFromTimestamp",7],[": ",17],["Bool",18,371]],"s":[["var",12],[" ",17],["decodeDateFromTimestamp",7],[": ",17],["Bool",18]],"d":"If `true`, allows decoding ObjectIds from Strings if they're formatted as a 24-character hexString"},{"p":["BSONDecoderSettings","decodeObjectIdFromString"],"f":[["var",12],[" ",17],["decodeObjectIdFromString",7],[": ",17],["Bool",18,371]],"s":[["var",12],[" ",17],["decodeObjectIdFromString",7],[": ",17],["Bool",18]],"d":"If `true`, allows decoding ObjectIds from Strings if they're formatted as a 24-character hexString"},{"p":["DocumentPairIterator","currentIndex"],"f":[["var",12],[" ",17],["currentIndex",7],[": ",17],["Int",18,377],[" { get }",17]],"s":[["var",12],[" ",17],["currentIndex",7],[": ",17],["Int",18]],"d":"The next index to be returned"},{"p":["DocumentPairIterator","currentBinaryIndex"],"f":[["var",12],[" ",17],["currentBinaryIndex",7],[": ",17],["Int",18,377],[" { get }",17]],"s":[["var",12],[" ",17],["currentBinaryIndex",7],[": ",17],["Int",18]]},{"p":["DocumentPairIterator","count"],"f":[["let",12],[" ",17],["count",7],[": ",17],["Int",18,377]],"s":[["let",12],[" ",17],["count",7],[": ",17],["Int",18]],"d":"The total amount of elements in this iterator (previous, current and upcoming elements)"},{"p":["DocumentPairIterator","isDrained"],"f":[["var",12],[" ",17],["isDrained",7],[": ",17],["Bool",18,371],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isDrained",7],[": ",17],["Bool",18]],"d":"If `true`, the end of this iterator has been reached"},{"p":["BSONEncoderStrategies","filterDollarPrefix"],"f":[["var",12],[" ",17],["filterDollarPrefix",7],[": ",17],["Bool",18,371]],"s":[["var",12],[" ",17],["filterDollarPrefix",7],[": ",17],["Bool",18]]},{"p":["BSONEncoderStrategies","keyedNilEncodingStrategy"],"f":[["var",12],[" ",17],["keyedNilEncodingStrategy",7],[": ",17],["BSONEncoderStrategies",18,23],[".",17],["KeyedNilEncodingStrategy",18,6]],"s":[["var",12],[" ",17],["keyedNilEncodingStrategy",7],[": ",17],["BSONEncoderStrategies",18],[".",17],["KeyedNilEncodingStrategy",18]],"d":"Defines how optionals that are `nil` are encoded in keyed containers"},{"p":["BSONEncoderStrategies","unsignedIntegerEncodingStrategy"],"f":[["var",12],[" ",17],["unsignedIntegerEncodingStrategy",7],[": ",17],["BSONEncoderStrategies",18,23],[".",17],["UnsignedIntegerEncodingStrategy",18,7]],"s":[["var",12],[" ",17],["unsignedIntegerEncodingStrategy",7],[": ",17],["BSONEncoderStrategies",18],[".",17],["UnsignedIntegerEncodingStrategy",18]],"d":"Defines how unsigned integers are encoded"},{"p":["JavaScriptCodeWithScope","code"],"f":[["var",12],[" ",17],["code",7],[": ",17],["String",18,318]],"s":[["var",12],[" ",17],["code",7],[": ",17],["String",18]]},{"p":["JavaScriptCodeWithScope","scope"],"f":[["var",12],[" ",17],["scope",7],[": ",17],["Document",18,29]],"s":[["var",12],[" ",17],["scope",7],[": ",17],["Document",18]]},{"p":["Binary","data"],"f":[["var",12],[" ",17],["data",7],[": ",17],["Data",18,259],[" { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["var",12],[" ",17],["data",7],[": ",17],["Data",18]],"d":"The data stored"},{"p":["Binary","count"],"f":[["var",12],[" ",17],["count",7],[": ",17],["Int",18,377],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["count",7],[": ",17],["Int",18]],"d":"The amount of data, in bytes, stored in this Binary"},{"p":["Binary","storage"],"f":[["var",12],[" ",17],["storage",7],[": ",17],["ByteBuffer",18,262],[" { get }",17]],"s":[["var",12],[" ",17],["storage",7],[": ",17],["ByteBuffer",18]],"d":"The underlying data storage of the Binary instance"},{"p":["Binary","subType"],"f":[["var",12],[" ",17],["subType",7],[": ",17],["Binary",18,26],[".",17],["SubType",18,8]],"s":[["var",12],[" ",17],["subType",7],[": ",17],["Binary",18],[".",17],["SubType",18]],"d":"A single byte indicating the data type"},{"p":["Document","startIndex"],"f":[["var",12],[" ",17],["startIndex",7],[": ",17],["DocumentIndex",18,13],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["startIndex",7],[": ",17],["DocumentIndex",18]]},{"p":["Document","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,318],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]]},{"p":["Document","keys"],"f":[["var",12],[" ",17],["keys",7],[": [",17],["String",18,318],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["keys",7],[": [",17],["String",18],["]",17]],"d":"Gets all top level keys in this Document"},{"p":["Document","count"],"f":[["var",12],[" ",17],["count",7],[": ",17],["Int",18,377],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["count",7],[": ",17],["Int",18]]},{"p":["Document","pairs"],"f":[["var",12],[" ",17],["pairs",7],[": ",17],["DocumentPairIterator",18,22],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["pairs",7],[": ",17],["DocumentPairIterator",18]],"d":"A more detailed view into the pairs contained in this"},{"p":["Document","values"],"f":[["var",12],[" ",17],["values",7],[": [",17],["Primitive",18,1],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["values",7],[": [",17],["Primitive",18],["]",17]],"d":"Gets all top level values in this Document"},{"p":["Document","isArray"],"f":[["var",12],[" ",17],["isArray",7],[": ",17],["Bool",18,371],[" { get }",17]],"s":[["var",12],[" ",17],["isArray",7],[": ",17],["Bool",18]],"d":"Dictates whether this `Document` is an `Array` or `Dictionary`-like type"},{"p":["Document","endIndex"],"f":[["var",12],[" ",17],["endIndex",7],[": ",17],["DocumentIndex",18,13],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["endIndex",7],[": ",17],["DocumentIndex",18]]},{"p":["ObjectId","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,318],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]]},{"p":["ObjectId","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,318],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]]},{"p":["ObjectId","date"],"f":[["var",12],[" ",17],["date",7],[": ",17],["Date",18,260],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["date",7],[": ",17],["Date",18]],"d":"The creation date of this ObjectId"},{"p":["ObjectId","hexString"],"f":[["var",12],[" ",17],["hexString",7],[": ",17],["String",18,318],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["hexString",7],[": ",17],["String",18]],"d":"The 12 bytes represented as 24-character hex-string"},{"p":["Timestamp","increment"],"f":[["var",12],[" ",17],["increment",7],[": ",17],["Int32",18,575]],"s":[["var",12],[" ",17],["increment",7],[": ",17],["Int32",18]]},{"p":["Timestamp","timestamp"],"f":[["var",12],[" ",17],["timestamp",7],[": ",17],["Int32",18,575]],"s":[["var",12],[" ",17],["timestamp",7],[": ",17],["Int32",18]]},{"p":["ObjectId","make(from:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["make",7],["(",17],["from",1],[" ",17],["hex",2],[": ",17],["String",18,318],[") ",17],["throws",12],[" -> ",17],["ObjectId",18,30]],"s":[["static",12],[" ",17],["func",12],[" ",17],["make",7],["(",17],["from",1],[": ",17],["String",18],[") ",17],["throws",12],[" -> ",17],["ObjectId",18]]},{"p":["Decimal128","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["BSONDecoder","decode(_:fromPrimitive:)"],"f":[["func",12],[" ",17],["decode",7],["<",17],["D",0],[">(",17],["_",1],[" ",17],["type",2],[": ",17],["D",18],[".Type, ",17],["fromPrimitive",1],[" ",17],["primitive",2],[": ",17],["Primitive",18,1],[") ",17],["throws",12],[" -> ",17],["D",18],[" ",17],["where",12],[" ",17],["D",18],[" : ",17],["Decodable",18,373]],"s":[["func",12],[" ",17],["decode",7],["<",17],["D",0],[">(",17],["D",18],[".Type, ",17],["fromPrimitive",1],[": ",17],["Primitive",18],[") ",17],["throws",12],[" -> ",17],["D",18]],"c":[["D",1,"Decodable",373]],"g":[["D",0,0]]},{"p":["BSONDecoder","decode(_:from:)"],"f":[["func",12],[" ",17],["decode",7],["<",17],["D",0],[">(",17],["_",1],[" ",17],["type",2],[": ",17],["D",18],[".Type, ",17],["from",1],[" ",17],["document",2],[": ",17],["Document",18,29],[") ",17],["throws",12],[" -> ",17],["D",18],[" ",17],["where",12],[" ",17],["D",18],[" : ",17],["Decodable",18,373]],"s":[["func",12],[" ",17],["decode",7],["<",17],["D",0],[">(",17],["D",18],[".Type, ",17],["from",1],[": ",17],["Document",18],[") ",17],["throws",12],[" -> ",17],["D",18]],"c":[["D",1,"Decodable",373]],"g":[["D",0,0]]},{"p":["BSONEncoder","encodePrimitive(_:)"],"f":[["func",12],[" ",17],["encodePrimitive",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Encodable",18,264],[") ",17],["throws",12],[" -> ",17],["Primitive",18,1],["?",17]],"s":[["func",12],[" ",17],["encodePrimitive",7],["(",17],["Encodable",18],[") ",17],["throws",12],[" -> ",17],["Primitive",18],["?",17]],"d":"Returns the BSON-encoded representation of the value you supply\n\nIf there's a problem encoding the value you supply, this method throws an error based on the type of problem:\n\n- The value fails to encode, or contains a nested value that fails to encode—this method throws the corresponding error."},{"p":["BSONEncoder","encode(_:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Encodable",18,264],[") ",17],["throws",12],[" -> ",17],["Document",18,29]],"s":[["func",12],[" ",17],["encode",7],["(",17],["Encodable",18],[") ",17],["throws",12],[" -> ",17],["Document",18]],"d":"Returns the BSON-encoded representation of the value you supply\n\nIf there's a problem encoding the value you supply, this method throws an error based on the type of problem:\n\n- The value fails to encode, or contains a nested value that fails to encode—this method throws the corresponding error.\n- The value can't be encoded as a BSON array or BSON object—this method throws the invalidValue error."},{"p":["AnyPrimitive","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]]},{"p":["AnyPrimitive","hash(into:)"],"f":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[" ",17],["hasher",2],[": ",17],["inout",12],[" ",17],["Hasher",18,578],[")",17]],"s":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[": ",17],["inout",12],[" ",17],["Hasher",18],[")",17]]},{"p":["AnyPrimitive","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["DocumentSlice","index(after:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["after",1],[" ",17],["i",2],[": ",17],["DocumentIndex",18,13],[") -> ",17],["DocumentIndex",18,13]],"s":[["func",12],[" ",17],["index",7],["(",17],["after",1],[": ",17],["DocumentIndex",18],[") -> ",17],["DocumentIndex",18]]},{"p":["DocumentSlice","index(before:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["before",1],[" ",17],["i",2],[": ",17],["DocumentIndex",18,13],[") -> ",17],["DocumentIndex",18,13]],"s":[["func",12],[" ",17],["index",7],["(",17],["before",1],[": ",17],["DocumentIndex",18],[") -> ",17],["DocumentIndex",18]]},{"p":["EitherPrimitive","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]],"c":[["L",1,"Primitive",1],["R",1,"Primitive",1]],"g":[["L",0,0],["R",1,0]]},{"p":["EitherPrimitive","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]],"c":[["L",1,"Primitive",1],["R",1,"Primitive",1]],"g":[["L",0,0],["R",1,0]]},{"p":["DocumentIterator","next()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["next",7],["() -> (",17],["String",18,318],[", ",17],["Primitive",18,1],[")?",17]],"s":[["func",12],[" ",17],["next",7],["() -> (",17],["String",18],[", ",17],["Primitive",18],[")?",17]],"d":"Returns the next element in the Document *unless* the last element was already returned"},{"p":["RegularExpression","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["PrimitiveEncodable","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]]},{"p":["DocumentPairIterator","next()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["next",7],["() -> ",17],["DocumentPair",18,12],["?",17]],"s":[["func",12],[" ",17],["next",7],["() -> ",17],["DocumentPair",18],["?",17]],"d":"Returns the next element in the Document *unless* the last element was already returned"},{"p":["Null","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["Binary","hash(into:)"],"f":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[" ",17],["hasher",2],[": ",17],["inout",12],[" ",17],["Hasher",18,578],[")",17]],"s":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[": ",17],["inout",12],[" ",17],["Hasher",18],[")",17]]},{"p":["Binary","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["Document","appendValue(_:forKey:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["appendValue",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],[", ",17],["forKey",1],[" ",17],["key",2],[": ",17],["String",18,318],[")",17]],"s":[["func",12],[" ",17],["appendValue",7],["(",17],["Primitive",18],[", ",17],["forKey",1],[": ",17],["String",18],[")",17]]},{"p":["Document","containsKey(_:)"],"f":[["func",12],[" ",17],["containsKey",7],["(",17],["_",1],[" ",17],["key",2],[": ",17],["String",18,318],[") -> ",17],["Bool",18,371]],"s":[["func",12],[" ",17],["containsKey",7],["(",17],["String",18],[") -> ",17],["Bool",18]]},{"p":["Document","removeValue(forKey:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["removeValue",7],["(",17],["forKey",1],[" ",17],["key",2],[": ",17],["String",18,318],[") -> ",17],["Primitive",18,1],["?",17]],"s":[["func",12],[" ",17],["removeValue",7],["(",17],["forKey",1],[": ",17],["String",18],[") -> ",17],["Primitive",18],["?",17]]},{"p":["Document","makeIterator()"],"f":[["func",12],[" ",17],["makeIterator",7],["() -> ",17],["DocumentIterator",18,17]],"s":[["func",12],[" ",17],["makeIterator",7],["() -> ",17],["DocumentIterator",18]],"d":"Creates an iterator that iterates over each pair in the Document"},{"p":["Document","makeByteBuffer()"],"f":[["func",12],[" ",17],["makeByteBuffer",7],["() -> ",17],["ByteBuffer",18,262]],"s":[["func",12],[" ",17],["makeByteBuffer",7],["() -> ",17],["ByteBuffer",18]]},{"p":["Document","hash(into:)"],"f":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[" ",17],["hasher",2],[": ",17],["inout",12],[" ",17],["Hasher",18,578],[")",17]],"s":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[": ",17],["inout",12],[" ",17],["Hasher",18],[")",17]]},{"p":["Document","index(after:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["after",1],[" ",17],["i",2],[": ",17],["DocumentIndex",18,13],[") -> ",17],["DocumentIndex",18,13]],"s":[["func",12],[" ",17],["index",7],["(",17],["after",1],[": ",17],["DocumentIndex",18],[") -> ",17],["DocumentIndex",18]]},{"p":["Document","index(before:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["before",1],[" ",17],["i",2],[": ",17],["DocumentIndex",18,13],[") -> ",17],["DocumentIndex",18,13]],"s":[["func",12],[" ",17],["index",7],["(",17],["before",1],[": ",17],["DocumentIndex",18],[") -> ",17],["DocumentIndex",18]]},{"p":["Document","append(contentsOf:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["(",17],["contentsOf",1],[" ",17],["document",2],[": ",17],["Document",18,29],[")",17]],"s":[["func",12],[" ",17],["append",7],["(",17],["contentsOf",1],[": ",17],["Document",18],[")",17]]},{"p":["Document","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],[")",17]],"s":[["func",12],[" ",17],["append",7],["(",17],["Primitive",18],[")",17]],"d":"Appends a `Value` to this `Document` where this `Document` acts like an `Array`\n\n- parameter value: The `Value` to append"},{"p":["Document","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["<",17],["PE",0],[">(",17],["_",1],[" ",17],["value",2],[": ",17],["PE",18],[") ",17],["throws",12],[" ",17],["where",12],[" ",17],["PE",18],[" : ",17],["PrimitiveEncodable",18,0]],"s":[["func",12],[" ",17],["append",7],["<",17],["PE",0],[">(",17],["PE",18],[") ",17],["throws",12]],"c":[["PE",1,"PrimitiveEncodable",0]],"g":[["PE",0,0]],"d":"Appends a `Value` to this `Document` where this `Document` acts like an `Array`\n\n- parameter value: The `Value` to append"},{"p":["Document","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["Document","insert(contentsOf:at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["insert",7],["(",17],["contentsOf",1],[" ",17],["document",2],[": ",17],["Document",18,29],[", ",17],["at",1],[" ",17],["index",2],[": ",17],["Int",18,377],[")",17]],"s":[["func",12],[" ",17],["insert",7],["(",17],["contentsOf",1],[": ",17],["Document",18],[", ",17],["at",1],[": ",17],["Int",18],[")",17]]},{"p":["Document","insert(_:at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["insert",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],[", ",17],["at",1],[" ",17],["index",2],[": ",17],["Int",18,377],[")",17]],"s":[["func",12],[" ",17],["insert",7],["(",17],["Primitive",18],[", ",17],["at",1],[": ",17],["Int",18],[")",17]]},{"p":["Document","insert(_:at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["insert",7],["<",17],["PE",0],[">(",17],["_",1],[" ",17],["value",2],[": ",17],["PE",18],[", ",17],["at",1],[" ",17],["index",2],[": ",17],["Int",18,377],[") ",17],["throws",12],[" ",17],["where",12],[" ",17],["PE",18],[" : ",17],["PrimitiveEncodable",18,0]],"s":[["func",12],[" ",17],["insert",7],["<",17],["PE",0],[">(",17],["PE",18],[", ",17],["at",1],[": ",17],["Int",18],[") ",17],["throws",12]],"c":[["PE",1,"PrimitiveEncodable",0]],"g":[["PE",0,0]]},{"p":["Document","insert(_:forKey:at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["insert",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],[", ",17],["forKey",1],[" ",17],["key",2],[": ",17],["String",18,318],[", ",17],["at",1],[" ",17],["index",2],[": ",17],["Int",18,377],[")",17]],"s":[["func",12],[" ",17],["insert",7],["(",17],["Primitive",18],[", ",17],["forKey",1],[": ",17],["String",18],[", ",17],["at",1],[": ",17],["Int",18],[")",17]]},{"p":["Document","remove(at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["remove",7],["(",17],["at",1],[" ",17],["index",2],[": ",17],["Int",18,377],[")",17]],"s":[["func",12],[" ",17],["remove",7],["(",17],["at",1],[": ",17],["Int",18],[")",17]]},{"p":["Document","makeData()"],"f":[["func",12],[" ",17],["makeData",7],["() -> ",17],["Data",18,259]],"s":[["func",12],[" ",17],["makeData",7],["() -> ",17],["Data",18]]},{"p":["Document","validate()"],"f":[["func",12],[" ",17],["validate",7],["() -> ",17],["ValidationResult",18,18]],"s":[["func",12],[" ",17],["validate",7],["() -> ",17],["ValidationResult",18]],"d":"Validates this document's technical correctness\n\nIf `validatingRecursively` is `true` the subdocuments will be traversed, too"},{"p":["ObjectId","hash(into:)"],"f":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[" ",17],["hasher",2],[": ",17],["inout",12],[" ",17],["Hasher",18,578],[")",17]],"s":[["func",12],[" ",17],["hash",7],["(",17],["into",1],[": ",17],["inout",12],[" ",17],["Hasher",18],[")",17]]},{"p":["ObjectId","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,583],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["Primitive","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]]},{"p":["Primitive","equals(_:)"],"f":[["func",12],[" ",17],["equals",7],["(",17],["_",1],[" ",17],["primitive",2],[": ",17],["Primitive",18,1],[") -> ",17],["Bool",18,371]],"s":[["func",12],[" ",17],["equals",7],["(",17],["Primitive",18],[") -> ",17],["Bool",18]]},{"p":["AnyPrimitive","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["AnyPrimitive",18,11],[", ",17],["rhs",2],[": ",17],["AnyPrimitive",18,11],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["AnyPrimitive",18],[", ",17],["AnyPrimitive",18],[") -> ",17],["Bool",18]]},{"p":["DocumentIndex","<(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["lhs",2],[": ",17],["DocumentIndex",18,13],[", ",17],["rhs",2],[": ",17],["DocumentIndex",18,13],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["DocumentIndex",18],[", ",17],["DocumentIndex",18],[") -> ",17],["Bool",18]]},{"p":["Binary","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["Binary",18,26],[", ",17],["rhs",2],[": ",17],["Binary",18,26],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["Binary",18],[", ",17],["Binary",18],[") -> ",17],["Bool",18]]},{"p":["Document","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["Document",18,29],[", ",17],["rhs",2],[": ",17],["Document",18,29],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["Document",18],[", ",17],["Document",18],[") -> ",17],["Bool",18]]},{"p":["ObjectId","<(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["lhs",2],[": ",17],["ObjectId",18,30],[", ",17],["rhs",2],[": ",17],["ObjectId",18,30],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["ObjectId",18],[", ",17],["ObjectId",18],[") -> ",17],["Bool",18]]},{"p":["ObjectId","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["ObjectId",18,30],[", ",17],["rhs",2],[": ",17],["ObjectId",18,30],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["ObjectId",18],[", ",17],["ObjectId",18],[") -> ",17],["Bool",18]]},{"p":["Timestamp","==(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["lhs",2],[": ",17],["Timestamp",18,31],[", ",17],["rhs",2],[": ",17],["Timestamp",18,31],[") -> ",17],["Bool",18,371]],"s":[["static",12],[" ",17],["func",12],[" ",17],["==",7],[" ",17],["(",17],["Timestamp",18],[", ",17],["Timestamp",18],[") -> ",17],["Bool",18]]},{"p":["DocumentSlice","SubSequence"],"f":[["typealias",12],[" ",17],["SubSequence",7],[" = ",17],["DocumentSlice",18,14]],"s":[["typealias",12],[" ",17],["SubSequence",7]]},{"p":["DocumentSlice","Element"],"f":[["typealias",12],[" ",17],["Element",7],[" = (",17],["String",18,318],[", ",17],["Primitive",18,1],[")",17]],"s":[["typealias",12],[" ",17],["Element",7]]},{"p":["BSONDecoderSettings","DecodingStrategy"],"f":[["typealias",12],[" ",17],["DecodingStrategy",7],["<",17],["P",0],["> = (",17],["String",18,318],["?, ",17],["Primitive",18,1],["?) ",17],["throws",12],[" -> ",17],["P",18],["?",17]],"s":[["typealias",12],[" ",17],["DecodingStrategy",7]],"g":[["P",0,0]],"d":"A strategy used to decode `P` from a BSON `Primitive?` value\n\nIf the key (`String`) is nil the value was not associated with a Dictionary Document.\n\nIf the value (`Primitive`) is nil, the value was not found at all but can be overwritten with a default"},{"p":["Document","SubSequence"],"f":[["typealias",12],[" ",17],["SubSequence",7],[" = ",17],["DocumentSlice",18,14]],"s":[["typealias",12],[" ",17],["SubSequence",7]]},{"p":["Document","Index"],"f":[["typealias",12],[" ",17],["Index",7],[" = ",17],["DocumentIndex",18,13]],"s":[["typealias",12],[" ",17],["Index",7]]},{"p":["Document","Iterator"],"f":[["typealias",12],[" ",17],["Iterator",7],[" = ",17],["DocumentIterator",18,17]],"s":[["typealias",12],[" ",17],["Iterator",7]]},{"p":["NSRegularExpression","init(_:)"],"f":[["convenience",12],[" ",17],["init",10],["(",17],["_",1],[" ",17],["regex",2],[": ",17],["RegularExpression",18,20],[") ",17],["throws",12]],"s":[["convenience",12],[" ",17],["init",10],["(",17],["RegularExpression",18],[") ",17],["throws",12]],"d":"Returns an initialized NSRegularExpression instance with the pattern and options from the specified BSON regular expression."},{"p":["NSRegularExpression","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]]},{"p":["Optional","subscript(_:)"],"f":[["subscript",10],["(",17],["key",2],[": ",17],["String",18,318],[") -> ",17],["Primitive",18,1],["? { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["subscript",10],["(",17],["String",18],[") -> ",17],["Primitive",18],["?",17]],"e":[["Wrapped",2,"Primitive",1]],"c":[["Wrapped",2,"Primitive",1]],"g":[["Wrapped",0,0]]},{"p":["Optional","subscript(_:)"],"f":[["subscript",10],["(",17],["index",2],[": ",17],["Int",18,377],[") -> ",17],["Primitive",18,1],[" { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["subscript",10],["(",17],["Int",18],[") -> ",17],["Primitive",18]],"e":[["Wrapped",2,"Primitive",1]],"c":[["Wrapped",2,"Primitive",1]],"g":[["Wrapped",0,0]]},{"p":["Dictionary","primitive"],"f":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18,1],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18]],"e":[["Key",2,"String",318],["Value",1,"Primitive",1]]},{"p":["Array","primitive"],"f":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18,1],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["primitive",7],[": ",17],["Primitive",18]],"e":[["Element",1,"Primitive",1]]},{"p":["Dictionary","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]],"e":[["Key",2,"String",318],["Value",1,"Encodable",264]],"c":[["Key",2,"String",318],["Value",1,"Encodable",264]],"g":[["Key",0,0],["Value",1,0]]},{"p":["Array","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]],"e":[["Element",1,"Encodable",264]],"c":[["Element",1,"Encodable",264]],"g":[["Element",0,0]]},{"p":["Set","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]],"e":[["Element",1,"Encodable",264],["Element",1,"Hashable",266]],"c":[["Element",1,"Encodable",264],["Element",1,"Hashable",266]],"g":[["Element",0,0]]},{"p":["Optional","encodePrimitive()"],"f":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["encodePrimitive",7],["() ",17],["throws",12],[" -> ",17],["Primitive",18]],"e":[["Wrapped",1,"PrimitiveEncodable",0]],"c":[["Wrapped",1,"PrimitiveEncodable",0]],"g":[["Wrapped",0,0]]},{"p":["KeyedDecodingContainer","decodeIfPresent(_:forKey:)"],"f":[["func",12],[" ",17],["decodeIfPresent",7],["(",17],["_",1],[" ",17],["type",2],[": ",17],["Primitive",18,1],[".Protocol, ",17],["forKey",1],[" ",17],["key",2],[": ",17],["KeyedDecodingContainer",18,546],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12],[" -> ",17],["Primitive",18,1],["?",17]],"s":[["func",12],[" ",17],["decodeIfPresent",7],["(",17],["Primitive",18],[".Protocol, ",17],["forKey",1],[": ",17],["KeyedDecodingContainer",18],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12],[" -> ",17],["Primitive",18],["?",17]],"e":[["K",1,"CodingKey",585]],"c":[["K",1,"CodingKey",585]],"g":[["K",0,0]]},{"p":["KeyedDecodingContainer","decode(_:forKey:)"],"f":[["func",12],[" ",17],["decode",7],["(",17],["_",1],[" ",17],["type",2],[": ",17],["Primitive",18,1],[".Protocol, ",17],["forKey",1],[" ",17],["key",2],[": ",17],["KeyedDecodingContainer",18,546],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12],[" -> ",17],["Primitive",18,1]],"s":[["func",12],[" ",17],["decode",7],["(",17],["Primitive",18],[".Protocol, ",17],["forKey",1],[": ",17],["KeyedDecodingContainer",18],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12],[" -> ",17],["Primitive",18]],"e":[["K",1,"CodingKey",585]],"c":[["K",1,"CodingKey",585]],"g":[["K",0,0]]},{"p":["KeyedEncodingContainer","encodeBSONPrimitive(_:forKey:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],["?, ",17],["forKey",1],[" ",17],["key",2],[": ",17],["KeyedEncodingContainer",18,547],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["Primitive",18],["?, ",17],["forKey",1],[": ",17],["KeyedEncodingContainer",18],["<",17],["K",18],[">.",17],["Key",18],[") ",17],["throws",12]],"e":[["K",1,"CodingKey",585]],"c":[["K",1,"CodingKey",585]],"g":[["K",0,0]]},{"p":["UnkeyedEncodingContainer","encodeBSONPrimitive(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],["?) ",17],["throws",12]],"s":[["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["Primitive",18],["?) ",17],["throws",12]]},{"p":["SingleValueEncodingContainer","encodeBSONPrimitive(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["_",1],[" ",17],["value",2],[": ",17],["Primitive",18,1],["?) ",17],["throws",12]],"s":[["func",12],[" ",17],["encodeBSONPrimitive",7],["(",17],["Primitive",18],["?) ",17],["throws",12]]}],"edges":{"conformer":[1,0,[],1,264,[],1,373,[],1,584,[],6,266,[],6,315,[],7,266,[],7,315,[],8,584,[],9,0,[],9,1,[],9,264,[],9,266,[],9,315,[],9,373,[],9,584,[],11,0,[],11,264,[],11,266,[],11,315,[],11,373,[],13,288,[],13,315,[],14,268,[],14,319,[],14,378,[],14,383,[],15,0,[],15,1,[],15,264,[],15,266,[],15,315,[],15,373,[],15,556,[],15,566,[],15,568,[],15,584,[],16,0,[],16,264,[],16,584,[],17,475,[],19,548,[],19,572,[],19,584,[],20,0,[],20,1,[],20,264,[],20,266,[],20,315,[],20,373,[],20,584,[],22,319,[],22,475,[],24,0,[],24,1,[],24,264,[],24,266,[],24,315,[],24,373,[],24,584,[],25,0,[],25,1,[],25,264,[],25,373,[],25,584,[],26,0,[],26,1,[],26,264,[],26,266,[],26,315,[],26,373,[],26,584,[],27,0,[],27,1,[],27,264,[],27,373,[],27,584,[],28,0,[],28,1,[],28,264,[],28,373,[],28,584,[],29,0,[],29,1,[],29,264,[],29,266,[],29,268,[],29,315,[],29,319,[],29,373,[],29,378,[],29,383,[],29,552,[],29,561,[],29,564,[],29,584,[],30,0,[],30,1,[],30,264,[],30,266,[],30,288,[],30,315,[],30,373,[],30,548,[],30,554,[],30,561,[],30,584,[],31,0,[],31,1,[],31,264,[],31,266,[],31,315,[],31,373,[],31,584,[],258,0,[],259,584,[],260,1,[],260,584,[],263,0,[["Key",2,"String",318],["Value",1,"Encodable",264]],263,1,[["Key",2,"String",318],["Value",1,"Primitive",1]],318,1,[],370,0,[["Element",1,"Encodable",264]],370,1,[["Element",1,"Primitive",1]],371,1,[],372,1,[],376,0,[["Element",1,"Encodable",264],["Element",1,"Hashable",266]],377,1,[],474,0,[["Wrapped",1,"PrimitiveEncodable",0]],575,1,[]],"feature":[219,9,219,15,219,20,219,24,219,25,219,26,219,27,219,28,219,29,219,30,219,31,219,259,219,260,219,263,219,318,219,370,219,371,219,372,219,377,219,575,220,9,220,15,220,20,220,24,220,25,220,26,220,27,220,28,220,29,220,30,220,31,220,259,220,260,220,263,220,318,220,370,220,371,220,372,220,377,220,575,251,259,252,259,253,259,254,259,255,259,257,259,269,14,269,29,269,259,270,14,270,29,270,259,271,259,273,14,273,259,274,14,274,259,275,14,275,259,276,14,276,29,276,259,277,14,277,29,277,259,278,14,278,29,278,259,279,14,279,29,280,14,280,29,280,259,281,14,281,29,282,14,282,29,282,259,283,14,283,29,283,259,284,14,284,29,284,259,285,14,285,29,285,259,286,259,287,259,293,13,293,30,293,260,293,377,293,575,294,13,294,30,294,260,294,377,294,575,295,13,295,30,295,260,295,377,295,575,296,13,296,30,296,260,296,377,296,575,297,13,297,30,297,260,297,377,297,575,298,13,298,30,298,260,298,377,298,575,299,13,299,30,299,260,299,377,299,575,300,13,300,30,300,260,300,377,300,575,302,259,303,259,304,259,305,259,306,259,307,259,308,259,309,259,310,259,311,259,312,259,313,259,314,259,317,6,317,7,317,9,317,11,317,13,317,15,317,20,317,24,317,26,317,29,317,30,317,31,317,259,317,260,320,14,320,22,320,29,320,259,321,14,321,22,321,29,321,259,322,14,322,22,322,29,322,259,325,22,326,14,326,22,326,29,326,259,327,14,327,22,327,29,327,259,328,14,328,22,328,29,328,259,329,14,329,22,329,29,329,259,330,14,330,22,330,29,330,259,331,14,331,22,331,29,331,259,332,14,332,22,332,29,332,259,333,14,333,22,333,29,333,259,334,14,334,22,334,29,334,259,335,14,335,22,335,29,335,259,336,22,337,14,337,22,337,29,337,259,338,14,338,22,338,29,338,259,339,22,340,14,340,22,340,29,341,22,342,22,343,14,343,22,343,29,343,259,344,14,344,22,344,29,344,259,345,14,345,22,345,29,345,259,346,14,346,22,346,29,346,259,347,22,348,14,348,22,348,29,348,259,349,14,349,22,349,29,349,259,350,14,350,22,350,29,350,259,351,14,351,22,351,29,351,259,352,22,353,22,354,14,354,22,354,29,354,259,355,14,355,22,355,29,355,259,356,22,357,259,358,259,359,259,360,259,361,259,362,259,363,259,364,377,364,575,365,377,365,575,366,377,366,575,367,377,367,575,368,377,368,575,369,377,369,575,381,14,381,29,381,259,386,14,386,29,386,259,387,14,387,29,387,259,388,14,388,29,388,259,389,14,389,29,389,259,390,14,390,29,390,259,391,14,391,29,391,259,392,14,392,29,392,259,393,259,394,259,396,259,397,14,397,259,398,14,398,29,398,259,399,259,400,259,401,259,406,14,406,259,407,14,407,259,408,14,408,259,409,14,409,29,409,259,410,14,410,29,410,259,411,14,411,29,411,259,412,14,412,29,412,259,413,14,413,29,413,259,414,14,414,29,414,259,415,14,415,29,415,259,416,14,416,29,416,259,417,14,417,29,417,259,418,14,418,29,418,259,419,14,419,29,419,259,420,14,420,29,420,259,421,14,421,29,421,259,422,14,422,29,422,259,423,14,423,29,423,259,424,14,424,29,424,259,425,14,425,29,425,259,426,14,426,29,426,259,427,14,427,29,427,259,428,14,428,29,428,259,429,14,429,29,429,259,430,14,430,29,431,259,432,259,433,259,434,14,437,259,438,259,439,259,440,259,441,259,442,259,443,259,444,259,445,259,446,259,447,259,448,259,449,259,450,259,451,259,452,259,453,259,454,259,455,259,456,259,457,259,458,259,459,259,460,259,461,259,462,259,463,259,464,259,465,259,466,259,467,259,468,259,469,259,470,259,471,259,472,259,478,377,478,575,479,377,479,575,481,377,481,575,484,377,484,575,485,377,485,575,486,377,486,575,487,377,487,575,488,377,488,575,489,377,489,575,490,377,490,575,491,377,491,575,492,377,492,575,493,377,493,575,494,377,494,575,495,377,495,575,496,377,496,575,497,377,497,575,498,377,498,575,499,377,499,575,500,377,500,575,501,575,502,575,503,377,503,575,504,377,504,575,505,377,505,575,508,377,508,575,509,377,509,575,510,377,510,575,511,377,511,575,512,377,512,575,513,377,513,575,514,377,514,575,515,377,515,575,516,377,516,575,517,377,517,575,518,377,518,575,519,377,519,575,520,377,520,575,521,377,521,575,522,377,522,575,523,377,523,575,524,377,524,575,525,377,525,575,526,377,526,575,527,377,527,575,528,377,528,575,529,377,529,575,530,377,530,575,531,377,531,575,532,377,532,575,533,377,533,575,534,377,534,575,535,377,535,575,536,377,536,575,537,377,537,575,538,377,538,575,539,377,539,575,542,377,542,575,543,377,543,575,544,377,544,575,545,377,545,575,550,19,550,30,550,377,550,575,558,15,560,377,560,575,570,15,573,19],"member":[2,21,3,21,4,21,5,21,6,23,7,23,8,26,33,2,34,2,35,2,36,2,37,3,38,3,39,3,40,3,41,3,42,4,43,4,44,4,45,4,46,4,47,5,48,5,49,5,50,5,51,5,52,5,53,5,54,6,55,6,56,7,57,7,58,8,59,8,60,8,61,8,62,8,63,9,64,10,65,32,66,11,67,11,68,15,69,15,70,15,71,16,72,16,73,17,74,20,75,20,76,20,77,22,78,24,79,24,80,25,81,25,82,26,83,26,84,27,85,27,86,28,87,28,88,29,89,29,90,29,91,29,92,29,93,29,94,29,95,29,96,29,97,30,98,30,99,30,100,31,101,31,102,14,103,14,104,29,105,29,106,29,107,29,108,21,109,21,110,23,111,10,112,10,113,32,114,32,115,11,116,12,117,12,118,12,119,14,120,14,121,15,122,16,123,16,124,16,125,18,126,18,127,18,128,18,129,19,130,19,131,19,132,20,133,20,134,21,135,21,136,21,137,21,138,21,139,21,140,21,141,21,142,21,143,21,144,21,145,21,146,21,147,21,148,21,149,21,150,21,151,22,152,22,153,22,154,22,155,23,156,23,157,23,158,24,159,24,160,26,161,26,162,26,163,26,164,29,165,29,166,29,167,29,168,29,169,29,170,29,171,29,172,30,173,30,174,30,175,30,176,31,177,31,178,30,179,9,180,10,181,10,182,32,183,32,184,11,185,11,186,11,187,14,188,14,189,16,190,16,191,17,192,20,194,22,195,25,196,26,197,26,198,29,199,29,200,29,201,29,202,29,203,29,204,29,205,29,206,29,207,29,208,29,209,29,210,29,211,29,212,29,213,29,214,29,215,29,216,29,217,30,218,30,220,1,221,11,222,13,223,26,224,29,225,30,226,30,227,31,228,14,229,14,230,21,231,29,232,29,233,29,234,258,235,258,236,474,237,474,238,263,239,370,240,263,241,370,242,376,243,474,244,546,245,546,246,547,247,551,248,563],"requirement":[193,0],"defaultImplementation":[219,193]},"hints":[63,374,66,374,68,557,69,374,74,374,78,374,80,374,82,374,84,374,86,374,88,553,89,565,91,374,97,374,99,555,100,374,102,382,103,435,104,382,107,435,119,384,120,405,129,549,164,384,165,562,167,403,171,405,172,549,173,562,179,265,184,193,185,267,186,265,187,379,188,380,189,193,190,265,191,476,192,265,194,476,195,265,196,267,197,265,201,395,203,267,204,379,205,380,209,265,217,267,218,265,219,219,220,220,221,316,222,290,223,316,224,316,225,290,226,316,227,316,228,385,229,324,231,385,232,402,233,404,235,193,238,261,239,261,240,193,241,193,242,193,243,193,251,249,252,252,253,253,254,250,255,255,257,256,269,269,270,270,271,271,273,273,274,274,275,275,276,276,277,277,278,278,279,279,280,280,281,281,282,282,283,283,284,272,285,285,286,286,287,287,293,293,294,294,295,295,296,296,297,297,298,298,299,299,300,300,302,301,303,303,304,304,305,305,306,306,307,307,308,308,309,309,310,310,311,311,312,312,313,313,314,314,317,317,320,320,321,321,322,322,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,323,333,333,334,334,335,335,336,336,337,337,338,338,339,339,340,340,341,341,342,342,343,343,344,344,345,345,346,346,347,347,348,348,349,349,350,350,351,351,352,352,353,353,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,480,366,366,367,367,368,368,369,369,381,381,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,396,396,397,397,398,398,399,399,400,400,401,401,406,406,407,407,408,408,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,429,429,430,430,431,431,432,432,433,433,434,434,437,437,438,438,439,439,440,440,441,441,442,442,443,443,444,444,445,445,446,446,447,447,448,436,449,449,450,450,451,451,452,452,453,453,454,454,455,455,456,456,457,457,458,458,459,459,460,460,461,461,462,462,463,463,464,464,465,465,466,466,467,467,468,468,469,469,470,470,471,471,472,472,478,290,479,316,481,481,484,484,485,485,486,486,487,289,488,488,489,489,490,490,491,491,492,492,493,493,494,291,495,495,496,496,497,292,498,498,499,499,500,500,501,501,502,502,503,503,504,504,505,505,508,508,509,509,510,510,511,511,512,512,513,513,514,514,515,515,516,516,517,517,518,518,519,519,520,520,521,521,522,522,523,523,524,524,525,482,526,483,527,527,528,528,529,529,530,530,531,531,532,532,533,533,534,534,535,535,536,536,537,537,538,538,539,539,542,542,543,540,544,541,545,545,550,550,558,569,560,559,570,567,573,573],"sourcemap":[{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Decoding/BSONDecoder.swift","symbols":[3,14,10,5,15,111,8,15,112,11,11,64,245,16,180,254,16,181]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Decoding/BSONDecoderSettings.swift","symbols":[1,14,21,8,22,108,30,22,109,56,21,230,62,16,2,63,13,35,64,13,34,65,13,36,66,13,33,73,16,5,75,13,52,78,13,49,81,13,50,84,13,47,87,13,48,90,13,53,93,13,51,100,16,3,102,13,38,107,13,41,112,13,39,115,13,40,120,13,37,126,16,4,128,13,43,131,13,45,134,13,46,142,13,44,147,13,42,151,15,134,152,15,135,155,15,145,158,15,150,161,15,149,164,15,139,167,15,144,170,15,137,173,15,140,176,15,141,179,15,142,182,15,136,185,15,143,188,15,146,191,15,147,194,15,148,197,15,138]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Decoding/PrimitiveDecoding.swift","symbols":[9,16,245,14,16,244]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Encoding/BSONEncoder.swift","symbols":[7,19,32,11,11,65,21,16,183,38,16,182,65,15,113,68,15,114]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Encoding/BSONEncoderStrategies.swift","symbols":[1,14,23,6,16,6,8,13,54,11,13,55,15,16,7,17,13,56,20,13,57,23,22,110,28,15,156,31,15,157,33,15,155]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Codable/Encoding/PrimitiveEncoding.swift","symbols":[9,25,246,20,25,247,31,25,248]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Debugging/CustomDebugStringConvertible.swift","symbols":[1,15,165,10,15,173]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Array.swift","symbols":[5,15,169,36,11,106,218,25,214,240,25,207,249,25,208,255,25,210,273,25,212,277,25,211,293,11,88,302,11,92,312,15,239]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Collection.swift","symbols":[1,11,107,21,11,104,25,21,233,26,21,231,27,21,232,29,15,167,40,15,164,44,16,204,48,16,205,52,15,171,57,16,201,62,15,168,67,14,13,71,23,222,79,14,12,81,15,117,84,15,116,87,15,118,90,14,22,95,28,151,96,28,152,99,15,154,104,15,153,107,11,77,113,25,194]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Dictionary.swift","symbols":[5,15,166,39,16,199,85,11,89,89,25,206,95,25,213,118,25,200,127,25,198,235,11,96,244,15,238]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Equatable.swift","symbols":[3,23,224,40,16,220,84,16,203]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Helpers.swift","symbols":[54,14,19,55,15,131,56,15,130,58,15,129]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Serialization.swift","symbols":[4,16,215,8,16,202]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Subscripts.swift","symbols":[2,11,105]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document+Validation.swift","symbols":[2,14,18,3,29,125,4,15,127,5,15,126,7,15,128,254,16,216]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/Document.swift","symbols":[4,14,29,27,29,170,32,11,95,41,11,94,47,11,90,54,11,93]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Document/DocumentSlice.swift","symbols":[0,14,14,1,16,188,5,16,187,9,11,103,13,11,102,17,21,229,18,21,228,21,15,119,22,15,120,25,14,17,42,11,73,48,25,191]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/AnyPrimitive.swift","symbols":[2,14,11,3,23,221,7,16,185,50,15,115,52,11,67,56,16,184,60,16,186,64,11,66,74,14,16,80,15,124,89,15,122,96,15,123,103,11,72,107,11,71,111,16,189,115,16,190]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Binary.swift","symbols":[3,14,26,4,23,223,8,16,196,15,16,8,16,13,61,17,13,62,18,13,60,19,13,59,20,13,58,44,15,163,47,28,162,50,15,160,67,11,83,73,11,82,86,16,197,100,15,161]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Decimal128.swift","symbols":[5,14,9,14,16,179,24,11,63]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/JavaScript.swift","symbols":[0,14,15,1,15,121,3,11,70,7,11,68,12,14,24,13,15,158,14,15,159,16,11,79]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Null.swift","symbols":[1,14,25,3,11,81,5,16,195,15,11,80]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/ObjectId.swift","symbols":[8,14,30,13,11,98,23,23,178,32,11,99,61,15,175,91,15,174,97,23,226,101,23,225,109,16,217,116,15,172]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Optional.swift","symbols":[1,11,236,12,11,237]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/PrimitiveConvertible.swift","symbols":[0,16,0,1,9,193,7,16,241,13,16,242,19,16,240,39,16,243]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Primitives.swift","symbols":[2,16,1,5,16,219,62,16,209,80,11,91,155,16,218,165,11,97,197,14,28,198,11,87,201,14,27,202,11,85]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/RegularExpression.swift","symbols":[12,14,20,18,15,133,19,15,132,22,11,75,36,11,76,43,11,74,53,16,192,62,23,234,68,16,235]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/bson@8.0/.build/checkouts/bson/Sources/BSON/Types/Timestamp.swift","symbols":[1,14,31,2,15,176,3,15,177,5,23,227,9,11,101]}]}