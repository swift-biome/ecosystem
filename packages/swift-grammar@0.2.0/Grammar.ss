{"culture":"Grammar","dependencies":[],"extensions":[],"partitions":[{"namespace":"Grammar","communities":[{"community":"protocol","startIndex":0,"endIndex":12},{"community":"associatedtype","startIndex":12,"endIndex":18},{"community":"enum","startIndex":18,"endIndex":192},{"community":"struct","startIndex":192,"endIndex":201},{"community":"init","startIndex":201,"endIndex":215},{"community":"subscript","startIndex":215,"endIndex":217},{"community":"type.property","startIndex":217,"endIndex":355},{"community":"property","startIndex":355,"endIndex":376},{"community":"type.method","startIndex":376,"endIndex":428},{"community":"method","startIndex":428,"endIndex":453},{"community":"typealias","startIndex":453,"endIndex":523}]},{"namespace":"Swift","communities":[{"community":"type.method","startIndex":523,"endIndex":525},{"community":"typealias","startIndex":525,"endIndex":529}]}],"identifiers":["s7Grammar11LiteralRuleP","s7Grammar11ParsingRuleP","s7Grammar12TerminalRuleP","s7Grammar12UTF8TerminalP","s7Grammar13ASCIITerminalP","s7Grammar13UTF16TerminalP","s7Grammar14TraceableErrorP","s7Grammar15UnicodeTerminalP","s7Grammar17CharacterTerminalP","s7Grammar18ParsingDiagnosticsP","s7Grammar18TraceableErrorRootP","s7Grammar9DigitRuleP","s7Grammar11LiteralRuleP0B0Qa","s7Grammar11ParsingRuleP12ConstructionQa","s7Grammar11ParsingRuleP8LocationQa","s7Grammar11ParsingRuleP8TerminalQa","s7Grammar18ParsingDiagnosticsP10BreadcrumbQa","s7Grammar18ParsingDiagnosticsP6SourceQa","s7Grammar12UnicodeDigitO","s7Grammar12UnicodeDigitOAASzR_rlE3HexO","s7Grammar12UnicodeDigitOAASzR_rlE3HexO9LowercaseO","s7Grammar12UnicodeDigitOAASzR_rlE7DecimalO","s7Grammar12UnicodeDigitOAASzR_rlE7NaturalO","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O9LowercaseO","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07DecimalD0O","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07NaturalD0O","s7Grammar15UnicodeEncodingO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10AngleRightO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10BraceRightO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10SubstituteO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10UnderscoreO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11BracketLeftO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11DoubleQuoteO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11EndOfMediumO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11ExclamationO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11SingleQuoteO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11StartOfTextO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11VerticalTabO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE12BracketRightO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13FileSeparatorO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13HorizontalTabO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13UnitSeparatorO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14CarriageReturnO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DataLinkEscapeO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl1O","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl2O","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl3O","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl4O","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14GroupSeparatorO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14StartOfHeadingO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15AcknowledgementO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15ParenthesisLeftO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15RecordSeparatorO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15SynchronousIdleO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE16ParenthesisRightO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE17EndOfTransmissionO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO9LowercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO9UppercaseO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE22EndOfTransmissionBlockO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE23NegativeAcknowledgementO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE2AtO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3OneO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3SixO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3TwoO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4BellO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4FiveO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4FourO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4NineO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4NullO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4PipeO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4PlusO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4ZeroO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5CaretO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5ColonO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5CommaO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5EightO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SevenO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SlashO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SpaceO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5ThreeO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5TildeO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6CancelO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6DeleteO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6DollarO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6EqualsO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6EscapeO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6HyphenO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6PeriodO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7EnquiryO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7HashtagO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7NewlineO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7PercentO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7ShiftInO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8AsteriskO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8BacktickO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8FormfeedO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8LinefeedO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8QuestionO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8ShiftOutO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9AmpersandO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9AngleLeftO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BackslashO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BackspaceO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BraceLeftO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9EndOfTextO","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9SemicolonO","s7Grammar7PatternO","s7Grammar7PatternO25UnsignedNormalizedIntegerO","s7Grammar7PatternO3EndO","s7Grammar7PatternO3PadO","s7Grammar7PatternO4JoinO","s7Grammar7PatternO6ReduceO","s7Grammar7PatternO7CollectO","s7Grammar7PatternO7DiscardO","s7GrammarAAO","s7Grammar12ParsingErrorV","s7Grammar12ParsingErrorV5FrameV","s7Grammar12ParsingInputV","s7Grammar13NoDiagnosticsV","s7Grammar18DefaultDiagnosticsV","s7Grammar7PatternO16ApplicationErrorV","s7Grammar7PatternO20IntegerOverflowErrorV","s7Grammar7PatternO23ExpectedEndOfInputErrorV","s7Grammar7PatternO25UnexpectedEndOfInputErrorV","s7Grammar12ParsingErrorV2at7because5traceACyxGx_s0C0_pSayAC5FrameVyx_GGtcfc","s7Grammar12ParsingErrorV5FrameV5index4rule12constructionAEyx_Gx_ypXpypXptcfc","s7Grammar12ParsingInputVyACyxG6SourceQzcfc","s7Grammar13ASCIITerminalPyxs5UInt8Vcfc","s7Grammar13NoDiagnosticsVACyxGycfc","s7Grammar13UTF16TerminalPyxs6UInt16Vcfc","s7Grammar15UnicodeTerminalPyxs0B0O6ScalarVcfc","s7Grammar17CharacterTerminalPyxSJcfc","s7Grammar18DefaultDiagnosticsVACyxGycfc","s7Grammar18ParsingDiagnosticsPxycfc","s7Grammar7PatternO16ApplicationErrorVAEy_xGycfc","s7Grammar7PatternO20IntegerOverflowErrorVAEy_xGycfc","s7Grammar7PatternO23ExpectedEndOfInputErrorVAEycfc","s7Grammar7PatternO25UnexpectedEndOfInputErrorVAEycfc","s7Grammar12ParsingInputVy6Source_11SubSequenceQZqd__cSXRd__AD_5IndexQZ5BoundRtd__luip","s7Grammar12ParsingInputVy6Source_7ElementQZAD_5IndexQZcip","s7Grammar11LiteralRuleP7literal0B0QzvpZ","s7Grammar12ParsingErrorV9namespaceSSvpZ","s7Grammar12UnicodeDigitOAASzR_rlE3HexO5radixq0_vpZ","s7Grammar12UnicodeDigitOAASzR_rlE3HexO9LowercaseO5radixq0_vpZ","s7Grammar12UnicodeDigitOAASzR_rlE7DecimalO5radixq0_vpZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O5radixq0_vpZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O9LowercaseO5radixq0_vpZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07DecimalD0O5radixq0_vpZ","s7Grammar14TraceableErrorP9namespaceSSvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10AngleRightO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10BraceRightO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10SubstituteO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE10UnderscoreO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11BracketLeftO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11DoubleQuoteO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11EndOfMediumO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11ExclamationO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11SingleQuoteO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11StartOfTextO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE11VerticalTabO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE12BracketRightO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13FileSeparatorO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13HorizontalTabO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13UnitSeparatorO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14CarriageReturnO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DataLinkEscapeO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl1O7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl2O7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl3O7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14DeviceControl4O7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14GroupSeparatorO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE14StartOfHeadingO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15AcknowledgementO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15ParenthesisLeftO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15RecordSeparatorO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE15SynchronousIdleO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE16ParenthesisRightO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE17EndOfTransmissionO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO9UppercaseO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE22EndOfTransmissionBlockO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE23NegativeAcknowledgementO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE2AtO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3OneO7literals012CollectionOfE0Vyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3SixO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3TwoO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4BellO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4FiveO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4FourO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4NineO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4NullO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4PipeO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4PlusO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE4ZeroO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5CaretO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5ColonO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5CommaO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5EightO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SevenO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SlashO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5SpaceO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5ThreeO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5TildeO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6CancelO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6DeleteO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6DollarO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6EqualsO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6EscapeO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6HyphenO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE6PeriodO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7EnquiryO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7HashtagO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7PercentO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7ShiftInO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8AsteriskO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8BacktickO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8FormfeedO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8LinefeedO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8QuestionO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE8ShiftOutO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9AmpersandO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9AngleLeftO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BackslashO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BackspaceO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9BraceLeftO7literals15CollectionOfOneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9EndOfTextO7literals010CollectionF3OneVyq_GvpZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE9SemicolonO7literals15CollectionOfOneVyq_GvpZ","s7Grammar9DigitRuleP5radix12ConstructionQzvpZ","s7Grammar12ParsingErrorV4nexts0C0_pSgvp","s7Grammar12ParsingErrorV5FrameV12constructionypXpvp","s7Grammar12ParsingErrorV5FrameV4ruleypXpvp","s7Grammar12ParsingErrorV5FrameV5indexxvp","s7Grammar12ParsingErrorV5indexxvp","s7Grammar12ParsingErrorV5traceSayAC5FrameVyx_GGvp","s7Grammar12ParsingErrorV7contextSaySSGvp","s7Grammar12ParsingErrorV7problems0C0_pvp","s7Grammar12ParsingInputV11diagnosticsxvp","s7Grammar12ParsingInputV5index6Source_5IndexQZvp","s7Grammar12ParsingInputV6source6SourceQzvp","s7Grammar14TraceableErrorP4nexts0C0_pSgvp","s7Grammar14TraceableErrorP7contextSaySSGvp","s7Grammar14TraceableErrorPAAE11descriptionSSvp","s7Grammar18DefaultDiagnosticsV5stackSayAA12ParsingErrorV5FrameVy5IndexQz_GGvp","s7Grammar18DefaultDiagnosticsV8frontierAA12ParsingErrorVy5IndexQzGSgvp","s7Grammar18TraceableErrorRootP7messageSSvp","s7Grammar18TraceableErrorRootPAAE4nexts0C0_pSgvp","s7Grammar18TraceableErrorRootPAAE7contextSaySSGvp","s7Grammar7PatternO16ApplicationErrorV11descriptionSSvp","s7Grammar7PatternO20IntegerOverflowErrorV11descriptionSSvp","s7Grammar11LiteralRulePAAE5parseyyAA12ParsingInputVyqd__GzKAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAI_7ElementQYd__8TerminalRtzlFZ","s7Grammar11ParsingRuleP5parsey12ConstructionQzAA0B5InputVyqd__GzKAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","s7Grammar11ParsingRulePAAE5parse10diagnosing12ConstructionQzqd___tKSlRd__5IndexQyd__8LocationRtz7ElementQyd__8TerminalRtzlFZ","s7Grammar11ParsingRulePAAE5parse_4intoqd_0_qd___qd_0_mtKSlRd__SmRd_0_7ElementQyd_0_12ConstructionRtz5IndexQyd__8LocationRtzAFQyd__8TerminalRtzr0_lFZ","s7Grammar11ParsingRulePAAE5parsey12ConstructionQzqd__KSlRd__5IndexQyd__8LocationRtz7ElementQyd__8TerminalRtzlFZ","s7Grammar12TerminalRuleP5parse8terminal12ConstructionQzSg0B0Qz_tFZ","s7Grammar12TerminalRulePAAE5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0F11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__0B0RtzlFZ","s7Grammar12UnicodeDigitOAASzR_rlE3HexO5parse8terminalq0_Sgq__tFZ","s7Grammar12UnicodeDigitOAASzR_rlE3HexO9LowercaseO5parse8terminalq0_Sgq__tFZ","s7Grammar12UnicodeDigitOAASzR_rlE7DecimalO5parse8terminalq0_Sgq__tFZ","s7Grammar12UnicodeDigitOAASzR_rlE7NaturalO5parse8terminalq0_Sgq__tFZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O5parse8terminalq0_SgAG_tFZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O9LowercaseO5parse8terminalq0_SgAG_tFZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07DecimalD0O5parse8terminalq0_SgAG_tFZ","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07NaturalD0O5parse8terminalq0_SgAG_tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO5parse8terminalytSgq__tFZ","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE7NewlineO5parseyyAA12ParsingInputVyqd__GzK6Source_5IndexQYd__RszAK_7ElementQYd__Rs_AA0G11DiagnosticsRd__lFZ","s7Grammar7PatternO25UnsignedNormalizedIntegerO5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0H11DiagnosticsRd__6Source_5IndexQYd__8LocationRt_AM_7ElementQYd__8TerminalRt_lFZ","s7Grammar7PatternO3EndO5parseyyAA12ParsingInputVyqd__GzK6Source_5IndexQYd__RszAJ_7ElementQYd__Rs_AA0E11DiagnosticsRd__lFZ","s7Grammar7PatternO3PadO5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0F11DiagnosticsRd__6Source_5IndexQYd__8LocationRt_AM_7ElementQYd__8TerminalRt_lFZ","s7Grammar7PatternO4JoinO5parseyq0_AA12ParsingInputVyqd__GzKAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRt_AK_7ElementQYd__8TerminalRt_lFZ","s7Grammar7PatternO6ReduceO5parseyq_AA12ParsingInputVyqd__GzKAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","s7Grammar7PatternO7CollectO5parseyq_AA12ParsingInputVyqd__GzAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","s7Grammar7PatternO7DiscardO5parseyyAA12ParsingInputVyqd__GzAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","s7GrammarAAO5parse10diagnosing2as12ConstructionQy_x_q_mtKSlRzAA11ParsingRuleR_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzr0_lFZ","s7GrammarAAO5parse_2as12ConstructionQy_x_q_mtKSlRzAA11ParsingRuleR_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzr0_lFZ","s7GrammarAAO5parse_2as2inq0_x_q_mq0_mtKSlRzAA11ParsingRuleR_SmR0_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzAIQy0_12ConstructionRt_r1_lFZ","s7Grammar12ParsingErrorV8annotate6source4line7newlineSSqd___SS11SubSequenceQyd__XESb7ElementQyd__XEt5IndexQyd__RszSKRd__lF","s7Grammar12ParsingInputV4next6Source_7ElementQZSgyF","s7Grammar12ParsingInputV5groupyqd_0_qd__m_qd_0_ACyxGzKXEtKr0_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd__Sgqd__Sgm_tAA0B4RuleRd__6Source_5IndexQZ8LocationRtd__AK_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_AFQyd_4_AFQyd_5_tqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tm_tKAA0B4RuleRd__AaNRd_0_AaNRd_1_AaNRd_2_AaNRd_3_AaNRd_4_AaNRd_5_8LocationQyd_0_AORtd__8TerminalQyd_0_ARRtd__AOQyd_1_APRSARQyd_1_ASRSAOQyd_2_AURSARQyd_2_AVRSAOQyd_3_AWRSARQyd_3_AXRSAOQyd_4_AYRSARQyd_4_AZRSAOQyd_5_A_RSARQyd_5_A0_RS6Source_5IndexQZA1_RSA3__7ElementQZA2_RSr5_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_AFQyd_4_tqd___qd_0_qd_1_qd_2_qd_3_qd_4_tm_tKAA0B4RuleRd__AaMRd_0_AaMRd_1_AaMRd_2_AaMRd_3_AaMRd_4_8LocationQyd_0_ANRtd__8TerminalQyd_0_AQRtd__ANQyd_1_AORSAQQyd_1_ARRSANQyd_2_ATRSAQQyd_2_AURSANQyd_3_AVRSAQQyd_3_AWRSANQyd_4_AXRSAQQyd_4_AYRS6Source_5IndexQZAZRSA0__7ElementQZA_RSr4_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_tqd___qd_0_qd_1_qd_2_qd_3_tm_tKAA0B4RuleRd__AaLRd_0_AaLRd_1_AaLRd_2_AaLRd_3_8LocationQyd_0_AMRtd__8TerminalQyd_0_APRtd__AMQyd_1_ANRSAPQyd_1_AQRSAMQyd_2_ASRSAPQyd_2_ATRSAMQyd_3_AURSAPQyd_3_AVRS6Source_5IndexQZAWRSAY_7ElementQZAXRSr3_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_tqd___qd_0_qd_1_qd_2_tm_tKAA0B4RuleRd__AaKRd_0_AaKRd_1_AaKRd_2_8LocationQyd_0_ALRtd__8TerminalQyd_0_AORtd__ALQyd_1_AMRSAOQyd_1_APRSALQyd_2_ARRSAOQyd_2_ASRS6Source_5IndexQZATRSAV_7ElementQZAURSr2_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_tqd___qd_0_qd_1_tm_tKAA0B4RuleRd__AaJRd_0_AaJRd_1_8LocationQyd_0_AKRtd__8TerminalQyd_0_ANRtd__AKQyd_1_ALRSANQyd_1_AORS6Source_5IndexQZAQRSAS_7ElementQZARRSr1_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_tqd___qd_0_tm_tKAA0B4RuleRd__AaIRd_0_8LocationQyd_0_AJRtd__8TerminalQyd_0_AMRtd__6Source_5IndexQZAKRSAP_7ElementQZANRSr0_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd__qd__m_tKAA0B4RuleRd__6Source_5IndexQZ8LocationRtd__AI_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse2as2in6Source_11SubSequenceQZAG_7ElementQZm_AImtF","s7Grammar12ParsingInputV5parse2as2inqd_0_qd__m_qd_0_mtAA0B4RuleRd__SmRd_0_7ElementQyd_0_12ConstructionRtd__6Source_5IndexQZ8LocationRtd__AL_AHQZ8TerminalRtd__r0_lF","s7Grammar12ParsingInputV5parse2as2iny6Source_7ElementQZm_ytmtF","s7Grammar12ParsingInputV5parse2as2inyqd__m_ytmtAA0B4RuleRd__yt12ConstructionRtd__6Source_5IndexQZ8LocationRtd__AJ_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse6prefix6Source_11SubSequenceQZSi_tKF","s7Grammar13NoDiagnosticsV3popyyF","s7Grammar13NoDiagnosticsV4push5index3for2by5IndexQzAI_qd_0_mqd__mtr0_lF","s7Grammar13NoDiagnosticsV5reset5index2to7becausey5IndexQzz_AIs5Error_pztF","s7Grammar18DefaultDiagnosticsV3popyyF","s7Grammar18DefaultDiagnosticsV4push5index3for2byy5IndexQz_qd_0_mqd__mtr0_lF","s7Grammar18DefaultDiagnosticsV5reset5index2to7becausey5IndexQzz_yts5Error_pztF","s7Grammar18ParsingDiagnosticsP3popyyF","s7Grammar18ParsingDiagnosticsP4push5index3for2by10BreadcrumbQz6Source_5IndexQZ_qd_0_mqd__mtr0_lF","s7Grammar18ParsingDiagnosticsP5reset5index2to7becausey6Source_5IndexQZz_10BreadcrumbQzs5Error_pztF","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O8Terminala","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE03HexD0O9LowercaseO8Terminala","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07DecimalD0O8Terminala","s7Grammar12UnicodeDigitOAAs0B0O6ScalarVRs_rlE07NaturalD0O8Terminala","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE13StartOfHeadera","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1AO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1BO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1CO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1DO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1EO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1FO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1GO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1HO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1IO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1JO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1KO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1LO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1MO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1NO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1OO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1PO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1QO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1RO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1SO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1TO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1UO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1VO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1WO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1XO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1YO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE1ZO12Constructiona","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE3Anda","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5Minusa","s7Grammar15UnicodeEncodingOA2A13ASCIITerminalR_rlE5Quotea","s7Grammar7PatternO15UnsignedIntegera","s7Grammar7PatternO25UnsignedNormalizedIntegerO8Locationa","s7Grammar7PatternO25UnsignedNormalizedIntegerO8Terminala","s7Grammar7PatternO3PadO8Locationa","s7Grammar7PatternO3PadO8Terminala","s7Grammar7PatternO4JoinO8Locationa","s7Grammar7PatternO4JoinO8Terminala","s7Grammar7PatternO6ReduceO8Locationa","s7Grammar7PatternO6ReduceO8Terminala","s7Grammar7PatternO7CollectO8Locationa","s7Grammar7PatternO7CollectO8Terminala","s7Grammar7PatternO7DiscardO8Locationa","s7Grammar7PatternO7DiscardO8Terminala","s7GrammarAAO12DecimalDigita","s7GrammarAAO13NoDiagnosticsa","s7GrammarAAO13TerminalClassa","s7GrammarAAO14ExpectedRegiona","s7GrammarAAO14HexDigitScalara","s7GrammarAAO16TerminalSequencea","s7GrammarAAO18DecimalDigitScalara","s7GrammarAAO18DefaultDiagnosticsa","s7GrammarAAO19NaturalDecimalDigita","s7GrammarAAO20IntegerOverflowErrora","s7GrammarAAO22UnsignedIntegerLiterala","s7GrammarAAO25NaturalDecimalDigitScalara","s7GrammarAAO32UnsignedNormalizedIntegerLiterala","s7GrammarAAO3Enda","s7GrammarAAO3Pada","s7GrammarAAO4Joina","s7GrammarAAO6Reducea","s7GrammarAAO7Collecta","s7GrammarAAO7Discarda","s7GrammarAAO8Encodinga","s7GrammarAAO8Expecteda","s7GrammarAAO8HexDigita","s7GrammarAAO8Parsablea","sSa7GrammarAA11ParsingRuleRzlE5parseySay12ConstructionQzGAA0B5InputVyqd__GzAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","sSq7GrammarAA11ParsingRuleRzlE5parsey12ConstructionQzSgAA0B5InputVyqd__GzAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","sSa7GrammarAA11ParsingRuleRzlE8Locationa","sSa7GrammarAA11ParsingRuleRzlE8Terminala","sSq7GrammarAA11ParsingRuleRzlE8Locationa","sSq7GrammarAA11ParsingRuleRzlE8Terminala","s7Grammar14_NoDiagnosticsa","s7Grammar19_DefaultDiagnosticsa","sSJ","sSK","sSL1goiySbx_xtFZ","sSL1loiySbx_xtFZ","sSL2geoiySbx_xtFZ","sSL2leoiySbx_xtFZ","sSLsE1goiySbx_xtFZ","sSLsE2geoiySbx_xtFZ","sSLsE2leoiySbx_xtFZ","sSLsE3zzloiySnyxGx_xtFZ","sSLsE3zzlopys16PartialRangeUpToVyxGxFZ","sSLsE3zzzoPys16PartialRangeFromVyxGxFZ","sSLsE3zzzoiySNyxGx_xtFZ","sSLsE3zzzopys19PartialRangeThroughVyxGxFZ","sSQ","sSQ2eeoiySbx_xtFZ","sSS","sST","sSUsE8isSignedSbvpZ","sSUsE9magnitudexvp","sSUss17FixedWidthIntegerRzrlE3maxxvpZ","sSUss17FixedWidthIntegerRzrlE3minxvpZ","sSUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc","sSUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc","sSX","sSa","sSb","sSi","sSl","sSm","sSq","sSxsE1loiySbx_xtFZ","sSxsE2eeoiySbx_xtFZ","sSz","sSz10isMultiple2ofSbx_tF","sSz12_RegexParserE9assertingxqd___tcSzRd__lufc","sSz3ggeoiyyxz_qd__tSzRd__lFZ","sSz3lleoiyyxz_qd__tSzRd__lFZ","sSzsE10isMultiple2ofSbx_tF","sSzsE11descriptionSSvp","sSzsE1aoiyxx_xtFZ","sSzsE1goiySbx_qd__tSzRd__lFZ","sSzsE1goiySbx_xtFZ","sSzsE1loiySbx_qd__tSzRd__lFZ","sSzsE1ooiyxx_xtFZ","sSzsE1xoiyxx_xtFZ","sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF","sSzsE2eeoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_xtFZ","sSzsE2ggoiyxx_qd__tSzRd__lFZ","sSzsE2leoiySbx_qd__tSzRd__lFZ","sSzsE2leoiySbx_xtFZ","sSzsE2lloiyxx_qd__tSzRd__lFZ","sSzsE2neoiySbx_qd__tSzRd__lFZ","sSzsE2neoiySbx_xtFZ","sSzsE8advanced2byxSi_tF","sSzsE8distance2toSix_tF","sSzsExycfc","ss15CollectionOfOneV","ss17FixedWidthIntegerP","ss17FixedWidthIntegerPsE03bitB0Sivp","ss17FixedWidthIntegerPsE12littleEndianxvp","ss17FixedWidthIntegerPsE12littleEndianxx_tcfc","ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE1topyxxFZ","ss17FixedWidthIntegerPsE2amoiyxx_xtFZ","ss17FixedWidthIntegerPsE2apoiyxx_xtFZ","ss17FixedWidthIntegerPsE2asoiyxx_xtFZ","ss17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_xtFZ","ss17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3alloiyxx_xtFZ","ss17FixedWidthIntegerPsE3ameoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3apeoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3aseoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2inxSNyxG_tFZ","ss17FixedWidthIntegerPsE6random2inxSnyxG_tFZ","ss17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc","ss17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE9bigEndianxvp","ss17FixedWidthIntegerPsE9bigEndianxx_tcfc","ss17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc","ss17FixedWidthIntegerPsEyxSgSScfc","ss17FixedWidthIntegerPsEyxqd__cSBRd__lufc","ss18AdditiveArithmeticP2peoiyyxz_xtFZ","ss18AdditiveArithmeticP2seoiyyxz_xtFZ","ss18AdditiveArithmeticPsE1popyxxFZ","ss18AdditiveArithmeticPsE2peoiyyxz_xtFZ","ss18AdditiveArithmeticPsE2seoiyyxz_xtFZ","ss18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc","ss27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc","ss4Voida","ss5ErrorP","ss5NeverO","ss5UInt8V","ss6UInt16V","ss7UnicodeO","ss7UnicodeO6ScalarV","ss8SendableP"],"vertices":[{"p":["LiteralRule"],"f":[["protocol",12],[" ",17],["LiteralRule",7],["<",17],["Terminal",18],["> : ",17],["ParsingRule",18,1],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Construction",18],[" == (), ",17],["Self",18],[".",17],["Terminal",18],[" : ",17],["Equatable",18,545]],"s":[["protocol",12],[" ",17],["LiteralRule",7]],"d":"A parsing rule that matches terminals against a constant ``Sequence``."},{"p":["ParsingRule"],"f":[["protocol",12],[" ",17],["ParsingRule",7],["<",17],["Terminal",18],[">",17]],"s":[["protocol",12],[" ",17],["ParsingRule",7]],"d":"A structured parsing rule."},{"p":["TerminalRule"],"f":[["protocol",12],[" ",17],["TerminalRule",7],["<",17],["Terminal",18],[", ",17],["Construction",18],["> : ",17],["ParsingRule",18,1]],"s":[["protocol",12],[" ",17],["TerminalRule",7]],"d":"A parsing rule that is applied to a single terminal at a time."},{"p":["UTF8Terminal"],"f":[["protocol",12],[" ",17],["UTF8Terminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UTF8Terminal",7]],"d":"A terminal type that can match a UTF-8 code unit pattern.\n\nFor example, a ``Unicode//UTF8/CodeUnit`` can match the UTF-8 \ncontinuation byte [`0x80`](), but it would not make sense to \nmatch it against a ``Unicode//UTF16/CodeUnit``."},{"p":["ASCIITerminal"],"f":[["protocol",12],[" ",17],["ASCIITerminal",7],[" : ",17],["Equatable",18,545]],"s":[["protocol",12],[" ",17],["ASCIITerminal",7]],"d":"A terminal type that can match an ASCII pattern.\n\nFor example, both a UTF-16 ``Unicode/UTF16//CodeUnit`` and a UTF-8 \n``Unicode/UTF8//CodeUnit`` can be matched against the terminal \n``UnicodeEncoding//A``."},{"p":["UTF16Terminal"],"f":[["protocol",12],[" ",17],["UTF16Terminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UTF16Terminal",7]],"d":"A terminal type that can match a UTF-16 code unit pattern."},{"p":["TraceableError"],"f":[["protocol",12],[" ",17],["TraceableError",7],[" : ",17],["CustomStringConvertible",18,630],[", ",17],["Error",18,636]],"s":[["protocol",12],[" ",17],["TraceableError",7]],"d":"A link in a propogated error."},{"p":["UnicodeTerminal"],"f":[["protocol",12],[" ",17],["UnicodeTerminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UnicodeTerminal",7]],"d":"A terminal type that can match a ``Unicode/Scalar`` pattern."},{"p":["CharacterTerminal"],"f":[["protocol",12],[" ",17],["CharacterTerminal",7],[" : ",17],["UnicodeTerminal",18,7]],"s":[["protocol",12],[" ",17],["CharacterTerminal",7]],"d":"A terminal type that can match a ``Character`` pattern."},{"p":["ParsingDiagnostics"],"f":[["protocol",12],[" ",17],["ParsingDiagnostics",7],["<",17],["Source",18],[">",17]],"s":[["protocol",12],[" ",17],["ParsingDiagnostics",7]],"d":"An abstract interface used by ``ParsingInput`` to emit (or not emit) debugging \ninformation to."},{"p":["TraceableErrorRoot"],"f":[["protocol",12],[" ",17],["TraceableErrorRoot",7],[" : ",17],["TraceableError",18,6]],"s":[["protocol",12],[" ",17],["TraceableErrorRoot",7]],"d":"The root of a propogated error."},{"p":["DigitRule"],"f":[["protocol",12],[" ",17],["DigitRule",7],["<",17],["Terminal",18],[", ",17],["Construction",18],["> : ",17],["TerminalRule",18,2],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["protocol",12],[" ",17],["DigitRule",7]],"d":"A parsing rule that is applied to a single terminal at a time, and produces \nsome ``BinaryInteger`` as its output."},{"p":["LiteralRule","Literal"],"f":[["associatedtype",12],[" ",17],["Literal",7],[" : ",17],["Sequence",18,548],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Self",18],[".",17],["Literal",18],[".",17],["Element",18]],"s":[["associatedtype",12],[" ",17],["Literal",7],[" : ",17],["Sequence",18]]},{"p":["ParsingRule","Construction"],"f":[["associatedtype",12],[" ",17],["Construction",7]],"s":[["associatedtype",12],[" ",17],["Construction",7]],"d":"The type of the constructions produced by a successful application of this \nparsing rule.\n\nImplementations should not report failure through an ``Optional`` \nconstruction type. Instead, implementations should [`throw`]() an ``Error``, \nwhich allows the library to perform appropriate cleanup and backtracking."},{"p":["ParsingRule","Location"],"f":[["associatedtype",12],[" ",17],["Location",7]],"s":[["associatedtype",12],[" ",17],["Location",7]],"d":"The index type of the ``ParsingInput.source`` this rule expects.\n\nParsing rules must be associated with a source location type because \nsome applications may wish to store these indices in the returned \n``Construction``s. If the source location type were not fixed, then \ndifferent calls to ``parse(_:)`` could potentially return constructions\nof varying types, which would require additional abstraction, which would \nbe inefficient.\n\n>   Tip: \n    Implementations can satisfy this requirement with generics, allowing \n    parsing rules to be reused for different input types. "},{"p":["ParsingRule","Terminal"],"f":[["associatedtype",12],[" ",17],["Terminal",7]],"s":[["associatedtype",12],[" ",17],["Terminal",7]],"d":"The element type of the ``ParsingInput.source`` this rule expects."},{"p":["ParsingDiagnostics","Breadcrumb"],"f":[["associatedtype",12],[" ",17],["Breadcrumb",7]],"s":[["associatedtype",12],[" ",17],["Breadcrumb",7]]},{"p":["ParsingDiagnostics","Source"],"f":[["associatedtype",12],[" ",17],["Source",7],[" : ",17],["Collection",18,559]],"s":[["associatedtype",12],[" ",17],["Source",7],[" : ",17],["Collection",18]]},{"p":["UnicodeDigit"],"f":[["enum",12],[" ",17],["UnicodeDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["enum",12],[" ",17],["UnicodeDigit",7]],"c":[["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"A generic context for unicode digit rules."},{"p":["UnicodeDigit","Hex"],"f":[["enum",12],[" ",17],["Hex",7]],"s":[["enum",12],[" ",17],["Hex",7]],"e":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a hexadecimal digit, without case-sensitivity, \nand returns its numeric value."},{"p":["UnicodeDigit","Hex","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a lowercase hexadecimal digit, and returns its numeric value."},{"p":["UnicodeDigit","Decimal"],"f":[["enum",12],[" ",17],["Decimal",7]],"s":[["enum",12],[" ",17],["Decimal",7]],"e":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a decimal digit, `'0'` through `'9'` ([`0x30 ... 0x39`]()),\nand returns its numeric value."},{"p":["UnicodeDigit","Natural"],"f":[["enum",12],[" ",17],["Natural",7]],"s":[["enum",12],[" ",17],["Natural",7]],"e":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a natural digit, `'1'` through `'9'` ([`0x31 ... 0x39`]()),\nand returns its numeric value."},{"p":["UnicodeDigit","HexScalar"],"f":[["enum",12],[" ",17],["HexScalar",7]],"s":[["enum",12],[" ",17],["HexScalar",7]],"e":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a hexdecimal digit, without case-sensitivity, and returns its numeric value."},{"p":["UnicodeDigit","HexScalar","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a lowercase hexdecimal digit and returns its numeric value."},{"p":["UnicodeDigit","DecimalScalar"],"f":[["enum",12],[" ",17],["DecimalScalar",7]],"s":[["enum",12],[" ",17],["DecimalScalar",7]],"e":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a decimal digit, [`\"0\" ... \"9\"`](), and returns its numeric value."},{"p":["UnicodeDigit","NaturalScalar"],"f":[["enum",12],[" ",17],["NaturalScalar",7]],"s":[["enum",12],[" ",17],["NaturalScalar",7]],"e":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"d":"Matches a natural digit, [`\"1\" ... \"9\"`](), and returns its numeric value."},{"p":["UnicodeEncoding"],"f":[["enum",12],[" ",17],["UnicodeEncoding",7],["<",17],["Location",0],[", ",17],["Terminal",0],[">",17]],"s":[["enum",12],[" ",17],["UnicodeEncoding",7]],"g":[["Location",0,0],["Terminal",1,0]],"d":"A generic context for unicode definitions."},{"p":["UnicodeEncoding","AngleRight"],"f":[["enum",12],[" ",17],["AngleRight",7]],"s":[["enum",12],[" ",17],["AngleRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `AngleRight` character."},{"p":["UnicodeEncoding","BraceRight"],"f":[["enum",12],[" ",17],["BraceRight",7]],"s":[["enum",12],[" ",17],["BraceRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x7d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `BraceRight` character."},{"p":["UnicodeEncoding","Substitute"],"f":[["enum",12],[" ",17],["Substitute",7]],"s":[["enum",12],[" ",17],["Substitute",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1a`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Substitute` character."},{"p":["UnicodeEncoding","Underscore"],"f":[["enum",12],[" ",17],["Underscore",7]],"s":[["enum",12],[" ",17],["Underscore",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x5f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Underscore` character."},{"p":["UnicodeEncoding","BracketLeft"],"f":[["enum",12],[" ",17],["BracketLeft",7]],"s":[["enum",12],[" ",17],["BracketLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x5b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `BracketLeft` character."},{"p":["UnicodeEncoding","DoubleQuote"],"f":[["enum",12],[" ",17],["DoubleQuote",7]],"s":[["enum",12],[" ",17],["DoubleQuote",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x22`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DoubleQuote` character."},{"p":["UnicodeEncoding","EndOfMedium"],"f":[["enum",12],[" ",17],["EndOfMedium",7]],"s":[["enum",12],[" ",17],["EndOfMedium",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x19`]().\n\nAll ``ASCIITerminal`` types can match a(n) `EndOfMedium` character."},{"p":["UnicodeEncoding","Exclamation"],"f":[["enum",12],[" ",17],["Exclamation",7]],"s":[["enum",12],[" ",17],["Exclamation",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x21`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Exclamation` character."},{"p":["UnicodeEncoding","SingleQuote"],"f":[["enum",12],[" ",17],["SingleQuote",7]],"s":[["enum",12],[" ",17],["SingleQuote",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x27`]().\n\nAll ``ASCIITerminal`` types can match a(n) `SingleQuote` character."},{"p":["UnicodeEncoding","StartOfText"],"f":[["enum",12],[" ",17],["StartOfText",7]],"s":[["enum",12],[" ",17],["StartOfText",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x02`]().\n\nAll ``ASCIITerminal`` types can match a(n) `StartOfText` character."},{"p":["UnicodeEncoding","VerticalTab"],"f":[["enum",12],[" ",17],["VerticalTab",7]],"s":[["enum",12],[" ",17],["VerticalTab",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `VerticalTab` character."},{"p":["UnicodeEncoding","BracketRight"],"f":[["enum",12],[" ",17],["BracketRight",7]],"s":[["enum",12],[" ",17],["BracketRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x5d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `BracketRight` character."},{"p":["UnicodeEncoding","FileSeparator"],"f":[["enum",12],[" ",17],["FileSeparator",7]],"s":[["enum",12],[" ",17],["FileSeparator",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `FileSeparator` character."},{"p":["UnicodeEncoding","HorizontalTab"],"f":[["enum",12],[" ",17],["HorizontalTab",7]],"s":[["enum",12],[" ",17],["HorizontalTab",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x09`]().\n\nAll ``ASCIITerminal`` types can match a(n) `HorizontalTab` character."},{"p":["UnicodeEncoding","UnitSeparator"],"f":[["enum",12],[" ",17],["UnitSeparator",7]],"s":[["enum",12],[" ",17],["UnitSeparator",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `UnitSeparator` character."},{"p":["UnicodeEncoding","CarriageReturn"],"f":[["enum",12],[" ",17],["CarriageReturn",7]],"s":[["enum",12],[" ",17],["CarriageReturn",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `CarriageReturn` character."},{"p":["UnicodeEncoding","DataLinkEscape"],"f":[["enum",12],[" ",17],["DataLinkEscape",7]],"s":[["enum",12],[" ",17],["DataLinkEscape",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x10`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DataLinkEscape` character."},{"p":["UnicodeEncoding","DeviceControl1"],"f":[["enum",12],[" ",17],["DeviceControl1",7]],"s":[["enum",12],[" ",17],["DeviceControl1",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x11`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DeviceControl1` character."},{"p":["UnicodeEncoding","DeviceControl2"],"f":[["enum",12],[" ",17],["DeviceControl2",7]],"s":[["enum",12],[" ",17],["DeviceControl2",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x12`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DeviceControl2` character."},{"p":["UnicodeEncoding","DeviceControl3"],"f":[["enum",12],[" ",17],["DeviceControl3",7]],"s":[["enum",12],[" ",17],["DeviceControl3",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x13`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DeviceControl3` character."},{"p":["UnicodeEncoding","DeviceControl4"],"f":[["enum",12],[" ",17],["DeviceControl4",7]],"s":[["enum",12],[" ",17],["DeviceControl4",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x14`]().\n\nAll ``ASCIITerminal`` types can match a(n) `DeviceControl4` character."},{"p":["UnicodeEncoding","GroupSeparator"],"f":[["enum",12],[" ",17],["GroupSeparator",7]],"s":[["enum",12],[" ",17],["GroupSeparator",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `GroupSeparator` character."},{"p":["UnicodeEncoding","StartOfHeading"],"f":[["enum",12],[" ",17],["StartOfHeading",7]],"s":[["enum",12],[" ",17],["StartOfHeading",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x01`]().\n\nAll ``ASCIITerminal`` types can match a(n) `StartOfHeading` character."},{"p":["UnicodeEncoding","Acknowledgement"],"f":[["enum",12],[" ",17],["Acknowledgement",7]],"s":[["enum",12],[" ",17],["Acknowledgement",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x06`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Acknowledgement` character."},{"p":["UnicodeEncoding","ParenthesisLeft"],"f":[["enum",12],[" ",17],["ParenthesisLeft",7]],"s":[["enum",12],[" ",17],["ParenthesisLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x28`]().\n\nAll ``ASCIITerminal`` types can match a(n) `ParenthesisLeft` character."},{"p":["UnicodeEncoding","RecordSeparator"],"f":[["enum",12],[" ",17],["RecordSeparator",7]],"s":[["enum",12],[" ",17],["RecordSeparator",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `RecordSeparator` character."},{"p":["UnicodeEncoding","SynchronousIdle"],"f":[["enum",12],[" ",17],["SynchronousIdle",7]],"s":[["enum",12],[" ",17],["SynchronousIdle",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x16`]().\n\nAll ``ASCIITerminal`` types can match a(n) `SynchronousIdle` character."},{"p":["UnicodeEncoding","ParenthesisRight"],"f":[["enum",12],[" ",17],["ParenthesisRight",7]],"s":[["enum",12],[" ",17],["ParenthesisRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x29`]().\n\nAll ``ASCIITerminal`` types can match a(n) `ParenthesisRight` character."},{"p":["UnicodeEncoding","EndOfTransmission"],"f":[["enum",12],[" ",17],["EndOfTransmission",7]],"s":[["enum",12],[" ",17],["EndOfTransmission",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x04`]().\n\nAll ``ASCIITerminal`` types can match a(n) `EndOfTransmission` character."},{"p":["UnicodeEncoding","A"],"f":[["enum",12],[" ",17],["A",7]],"s":[["enum",12],[" ",17],["A",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'A'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'A'`.\nThe two valid codepoint values are [`0x41`]() (`'A'`) \nand [`0x61`]() (`'a'`).\n\nTo match `'A'` or `'a'` exactly, use the \n``UnicodeEncoding//A/Uppercase`` or \n``UnicodeEncoding//A/Lowercase`` rules."},{"p":["UnicodeEncoding","A","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'a'`.\n\nAll ``ASCIITerminal`` types can match the letter `'a'` \n([`0x61`]())."},{"p":["UnicodeEncoding","A","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'A'`.\n\nAll ``ASCIITerminal`` types can match the letter `'A'` \n([`0x41`]())."},{"p":["UnicodeEncoding","B"],"f":[["enum",12],[" ",17],["B",7]],"s":[["enum",12],[" ",17],["B",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'B'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'B'`.\nThe two valid codepoint values are [`0x42`]() (`'B'`) \nand [`0x62`]() (`'b'`).\n\nTo match `'B'` or `'b'` exactly, use the \n``UnicodeEncoding//B/Uppercase`` or \n``UnicodeEncoding//B/Lowercase`` rules."},{"p":["UnicodeEncoding","B","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'b'`.\n\nAll ``ASCIITerminal`` types can match the letter `'b'` \n([`0x62`]())."},{"p":["UnicodeEncoding","B","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'B'`.\n\nAll ``ASCIITerminal`` types can match the letter `'B'` \n([`0x42`]())."},{"p":["UnicodeEncoding","C"],"f":[["enum",12],[" ",17],["C",7]],"s":[["enum",12],[" ",17],["C",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'C'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'C'`.\nThe two valid codepoint values are [`0x43`]() (`'C'`) \nand [`0x63`]() (`'c'`).\n\nTo match `'C'` or `'c'` exactly, use the \n``UnicodeEncoding//C/Uppercase`` or \n``UnicodeEncoding//C/Lowercase`` rules."},{"p":["UnicodeEncoding","C","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'c'`.\n\nAll ``ASCIITerminal`` types can match the letter `'c'` \n([`0x63`]())."},{"p":["UnicodeEncoding","C","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'C'`.\n\nAll ``ASCIITerminal`` types can match the letter `'C'` \n([`0x43`]())."},{"p":["UnicodeEncoding","D"],"f":[["enum",12],[" ",17],["D",7]],"s":[["enum",12],[" ",17],["D",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'D'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'D'`.\nThe two valid codepoint values are [`0x44`]() (`'D'`) \nand [`0x64`]() (`'d'`).\n\nTo match `'D'` or `'d'` exactly, use the \n``UnicodeEncoding//D/Uppercase`` or \n``UnicodeEncoding//D/Lowercase`` rules."},{"p":["UnicodeEncoding","D","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'d'`.\n\nAll ``ASCIITerminal`` types can match the letter `'d'` \n([`0x64`]())."},{"p":["UnicodeEncoding","D","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'D'`.\n\nAll ``ASCIITerminal`` types can match the letter `'D'` \n([`0x44`]())."},{"p":["UnicodeEncoding","E"],"f":[["enum",12],[" ",17],["E",7]],"s":[["enum",12],[" ",17],["E",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'E'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'E'`.\nThe two valid codepoint values are [`0x45`]() (`'E'`) \nand [`0x65`]() (`'e'`).\n\nTo match `'E'` or `'e'` exactly, use the \n``UnicodeEncoding//E/Uppercase`` or \n``UnicodeEncoding//E/Lowercase`` rules."},{"p":["UnicodeEncoding","E","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'e'`.\n\nAll ``ASCIITerminal`` types can match the letter `'e'` \n([`0x65`]())."},{"p":["UnicodeEncoding","E","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'E'`.\n\nAll ``ASCIITerminal`` types can match the letter `'E'` \n([`0x45`]())."},{"p":["UnicodeEncoding","F"],"f":[["enum",12],[" ",17],["F",7]],"s":[["enum",12],[" ",17],["F",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'F'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'F'`.\nThe two valid codepoint values are [`0x46`]() (`'F'`) \nand [`0x66`]() (`'f'`).\n\nTo match `'F'` or `'f'` exactly, use the \n``UnicodeEncoding//F/Uppercase`` or \n``UnicodeEncoding//F/Lowercase`` rules."},{"p":["UnicodeEncoding","F","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'f'`.\n\nAll ``ASCIITerminal`` types can match the letter `'f'` \n([`0x66`]())."},{"p":["UnicodeEncoding","F","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'F'`.\n\nAll ``ASCIITerminal`` types can match the letter `'F'` \n([`0x46`]())."},{"p":["UnicodeEncoding","G"],"f":[["enum",12],[" ",17],["G",7]],"s":[["enum",12],[" ",17],["G",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'G'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'G'`.\nThe two valid codepoint values are [`0x47`]() (`'G'`) \nand [`0x67`]() (`'g'`).\n\nTo match `'G'` or `'g'` exactly, use the \n``UnicodeEncoding//G/Uppercase`` or \n``UnicodeEncoding//G/Lowercase`` rules."},{"p":["UnicodeEncoding","G","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'g'`.\n\nAll ``ASCIITerminal`` types can match the letter `'g'` \n([`0x67`]())."},{"p":["UnicodeEncoding","G","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'G'`.\n\nAll ``ASCIITerminal`` types can match the letter `'G'` \n([`0x47`]())."},{"p":["UnicodeEncoding","H"],"f":[["enum",12],[" ",17],["H",7]],"s":[["enum",12],[" ",17],["H",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'H'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'H'`.\nThe two valid codepoint values are [`0x48`]() (`'H'`) \nand [`0x68`]() (`'h'`).\n\nTo match `'H'` or `'h'` exactly, use the \n``UnicodeEncoding//H/Uppercase`` or \n``UnicodeEncoding//H/Lowercase`` rules."},{"p":["UnicodeEncoding","H","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'h'`.\n\nAll ``ASCIITerminal`` types can match the letter `'h'` \n([`0x68`]())."},{"p":["UnicodeEncoding","H","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'H'`.\n\nAll ``ASCIITerminal`` types can match the letter `'H'` \n([`0x48`]())."},{"p":["UnicodeEncoding","I"],"f":[["enum",12],[" ",17],["I",7]],"s":[["enum",12],[" ",17],["I",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'I'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'I'`.\nThe two valid codepoint values are [`0x49`]() (`'I'`) \nand [`0x69`]() (`'i'`).\n\nTo match `'I'` or `'i'` exactly, use the \n``UnicodeEncoding//I/Uppercase`` or \n``UnicodeEncoding//I/Lowercase`` rules."},{"p":["UnicodeEncoding","I","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'i'`.\n\nAll ``ASCIITerminal`` types can match the letter `'i'` \n([`0x69`]())."},{"p":["UnicodeEncoding","I","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'I'`.\n\nAll ``ASCIITerminal`` types can match the letter `'I'` \n([`0x49`]())."},{"p":["UnicodeEncoding","J"],"f":[["enum",12],[" ",17],["J",7]],"s":[["enum",12],[" ",17],["J",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'J'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'J'`.\nThe two valid codepoint values are [`0x4a`]() (`'J'`) \nand [`0x6a`]() (`'j'`).\n\nTo match `'J'` or `'j'` exactly, use the \n``UnicodeEncoding//J/Uppercase`` or \n``UnicodeEncoding//J/Lowercase`` rules."},{"p":["UnicodeEncoding","J","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'j'`.\n\nAll ``ASCIITerminal`` types can match the letter `'j'` \n([`0x6a`]())."},{"p":["UnicodeEncoding","J","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'J'`.\n\nAll ``ASCIITerminal`` types can match the letter `'J'` \n([`0x4a`]())."},{"p":["UnicodeEncoding","K"],"f":[["enum",12],[" ",17],["K",7]],"s":[["enum",12],[" ",17],["K",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'K'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'K'`.\nThe two valid codepoint values are [`0x4b`]() (`'K'`) \nand [`0x6b`]() (`'k'`).\n\nTo match `'K'` or `'k'` exactly, use the \n``UnicodeEncoding//K/Uppercase`` or \n``UnicodeEncoding//K/Lowercase`` rules."},{"p":["UnicodeEncoding","K","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'k'`.\n\nAll ``ASCIITerminal`` types can match the letter `'k'` \n([`0x6b`]())."},{"p":["UnicodeEncoding","K","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'K'`.\n\nAll ``ASCIITerminal`` types can match the letter `'K'` \n([`0x4b`]())."},{"p":["UnicodeEncoding","L"],"f":[["enum",12],[" ",17],["L",7]],"s":[["enum",12],[" ",17],["L",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'L'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'L'`.\nThe two valid codepoint values are [`0x4c`]() (`'L'`) \nand [`0x6c`]() (`'l'`).\n\nTo match `'L'` or `'l'` exactly, use the \n``UnicodeEncoding//L/Uppercase`` or \n``UnicodeEncoding//L/Lowercase`` rules."},{"p":["UnicodeEncoding","L","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'l'`.\n\nAll ``ASCIITerminal`` types can match the letter `'l'` \n([`0x6c`]())."},{"p":["UnicodeEncoding","L","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'L'`.\n\nAll ``ASCIITerminal`` types can match the letter `'L'` \n([`0x4c`]())."},{"p":["UnicodeEncoding","M"],"f":[["enum",12],[" ",17],["M",7]],"s":[["enum",12],[" ",17],["M",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'M'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'M'`.\nThe two valid codepoint values are [`0x4d`]() (`'M'`) \nand [`0x6d`]() (`'m'`).\n\nTo match `'M'` or `'m'` exactly, use the \n``UnicodeEncoding//M/Uppercase`` or \n``UnicodeEncoding//M/Lowercase`` rules."},{"p":["UnicodeEncoding","M","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'m'`.\n\nAll ``ASCIITerminal`` types can match the letter `'m'` \n([`0x6d`]())."},{"p":["UnicodeEncoding","M","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'M'`.\n\nAll ``ASCIITerminal`` types can match the letter `'M'` \n([`0x4d`]())."},{"p":["UnicodeEncoding","N"],"f":[["enum",12],[" ",17],["N",7]],"s":[["enum",12],[" ",17],["N",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'N'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'N'`.\nThe two valid codepoint values are [`0x4e`]() (`'N'`) \nand [`0x6e`]() (`'n'`).\n\nTo match `'N'` or `'n'` exactly, use the \n``UnicodeEncoding//N/Uppercase`` or \n``UnicodeEncoding//N/Lowercase`` rules."},{"p":["UnicodeEncoding","N","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'n'`.\n\nAll ``ASCIITerminal`` types can match the letter `'n'` \n([`0x6e`]())."},{"p":["UnicodeEncoding","N","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'N'`.\n\nAll ``ASCIITerminal`` types can match the letter `'N'` \n([`0x4e`]())."},{"p":["UnicodeEncoding","O"],"f":[["enum",12],[" ",17],["O",7]],"s":[["enum",12],[" ",17],["O",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'O'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'O'`.\nThe two valid codepoint values are [`0x4f`]() (`'O'`) \nand [`0x6f`]() (`'o'`).\n\nTo match `'O'` or `'o'` exactly, use the \n``UnicodeEncoding//O/Uppercase`` or \n``UnicodeEncoding//O/Lowercase`` rules."},{"p":["UnicodeEncoding","O","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'o'`.\n\nAll ``ASCIITerminal`` types can match the letter `'o'` \n([`0x6f`]())."},{"p":["UnicodeEncoding","O","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'O'`.\n\nAll ``ASCIITerminal`` types can match the letter `'O'` \n([`0x4f`]())."},{"p":["UnicodeEncoding","P"],"f":[["enum",12],[" ",17],["P",7]],"s":[["enum",12],[" ",17],["P",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'P'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'P'`.\nThe two valid codepoint values are [`0x50`]() (`'P'`) \nand [`0x70`]() (`'p'`).\n\nTo match `'P'` or `'p'` exactly, use the \n``UnicodeEncoding//P/Uppercase`` or \n``UnicodeEncoding//P/Lowercase`` rules."},{"p":["UnicodeEncoding","P","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'p'`.\n\nAll ``ASCIITerminal`` types can match the letter `'p'` \n([`0x70`]())."},{"p":["UnicodeEncoding","P","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'P'`.\n\nAll ``ASCIITerminal`` types can match the letter `'P'` \n([`0x50`]())."},{"p":["UnicodeEncoding","Q"],"f":[["enum",12],[" ",17],["Q",7]],"s":[["enum",12],[" ",17],["Q",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'Q'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'Q'`.\nThe two valid codepoint values are [`0x51`]() (`'Q'`) \nand [`0x71`]() (`'q'`).\n\nTo match `'Q'` or `'q'` exactly, use the \n``UnicodeEncoding//Q/Uppercase`` or \n``UnicodeEncoding//Q/Lowercase`` rules."},{"p":["UnicodeEncoding","Q","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'q'`.\n\nAll ``ASCIITerminal`` types can match the letter `'q'` \n([`0x71`]())."},{"p":["UnicodeEncoding","Q","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'Q'`.\n\nAll ``ASCIITerminal`` types can match the letter `'Q'` \n([`0x51`]())."},{"p":["UnicodeEncoding","R"],"f":[["enum",12],[" ",17],["R",7]],"s":[["enum",12],[" ",17],["R",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'R'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'R'`.\nThe two valid codepoint values are [`0x52`]() (`'R'`) \nand [`0x72`]() (`'r'`).\n\nTo match `'R'` or `'r'` exactly, use the \n``UnicodeEncoding//R/Uppercase`` or \n``UnicodeEncoding//R/Lowercase`` rules."},{"p":["UnicodeEncoding","R","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'r'`.\n\nAll ``ASCIITerminal`` types can match the letter `'r'` \n([`0x72`]())."},{"p":["UnicodeEncoding","R","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'R'`.\n\nAll ``ASCIITerminal`` types can match the letter `'R'` \n([`0x52`]())."},{"p":["UnicodeEncoding","S"],"f":[["enum",12],[" ",17],["S",7]],"s":[["enum",12],[" ",17],["S",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'S'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'S'`.\nThe two valid codepoint values are [`0x53`]() (`'S'`) \nand [`0x73`]() (`'s'`).\n\nTo match `'S'` or `'s'` exactly, use the \n``UnicodeEncoding//S/Uppercase`` or \n``UnicodeEncoding//S/Lowercase`` rules."},{"p":["UnicodeEncoding","S","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'s'`.\n\nAll ``ASCIITerminal`` types can match the letter `'s'` \n([`0x73`]())."},{"p":["UnicodeEncoding","S","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'S'`.\n\nAll ``ASCIITerminal`` types can match the letter `'S'` \n([`0x53`]())."},{"p":["UnicodeEncoding","T"],"f":[["enum",12],[" ",17],["T",7]],"s":[["enum",12],[" ",17],["T",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'T'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'T'`.\nThe two valid codepoint values are [`0x54`]() (`'T'`) \nand [`0x74`]() (`'t'`).\n\nTo match `'T'` or `'t'` exactly, use the \n``UnicodeEncoding//T/Uppercase`` or \n``UnicodeEncoding//T/Lowercase`` rules."},{"p":["UnicodeEncoding","T","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'t'`.\n\nAll ``ASCIITerminal`` types can match the letter `'t'` \n([`0x74`]())."},{"p":["UnicodeEncoding","T","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'T'`.\n\nAll ``ASCIITerminal`` types can match the letter `'T'` \n([`0x54`]())."},{"p":["UnicodeEncoding","U"],"f":[["enum",12],[" ",17],["U",7]],"s":[["enum",12],[" ",17],["U",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'U'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'U'`.\nThe two valid codepoint values are [`0x55`]() (`'U'`) \nand [`0x75`]() (`'u'`).\n\nTo match `'U'` or `'u'` exactly, use the \n``UnicodeEncoding//U/Uppercase`` or \n``UnicodeEncoding//U/Lowercase`` rules."},{"p":["UnicodeEncoding","U","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'u'`.\n\nAll ``ASCIITerminal`` types can match the letter `'u'` \n([`0x75`]())."},{"p":["UnicodeEncoding","U","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'U'`.\n\nAll ``ASCIITerminal`` types can match the letter `'U'` \n([`0x55`]())."},{"p":["UnicodeEncoding","V"],"f":[["enum",12],[" ",17],["V",7]],"s":[["enum",12],[" ",17],["V",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'V'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'V'`.\nThe two valid codepoint values are [`0x56`]() (`'V'`) \nand [`0x76`]() (`'v'`).\n\nTo match `'V'` or `'v'` exactly, use the \n``UnicodeEncoding//V/Uppercase`` or \n``UnicodeEncoding//V/Lowercase`` rules."},{"p":["UnicodeEncoding","V","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'v'`.\n\nAll ``ASCIITerminal`` types can match the letter `'v'` \n([`0x76`]())."},{"p":["UnicodeEncoding","V","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'V'`.\n\nAll ``ASCIITerminal`` types can match the letter `'V'` \n([`0x56`]())."},{"p":["UnicodeEncoding","W"],"f":[["enum",12],[" ",17],["W",7]],"s":[["enum",12],[" ",17],["W",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'W'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'W'`.\nThe two valid codepoint values are [`0x57`]() (`'W'`) \nand [`0x77`]() (`'w'`).\n\nTo match `'W'` or `'w'` exactly, use the \n``UnicodeEncoding//W/Uppercase`` or \n``UnicodeEncoding//W/Lowercase`` rules."},{"p":["UnicodeEncoding","W","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'w'`.\n\nAll ``ASCIITerminal`` types can match the letter `'w'` \n([`0x77`]())."},{"p":["UnicodeEncoding","W","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'W'`.\n\nAll ``ASCIITerminal`` types can match the letter `'W'` \n([`0x57`]())."},{"p":["UnicodeEncoding","X"],"f":[["enum",12],[" ",17],["X",7]],"s":[["enum",12],[" ",17],["X",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'X'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'X'`.\nThe two valid codepoint values are [`0x58`]() (`'X'`) \nand [`0x78`]() (`'x'`).\n\nTo match `'X'` or `'x'` exactly, use the \n``UnicodeEncoding//X/Uppercase`` or \n``UnicodeEncoding//X/Lowercase`` rules."},{"p":["UnicodeEncoding","X","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'x'`.\n\nAll ``ASCIITerminal`` types can match the letter `'x'` \n([`0x78`]())."},{"p":["UnicodeEncoding","X","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'X'`.\n\nAll ``ASCIITerminal`` types can match the letter `'X'` \n([`0x58`]())."},{"p":["UnicodeEncoding","Y"],"f":[["enum",12],[" ",17],["Y",7]],"s":[["enum",12],[" ",17],["Y",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'Y'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'Y'`.\nThe two valid codepoint values are [`0x59`]() (`'Y'`) \nand [`0x79`]() (`'y'`).\n\nTo match `'Y'` or `'y'` exactly, use the \n``UnicodeEncoding//Y/Uppercase`` or \n``UnicodeEncoding//Y/Lowercase`` rules."},{"p":["UnicodeEncoding","Y","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'y'`.\n\nAll ``ASCIITerminal`` types can match the letter `'y'` \n([`0x79`]())."},{"p":["UnicodeEncoding","Y","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'Y'`.\n\nAll ``ASCIITerminal`` types can match the letter `'Y'` \n([`0x59`]())."},{"p":["UnicodeEncoding","Z"],"f":[["enum",12],[" ",17],["Z",7]],"s":[["enum",12],[" ",17],["Z",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the letter `'Z'`, without case-sensitivity.\n\nAll ``ASCIITerminal`` types can match the letter `'Z'`.\nThe two valid codepoint values are [`0x5a`]() (`'Z'`) \nand [`0x7a`]() (`'z'`).\n\nTo match `'Z'` or `'z'` exactly, use the \n``UnicodeEncoding//Z/Uppercase`` or \n``UnicodeEncoding//Z/Lowercase`` rules."},{"p":["UnicodeEncoding","Z","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the lowercase letter `'z'`.\n\nAll ``ASCIITerminal`` types can match the letter `'z'` \n([`0x7a`]())."},{"p":["UnicodeEncoding","Z","Uppercase"],"f":[["enum",12],[" ",17],["Uppercase",7]],"s":[["enum",12],[" ",17],["Uppercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the uppercase letter `'Z'`.\n\nAll ``ASCIITerminal`` types can match the letter `'Z'` \n([`0x5a`]())."},{"p":["UnicodeEncoding","EndOfTransmissionBlock"],"f":[["enum",12],[" ",17],["EndOfTransmissionBlock",7]],"s":[["enum",12],[" ",17],["EndOfTransmissionBlock",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x17`]().\n\nAll ``ASCIITerminal`` types can match a(n) `EndOfTransmissionBlock` character."},{"p":["UnicodeEncoding","NegativeAcknowledgement"],"f":[["enum",12],[" ",17],["NegativeAcknowledgement",7]],"s":[["enum",12],[" ",17],["NegativeAcknowledgement",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x15`]().\n\nAll ``ASCIITerminal`` types can match a(n) `NegativeAcknowledgement` character."},{"p":["UnicodeEncoding","At"],"f":[["enum",12],[" ",17],["At",7]],"s":[["enum",12],[" ",17],["At",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x40`]().\n\nAll ``ASCIITerminal`` types can match a(n) `At` character."},{"p":["UnicodeEncoding","One"],"f":[["enum",12],[" ",17],["One",7]],"s":[["enum",12],[" ",17],["One",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x31`]().\n\nAll ``ASCIITerminal`` types can match a(n) `One` character."},{"p":["UnicodeEncoding","Six"],"f":[["enum",12],[" ",17],["Six",7]],"s":[["enum",12],[" ",17],["Six",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x36`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Six` character."},{"p":["UnicodeEncoding","Two"],"f":[["enum",12],[" ",17],["Two",7]],"s":[["enum",12],[" ",17],["Two",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x32`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Two` character."},{"p":["UnicodeEncoding","Bell"],"f":[["enum",12],[" ",17],["Bell",7]],"s":[["enum",12],[" ",17],["Bell",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x07`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Bell` character."},{"p":["UnicodeEncoding","Five"],"f":[["enum",12],[" ",17],["Five",7]],"s":[["enum",12],[" ",17],["Five",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x35`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Five` character."},{"p":["UnicodeEncoding","Four"],"f":[["enum",12],[" ",17],["Four",7]],"s":[["enum",12],[" ",17],["Four",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x34`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Four` character."},{"p":["UnicodeEncoding","Nine"],"f":[["enum",12],[" ",17],["Nine",7]],"s":[["enum",12],[" ",17],["Nine",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x39`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Nine` character."},{"p":["UnicodeEncoding","Null"],"f":[["enum",12],[" ",17],["Null",7]],"s":[["enum",12],[" ",17],["Null",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x00`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Null` character."},{"p":["UnicodeEncoding","Pipe"],"f":[["enum",12],[" ",17],["Pipe",7]],"s":[["enum",12],[" ",17],["Pipe",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x7c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Pipe` character."},{"p":["UnicodeEncoding","Plus"],"f":[["enum",12],[" ",17],["Plus",7]],"s":[["enum",12],[" ",17],["Plus",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Plus` character."},{"p":["UnicodeEncoding","Zero"],"f":[["enum",12],[" ",17],["Zero",7]],"s":[["enum",12],[" ",17],["Zero",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x30`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Zero` character."},{"p":["UnicodeEncoding","Caret"],"f":[["enum",12],[" ",17],["Caret",7]],"s":[["enum",12],[" ",17],["Caret",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x5e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Caret` character."},{"p":["UnicodeEncoding","Colon"],"f":[["enum",12],[" ",17],["Colon",7]],"s":[["enum",12],[" ",17],["Colon",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3a`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Colon` character."},{"p":["UnicodeEncoding","Comma"],"f":[["enum",12],[" ",17],["Comma",7]],"s":[["enum",12],[" ",17],["Comma",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Comma` character."},{"p":["UnicodeEncoding","Eight"],"f":[["enum",12],[" ",17],["Eight",7]],"s":[["enum",12],[" ",17],["Eight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x38`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Eight` character."},{"p":["UnicodeEncoding","Seven"],"f":[["enum",12],[" ",17],["Seven",7]],"s":[["enum",12],[" ",17],["Seven",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x37`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Seven` character."},{"p":["UnicodeEncoding","Slash"],"f":[["enum",12],[" ",17],["Slash",7]],"s":[["enum",12],[" ",17],["Slash",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Slash` character."},{"p":["UnicodeEncoding","Space"],"f":[["enum",12],[" ",17],["Space",7]],"s":[["enum",12],[" ",17],["Space",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x20`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Space` character."},{"p":["UnicodeEncoding","Three"],"f":[["enum",12],[" ",17],["Three",7]],"s":[["enum",12],[" ",17],["Three",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x33`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Three` character."},{"p":["UnicodeEncoding","Tilde"],"f":[["enum",12],[" ",17],["Tilde",7]],"s":[["enum",12],[" ",17],["Tilde",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x7e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Tilde` character."},{"p":["UnicodeEncoding","Cancel"],"f":[["enum",12],[" ",17],["Cancel",7]],"s":[["enum",12],[" ",17],["Cancel",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x18`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Cancel` character."},{"p":["UnicodeEncoding","Delete"],"f":[["enum",12],[" ",17],["Delete",7]],"s":[["enum",12],[" ",17],["Delete",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x7f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Delete` character."},{"p":["UnicodeEncoding","Dollar"],"f":[["enum",12],[" ",17],["Dollar",7]],"s":[["enum",12],[" ",17],["Dollar",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x24`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Dollar` character."},{"p":["UnicodeEncoding","Equals"],"f":[["enum",12],[" ",17],["Equals",7]],"s":[["enum",12],[" ",17],["Equals",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Equals` character."},{"p":["UnicodeEncoding","Escape"],"f":[["enum",12],[" ",17],["Escape",7]],"s":[["enum",12],[" ",17],["Escape",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x1b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Escape` character."},{"p":["UnicodeEncoding","Hyphen"],"f":[["enum",12],[" ",17],["Hyphen",7]],"s":[["enum",12],[" ",17],["Hyphen",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2d`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Hyphen` character."},{"p":["UnicodeEncoding","Period"],"f":[["enum",12],[" ",17],["Period",7]],"s":[["enum",12],[" ",17],["Period",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Period` character."},{"p":["UnicodeEncoding","Enquiry"],"f":[["enum",12],[" ",17],["Enquiry",7]],"s":[["enum",12],[" ",17],["Enquiry",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x05`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Enquiry` character."},{"p":["UnicodeEncoding","Hashtag"],"f":[["enum",12],[" ",17],["Hashtag",7]],"s":[["enum",12],[" ",17],["Hashtag",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x23`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Hashtag` character."},{"p":["UnicodeEncoding","Newline"],"f":[["enum",12],[" ",17],["Newline",7]],"s":[["enum",12],[" ",17],["Newline",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Parses a newline; either a ``Linefeed`` or a ``CarriageReturn`` followed by a \n``Linefeed``."},{"p":["UnicodeEncoding","Percent"],"f":[["enum",12],[" ",17],["Percent",7]],"s":[["enum",12],[" ",17],["Percent",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x25`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Percent` character."},{"p":["UnicodeEncoding","ShiftIn"],"f":[["enum",12],[" ",17],["ShiftIn",7]],"s":[["enum",12],[" ",17],["ShiftIn",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `ShiftIn` character."},{"p":["UnicodeEncoding","Asterisk"],"f":[["enum",12],[" ",17],["Asterisk",7]],"s":[["enum",12],[" ",17],["Asterisk",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x2a`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Asterisk` character."},{"p":["UnicodeEncoding","Backtick"],"f":[["enum",12],[" ",17],["Backtick",7]],"s":[["enum",12],[" ",17],["Backtick",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x60`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Backtick` character."},{"p":["UnicodeEncoding","Formfeed"],"f":[["enum",12],[" ",17],["Formfeed",7]],"s":[["enum",12],[" ",17],["Formfeed",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Formfeed` character."},{"p":["UnicodeEncoding","Linefeed"],"f":[["enum",12],[" ",17],["Linefeed",7]],"s":[["enum",12],[" ",17],["Linefeed",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0a`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Linefeed` character."},{"p":["UnicodeEncoding","Question"],"f":[["enum",12],[" ",17],["Question",7]],"s":[["enum",12],[" ",17],["Question",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3f`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Question` character."},{"p":["UnicodeEncoding","ShiftOut"],"f":[["enum",12],[" ",17],["ShiftOut",7]],"s":[["enum",12],[" ",17],["ShiftOut",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x0e`]().\n\nAll ``ASCIITerminal`` types can match a(n) `ShiftOut` character."},{"p":["UnicodeEncoding","Ampersand"],"f":[["enum",12],[" ",17],["Ampersand",7]],"s":[["enum",12],[" ",17],["Ampersand",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x26`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Ampersand` character."},{"p":["UnicodeEncoding","AngleLeft"],"f":[["enum",12],[" ",17],["AngleLeft",7]],"s":[["enum",12],[" ",17],["AngleLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `AngleLeft` character."},{"p":["UnicodeEncoding","Backslash"],"f":[["enum",12],[" ",17],["Backslash",7]],"s":[["enum",12],[" ",17],["Backslash",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x5c`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Backslash` character."},{"p":["UnicodeEncoding","Backspace"],"f":[["enum",12],[" ",17],["Backspace",7]],"s":[["enum",12],[" ",17],["Backspace",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x08`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Backspace` character."},{"p":["UnicodeEncoding","BraceLeft"],"f":[["enum",12],[" ",17],["BraceLeft",7]],"s":[["enum",12],[" ",17],["BraceLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x7b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `BraceLeft` character."},{"p":["UnicodeEncoding","EndOfText"],"f":[["enum",12],[" ",17],["EndOfText",7]],"s":[["enum",12],[" ",17],["EndOfText",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x03`]().\n\nAll ``ASCIITerminal`` types can match a(n) `EndOfText` character."},{"p":["UnicodeEncoding","Semicolon"],"f":[["enum",12],[" ",17],["Semicolon",7]],"s":[["enum",12],[" ",17],["Semicolon",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"d":"Matches the ASCII/Unicode codepoint [`0x3b`]().\n\nAll ``ASCIITerminal`` types can match a(n) `Semicolon` character."},{"p":["Pattern"],"f":[["enum",12],[" ",17],["Pattern",7]],"s":[["enum",12],[" ",17],["Pattern",7]],"d":"A namespace for structured parsing utilities."},{"p":["Pattern","UnsignedNormalizedInteger"],"f":[["enum",12],[" ",17],["UnsignedNormalizedInteger",7],["<",17],["First",0],[", ",17],["Next",0],["> ",17],["where",12],[" ",17],["First",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Next",18],[" : ",17],["DigitRule",18,11],[", ",17],["First",18],[".",17],["Construction",18],[" : ",17],["FixedWidthInteger",18,591],[", ",17],["First",18],[".",17],["Construction",18],[" == ",17],["Next",18],[".",17],["Construction",18],[", ",17],["First",18],[".",17],["Location",18],[" == ",17],["Next",18],[".",17],["Location",18],[", ",17],["First",18],[".",17],["Terminal",18],[" == ",17],["Next",18],[".",17],["Terminal",18]],"s":[["enum",12],[" ",17],["UnsignedNormalizedInteger",7]],"c":[["First",1,"ParsingRule",1],["Next",1,"DigitRule",11],["First.Construction",1,"FixedWidthInteger",591],["First.Construction",2,"Next.Construction"],["First.Location",2,"Next.Location"],["First.Terminal",2,"Next.Terminal"]],"g":[["First",0,0],["Next",1,0]]},{"p":["Pattern","End"],"f":[["enum",12],[" ",17],["End",7],["<",17],["Location",0],[", ",17],["Terminal",0],[">",17]],"s":[["enum",12],[" ",17],["End",7]],"g":[["Location",0,0],["Terminal",1,0]],"d":"A rule that expects the end of the input. \n\n>   Throws: ``ExpectedEndOfInputError`` if there is any \n    input remaining."},{"p":["Pattern","Pad"],"f":[["enum",12],[" ",17],["Pad",7],["<",17],["Rule",0],[", ",17],["Padding",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Padding",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Padding",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Padding",18],[".",17],["Terminal",18],[", ",17],["Padding",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Pad",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]]},{"p":["Pattern","Join"],"f":[["enum",12],[" ",17],["Join",7],["<",17],["Rule",0],[", ",17],["Separator",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Separator",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Separator",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Separator",18],[".",17],["Terminal",18],[", ",17],["Separator",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Join",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]]},{"p":["Pattern","Reduce"],"f":[["enum",12],[" ",17],["Reduce",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["enum",12],[" ",17],["Reduce",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Pattern","Collect"],"f":[["enum",12],[" ",17],["Collect",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["enum",12],[" ",17],["Collect",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Pattern","Discard"],"f":[["enum",12],[" ",17],["Discard",7],["<",17],["Rule",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Discard",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]],"d":"A rule that unconditionally ignores all remaining input.\n\nThis rule never throws an error."},{"p":["Grammar"],"f":[["enum",12],[" ",17],["Grammar",7]],"s":[["enum",12],[" ",17],["Grammar",7]],"a":{"a":{"d":true}},"d":"A namespace for structured parsing utilities."},{"p":["ParsingError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ParsingError",7],["<",17],["Index",0],[">",17]],"s":[["struct",12],[" ",17],["ParsingError",7]],"g":[["Index",0,0]],"d":"An error type that indicates the furthest-successful parse, and provides a \nstack trace detailing how the parser got there.\n\nNone of the structured parsers defined in ``/swift-grammar`` throw this error \ndirectly. Instead, the ``DefaultDiagnostics`` engine computes it\nbased on the diagnostic engine’s internal state when encountering \ninvalid input.\n\nCustom ``ParsingRule`` implementations should not throw this error either."},{"p":["ParsingError","Frame"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["Frame",7]],"s":[["struct",12],[" ",17],["Frame",7]],"g":[["Index",0,0]],"d":"A diagnostic stack frame, corresponding to a structured ``ParsingRule`` invocation.\n\nOnly the ``DefaultDiagnostics`` engine tracks call stack state."},{"p":["ParsingInput"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ParsingInput",7],["<",17],["Diagnostics",0],["> ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["struct",12],[" ",17],["ParsingInput",7]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]],"d":"A mutable interface for interacting with source input in a safe and \nstructured manner.\n\nThe [`Diagnostics`]() generic parameter provides a zero-cost abstraction \nfor configuring the debugging information emitted if parsing fails."},{"p":["NoDiagnostics"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["NoDiagnostics",7],["<",17],["Source",0],["> ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559]],"s":[["struct",12],[" ",17],["NoDiagnostics",7]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"d":"A performance-optimized diagnostic engine that maintains minimal internal \nstate, and emits no diagnostics.\n\nParsing with ``NoDiagnostics`` is efficient, but does not provide \nuseful debugging information. The errors it emits may have little to do \nwith the intuitive reason why parsing failed.\n\nFor richer debugging information, use ``DefaultDiagnostics`` instead."},{"p":["DefaultDiagnostics"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["DefaultDiagnostics",7],["<",17],["Source",0],["> ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559]],"s":[["struct",12],[" ",17],["DefaultDiagnostics",7]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"d":"A debuggability-optimized diagnostic engine that maintains an internal \ncall stack, and emits rich diagnostics.\n\nParsing with ``DefaultDiagnostics`` less efficient than parsing with \n``NoDiagnostics``. However, the errors it emits may be more useful for \nunderstanding the intuitive reason why parsing failed."},{"p":["Pattern","ApplicationError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ApplicationError",7],["<",17],["Rule",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1]],"s":[["struct",12],[" ",17],["ApplicationError",7]],"c":[["Rule",1,"ParsingRule",1]],"g":[["Rule",0,0]],"d":"An error occured while applying a parsing rule."},{"p":["Pattern","IntegerOverflowError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["IntegerOverflowError",7],["<",17],["Integer",0],["> ",17],["where",12],[" ",17],["Integer",18],[" : ",17],["FixedWidthInteger",18,591]],"s":[["struct",12],[" ",17],["IntegerOverflowError",7]],"c":[["Integer",1,"FixedWidthInteger",591]],"g":[["Integer",0,0]],"d":"An integer overflow error occurred while applying one of the \nbuilt-in integer parsing rules."},{"p":["Pattern","ExpectedEndOfInputError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ExpectedEndOfInputError",7]],"s":[["struct",12],[" ",17],["ExpectedEndOfInputError",7]]},{"p":["Pattern","UnexpectedEndOfInputError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["UnexpectedEndOfInputError",7]],"s":[["struct",12],[" ",17],["UnexpectedEndOfInputError",7]]},{"p":["ParsingError","init(at:because:trace:)"],"f":[["init",10],["(",17],["at",1],[" ",17],["index",2],[": ",17],["Index",18],[", ",17],["because",1],[" ",17],["problem",2],[": ",17],["Error",18,636],[", ",17],["trace",1],[": [",17],["ParsingError",18,192],["<",17],["Index",18],[">.",17],["Frame",18,193],["])",17]],"s":[["init",10],["(",17],["at",1],[": ",17],["Index",18],[", ",17],["because",1],[": ",17],["Error",18],[", ",17],["trace",1],[": [",17],["ParsingError",18],["<",17],["Index",18],[">.",17],["Frame",18],["])",17]],"g":[["Index",0,0]]},{"p":["ParsingError","Frame","init(index:rule:construction:)"],"f":[["init",10],["(",17],["index",1],[": ",17],["Index",18],[", ",17],["rule",1],[": ",17],["Any",12],[".Type, ",17],["construction",1],[": ",17],["Any",12],[".Type)",17]],"s":[["init",10],["(",17],["index",1],[": ",17],["Index",18],[", ",17],["rule",1],[": ",17],["Any",12],[".Type, ",17],["construction",1],[": ",17],["Any",12],[".Type)",17]],"g":[["Index",0,0]],"d":"Creates a stack frame.\n-   parameters:\n    - index: An index into an associated input source.\n    - rule: A metatype indicating the parsing rule associated with this stack frame.\n    - construction: A metatype indicating the expected parsing result of this stack frame."},{"p":["ParsingInput","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["source",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[")",17]],"s":[["init",10],["(",17],["Diagnostics",18],[".",17],["Source",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["ASCIITerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["UInt8",18,638],[")",17]],"s":[["init",10],["(",17],["UInt8",18],[")",17]]},{"p":["NoDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":210},{"p":["UTF16Terminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["UInt16",18,639],[")",17]],"s":[["init",10],["(",17],["UInt16",18],[")",17]]},{"p":["UnicodeTerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[")",17]],"s":[["init",10],["(",17],["Unicode",18],[".",17],["Scalar",18],[")",17]]},{"p":["CharacterTerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["Character",18,531],[")",17]],"s":[["init",10],["(",17],["Character",18],[")",17]]},{"p":["DefaultDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":210},{"p":["ParsingDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["Pattern","ApplicationError","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Rule",1,"ParsingRule",1]],"g":[["Rule",0,0]]},{"p":["Pattern","IntegerOverflowError","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Integer",1,"FixedWidthInteger",591]],"g":[["Integer",0,0]]},{"p":["Pattern","ExpectedEndOfInputError","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["Pattern","UnexpectedEndOfInputError","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["ParsingInput","subscript(_:)"],"f":[["subscript",10],["<",17],["Indices",0],[">(",17],["range",2],[": ",17],["Indices",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18],[" ",17],["where",12],[" ",17],["Indices",18],[" : ",17],["RangeExpression",18,555],[", ",17],["Indices",18],[".",17],["Bound",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["<",17],["Indices",0],[">(",17],["Indices",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Indices",1,"RangeExpression",555],["Indices.Bound",2,"Diagnostics.Source.Index"]],"g":[["Diagnostics",0,0],["Indices",0,1]]},{"p":["ParsingInput","subscript(_:)"],"f":[["subscript",10],["(",17],["index",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["LiteralRule","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["Self",18],[".",17],["Literal",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["Self",18],[".",17],["Literal",18]]},{"p":["ParsingError","namespace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18]],"d":"Returns the string [`\"parsing error\"`]().","o":225},{"p":["UnicodeDigit","Hex","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["UnicodeDigit","Hex","Lowercase","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["UnicodeDigit","Decimal","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["UnicodeDigit","HexScalar","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["UnicodeDigit","HexScalar","Lowercase","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["UnicodeDigit","DecimalScalar","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":354},{"p":["TraceableError","namespace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18]]},{"p":["UnicodeEncoding","AngleRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","BraceRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Substitute","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Underscore","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","BracketLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DoubleQuote","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","EndOfMedium","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Exclamation","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","SingleQuote","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","StartOfText","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","VerticalTab","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","BracketRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","FileSeparator","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","HorizontalTab","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","UnitSeparator","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","CarriageReturn","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DataLinkEscape","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DeviceControl1","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DeviceControl2","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DeviceControl3","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","DeviceControl4","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","GroupSeparator","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","StartOfHeading","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Acknowledgement","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","ParenthesisLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","RecordSeparator","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","SynchronousIdle","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","ParenthesisRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","EndOfTransmission","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","A","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","A","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","B","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","B","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","C","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","C","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","D","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","D","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","E","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","E","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","F","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","F","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","G","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","G","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","H","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","H","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","I","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","I","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","J","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","J","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","K","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","K","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","L","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","L","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","M","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","M","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","N","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","N","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","O","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","O","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","P","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","P","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Q","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Q","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","R","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","R","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","S","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","S","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","T","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","T","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","U","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","U","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","V","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","V","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","W","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","W","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","X","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","X","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Y","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Y","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Z","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Z","Uppercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","EndOfTransmissionBlock","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","NegativeAcknowledgement","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","At","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","One","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Six","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Two","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Bell","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Five","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Four","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Nine","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Null","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Pipe","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Plus","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Zero","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Caret","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Colon","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Comma","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Eight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Seven","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Slash","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Space","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Three","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Tilde","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Cancel","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Delete","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Dollar","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Equals","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Escape","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Hyphen","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Period","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Enquiry","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Hashtag","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Percent","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","ShiftIn","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Asterisk","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Backtick","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Formfeed","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Linefeed","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Question","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","ShiftOut","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Ampersand","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","AngleLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Backslash","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Backspace","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","BraceLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","EndOfText","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["UnicodeEncoding","Semicolon","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,590],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":217},{"p":["DigitRule","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Self",18],[".",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Self",18],[".",17],["Construction",18]]},{"p":["ParsingError","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,636],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]],"o":366},{"p":["ParsingError","Frame","construction"],"f":[["let",12],[" ",17],["construction",7],[": ",17],["Any",12],[".Type",17]],"s":[["let",12],[" ",17],["construction",7],[": ",17],["Any",12],[".Type",17]],"d":"The ``ParsingRule//Construction`` type associated with \n``rule``, if ``rule`` is a ``ParsingRule``. If ``rule`` is a compound \n(tuple) rule, this property contains a tuple of the same arity, \ncontaining the ``ParsingRule//Construction`` types of each of its \nsubrules."},{"p":["ParsingError","Frame","rule"],"f":[["let",12],[" ",17],["rule",7],[": ",17],["Any",12],[".Type",17]],"s":[["let",12],[" ",17],["rule",7],[": ",17],["Any",12],[".Type",17]],"d":"The parsing rule associated with this stack frame. \n\nThis property is an [`Any`]() metatype, and not a \n``ParsingRule`` metatype, because this stack frame may have been \ngenerated by a compound (tuple) rule."},{"p":["ParsingError","Frame","index"],"f":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"s":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"d":"Indicates the position in the ``ParsingInput.source`` where \nthe parser started attempting to apply ``rule``."},{"p":["ParsingError","index"],"f":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"s":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"d":"The index of the first invalid terminal in the input, or the ``Collection/.endIndex``\nof the input. \n\nIf the parser attempted to apply multiple rules via backtracking, this \nindex comes from the longest successful parse."},{"p":["ParsingError","trace"],"f":[["let",12],[" ",17],["trace",7],[": [",17],["ParsingError",18,192],["<",17],["Index",18],[">.",17],["Frame",18,193],["]",17]],"s":[["let",12],[" ",17],["trace",7],[": [",17],["ParsingError",18],["<",17],["Index",18],[">.",17],["Frame",18],["]",17]]},{"p":["ParsingError","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,547],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]],"o":367},{"p":["ParsingError","problem"],"f":[["let",12],[" ",17],["problem",7],[": ",17],["Error",18,636]],"s":[["let",12],[" ",17],["problem",7],[": ",17],["Error",18]],"d":"The underlying parsing error."},{"p":["ParsingInput","diagnostics"],"f":[["var",12],[" ",17],["diagnostics",7],[": ",17],["Diagnostics",18]],"s":[["var",12],[" ",17],["diagnostics",7],[": ",17],["Diagnostics",18]]},{"p":["ParsingInput","index"],"f":[["var",12],[" ",17],["index",7],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18]],"s":[["var",12],[" ",17],["index",7],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18]]},{"p":["ParsingInput","source"],"f":[["let",12],[" ",17],["source",7],[": ",17],["Diagnostics",18],[".",17],["Source",18]],"s":[["let",12],[" ",17],["source",7],[": ",17],["Diagnostics",18],[".",17],["Source",18]]},{"p":["TraceableError","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,636],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]]},{"p":["TraceableError","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,547],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]]},{"p":["TraceableError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":631},{"p":["DefaultDiagnostics","stack"],"f":[["var",12],[" ",17],["stack",7],[": [",17],["ParsingError",18,192],["<",17],["Source",18],[".",17],["Index",18],[">.",17],["Frame",18,193],["]",17]],"s":[["var",12],[" ",17],["stack",7],[": [",17],["ParsingError",18],["<",17],["Source",18],[".",17],["Index",18],[">.",17],["Frame",18],["]",17]]},{"p":["DefaultDiagnostics","frontier"],"f":[["var",12],[" ",17],["frontier",7],[": ",17],["ParsingError",18,192],["<",17],["Source",18],[".",17],["Index",18],[">?",17]],"s":[["var",12],[" ",17],["frontier",7],[": ",17],["ParsingError",18],["<",17],["Source",18],[".",17],["Index",18],[">?",17]]},{"p":["TraceableErrorRoot","message"],"f":[["var",12],[" ",17],["message",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["message",7],[": ",17],["String",18]]},{"p":["TraceableErrorRoot","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,636],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]]},{"p":["TraceableErrorRoot","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,547],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]]},{"p":["Pattern","ApplicationError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":631},{"p":["Pattern","IntegerOverflowError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,547],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":631},{"p":["LiteralRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"o":377},{"p":["ParsingRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"d":"Attempts to parse an instance of ``Construction`` from the given \nparsing input.\n\nThe implementation is not required to clean up the state of the `input`\nupon throwing an error; this is handled by the library.\n\nImplementations *should* interact with the given ``ParsingInput`` by \ncalling its methods and subscripts. Don’t overwrite the [`inout`]() binding or its \nmutable stored properties (``ParsingInput/.index`` and ``ParsingInput/.diagnostics``)\nunless you really know what you’re doing.\n\n>   Tip: \n    Mutating `input` does *not* invalidate its indices. You can always \n    store an ``ParsingInput/.index`` and dereference it later, as long \n    as you do not overwrite the [`inout`]() binding elsewhere."},{"p":["ParsingRule","parse(diagnosing:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[">(",17],["diagnosing",1],[" ",17],["source",2],[": ",17],["Source",18],[") ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[">(",17],["diagnosing",1],[": ",17],["Source",18],[") ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Source",1,"Collection",559],["Self.Location",2,"Source.Index"],["Self.Terminal",2,"Source.Element"]],"g":[["Source",0,1]],"d":"Attempts to parse the given input completely, emitting diagnostics \nif parsing failed.\n\n\n>   Throws: \n    A ``Pattern/ExpectedEndOfInputError`` if there remained any \n    unparsed input after applying this rule to its furthest extent."},{"p":["ParsingRule","parse(_:into:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Vector",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["into",1],[" ",17],["_",2],[": ",17],["Vector",18],[".Type = Vector.self) ",17],["throws",12],[" -> ",17],["Vector",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Vector",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Self",18],[".",17],["Construction",18],[" == ",17],["Vector",18],[".",17],["Element",18],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Vector",0],[">(",17],["Source",18],[", ",17],["into",1],[": ",17],["Vector",18],[".Type) ",17],["throws",12],[" -> ",17],["Vector",18]],"c":[["Source",1,"Collection",559],["Vector",1,"RangeReplaceableCollection",560],["Self.Construction",2,"Vector.Element"],["Self.Location",2,"Source.Index"],["Self.Terminal",2,"Source.Element"]],"g":[["Source",0,1],["Vector",1,1]],"d":"Attempts to parse the given input completely by applying this rule repeatedly.\n\nThis function does not parse with diagnostics.\n>   Throws: \n    A ``Pattern/ExpectedEndOfInputError`` if there remained any \n    unparsed input after applying this rule to its furthest extent."},{"p":["ParsingRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[") ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[">(",17],["Source",18],[") ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Source",1,"Collection",559],["Self.Location",2,"Source.Index"],["Self.Terminal",2,"Source.Element"]],"g":[["Source",0,1]],"d":"Attempts to parse the given input completely.\n\nThis method is *not* a default implementation for \n``parse(_:)?overload=s7Grammar11ParsingRuleP5parsey12ConstructionQzAA0B5InputVyqd__GzKAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ``; \nthat is a SymbolGraphGen classifier bug.\n\nTo parse with diagnostics, use ``parse(diagnosing:)``.\n>   Throws: \n    A ``Pattern/ExpectedEndOfInputError`` if there remained any \n    unparsed input after applying this rule to its furthest extent."},{"p":["TerminalRule","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Self",18],[".",17],["Terminal",18],[") -> ",17],["Self",18],[".",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Self",18],[".",17],["Terminal",18],[") -> ",17],["Self",18],[".",17],["Construction",18],["?",17]]},{"p":["TerminalRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"o":377},{"p":["UnicodeDigit","Hex","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","Hex","Lowercase","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","Decimal","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","Natural","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","HexScalar","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","HexScalar","Lowercase","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","DecimalScalar","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeDigit","NaturalScalar","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":381},{"p":["UnicodeEncoding","A","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","B","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","C","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","D","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","E","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","F","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","G","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","H","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","I","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","J","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","K","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","L","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","M","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","N","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","O","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","P","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","Q","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","R","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","S","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","T","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","U","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","V","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","W","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","X","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","Y","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","Z","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,635],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":381},{"p":["UnicodeEncoding","Newline","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[", ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Location",2,"Diagnostics.Source.Index"],["Terminal",1,"ASCIITerminal",4],["Terminal",2,"Diagnostics.Source.Element"],["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Location",0,0],["Terminal",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","UnsignedNormalizedInteger","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Next",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Next",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Next",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Next",18],[".",17],["Construction",18]],"c":[["First",1,"ParsingRule",1],["Next",1,"DigitRule",11],["Diagnostics",1,"ParsingDiagnostics",9],["First.Construction",1,"FixedWidthInteger",591],["First.Construction",2,"Next.Construction"],["First.Location",2,"Next.Location"],["First.Terminal",2,"Next.Terminal"],["Next.Location",2,"Diagnostics.Source.Index"],["Next.Terminal",2,"Diagnostics.Source.Element"]],"g":[["First",0,0],["Next",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","End","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[", ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Location",2,"Diagnostics.Source.Index"],["Terminal",2,"Diagnostics.Source.Element"],["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Location",0,0],["Terminal",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","Pad","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Padding",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Padding",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"],["Padding.Location",2,"Diagnostics.Source.Index"],["Padding.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Padding",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","Join","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Separator",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Separator",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"],["Separator.Location",2,"Diagnostics.Source.Index"],["Separator.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","Reduce","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Construction",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","Collect","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Construction",1,0],["Diagnostics",0,1]],"o":377},{"p":["Pattern","Discard","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">)",17]],"c":[["Rule",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"()"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Diagnostics",0,1]],"o":377},{"p":["Grammar","parse(diagnosing:as:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["diagnosing",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Root",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Root",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Root",18],[".",17],["Location",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["diagnosing",1],[": ",17],["Source",18],[", ",17],["as",1],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18]],"a":{"a":{"d":true,"r":"ParsingRule.parse(diagnosing:)"}},"c":[["Source",1,"Collection",559],["Root",1,"ParsingRule",1],["Source.Element",2,"Root.Terminal"],["Source.Index",2,"Root.Location"]],"g":[["Source",0,0],["Root",1,0]]},{"p":["Grammar","parse(_:as:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Root",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Root",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Root",18],[".",17],["Location",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["Source",18],[", ",17],["as",1],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18]],"a":{"a":{"d":true,"r":"ParsingRule.parse(_:)"}},"c":[["Source",1,"Collection",559],["Root",1,"ParsingRule",1],["Source.Element",2,"Root.Terminal"],["Source.Index",2,"Root.Location"]],"g":[["Source",0,0],["Root",1,0]]},{"p":["Grammar","parse(_:as:in:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Vector",18],[".Type) ",17],["throws",12],[" -> ",17],["Vector",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,559],[", ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Vector",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Rule",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Rule",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Vector",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["Source",18],[", ",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Vector",18],[".Type) ",17],["throws",12],[" -> ",17],["Vector",18]],"a":{"a":{"d":true,"r":"ParsingRule.parse(_:into:)"}},"c":[["Source",1,"Collection",559],["Rule",1,"ParsingRule",1],["Vector",1,"RangeReplaceableCollection",560],["Source.Element",2,"Rule.Terminal"],["Source.Index",2,"Rule.Location"],["Rule.Construction",2,"Vector.Element"]],"g":[["Source",0,0],["Rule",1,0],["Vector",2,0]]},{"p":["ParsingError","annotate(source:line:newline:)"],"f":[["func",12],[" ",17],["annotate",7],["<",17],["Background",0],[">(",17],["source",1],[" ",17],["background",2],[": ",17],["Background",18],[", ",17],["line",1],[": (",17],["Background",18],[".",17],["SubSequence",18],[") -> ",17],["String",18,547],[", ",17],["newline",1],[": (",17],["Background",18],[".",17],["Element",18],[") -> ",17],["Bool",18,557],[") -> ",17],["String",18,547],[" ",17],["where",12],[" ",17],["Index",18],[" == ",17],["Background",18],[".",17],["Index",18],[", ",17],["Background",18],[" : ",17],["BidirectionalCollection",18,532]],"s":[["func",12],[" ",17],["annotate",7],["<",17],["Background",0],[">(",17],["source",1],[": ",17],["Background",18],[", ",17],["line",1],[": (",17],["Background",18],[".",17],["SubSequence",18],[") -> ",17],["String",18],[", ",17],["newline",1],[": (",17],["Background",18],[".",17],["Element",18],[") -> ",17],["Bool",18],[") -> ",17],["String",18]],"c":[["Index",2,"Background.Index"],["Background",1,"BidirectionalCollection",532]],"g":[["Index",0,0],["Background",0,1]]},{"p":["ParsingInput","next()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["next",7],["() -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],["?",17]],"s":[["func",12],[" ",17],["next",7],["() -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],["?",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["ParsingInput","group(_:_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["group",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["_",1],[": ",17],["Rule",18],[".Type, ",17],["_",1],[" ",17],["body",2],[": (",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[") ",17],["throws",12],[" -> ",17],["Construction",18]],"s":[["func",12],[" ",17],["group",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["Rule",18],[".Type, (",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[") ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0],["Rule",0,1],["Construction",1,1]],"d":"Applies a parsing rule, or a group of parsing rules, appropriately \nhandling cleanup, backtracking, and diagnostic reporting if the parsing \nrule throws an error.\n\nThis API is used by other library methods that are emitted into the \nclient. Although it is safe to use, library users should rarely need \nto call it directly."},{"p":["ParsingInput","parse(as:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],["?.Type) -> ",17],["Rule",18],[".",17],["Construction",18],["? ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],["?.Type) -> ",17],["Rule",18],[".",17],["Construction",18],["?",17]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[", ",17],["T6",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[", ",17],["T6",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[", ",17],["T6",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T5",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T6",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["T5",18],[".",17],["Location",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["T5",18],[".",17],["Terminal",18],[", ",17],["T5",18],[".",17],["Location",18],[" == ",17],["T6",18],[".",17],["Location",18],[", ",17],["T5",18],[".",17],["Terminal",18],[" == ",17],["T6",18],[".",17],["Terminal",18],[", ",17],["T6",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T6",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[", ",17],["T6",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[", ",17],["T6",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[", ",17],["T6",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T5",1,"ParsingRule",1],["T6",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"T5.Location"],["T4.Terminal",2,"T5.Terminal"],["T5.Location",2,"T6.Location"],["T5.Terminal",2,"T6.Terminal"],["T6.Location",2,"Diagnostics.Source.Index"],["T6.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1],["T5",5,1],["T6",6,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T5",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["T5",18],[".",17],["Location",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["T5",18],[".",17],["Terminal",18],[", ",17],["T5",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T5",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T5",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"T5.Location"],["T4.Terminal",2,"T5.Terminal"],["T5.Location",2,"Diagnostics.Source.Index"],["T5.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1],["T5",5,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"Diagnostics.Source.Index"],["T4.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"Diagnostics.Source.Index"],["T3.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"Diagnostics.Source.Index"],["T2.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"Diagnostics.Source.Index"],["T1.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["as",1],[" ",17],["_",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18],[".Type) -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"s":[["func",12],[" ",17],["parse",7],["(",17],["as",1],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[".Type, ",17],["in",1],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18],[".Type) -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]],"d":"Discards and returns all remaining input.\n>   Complexity: O(1)"},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Vector",18],[".Type) -> ",17],["Vector",18],[" ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Vector",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Vector",18],[".",17],["Element",18],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Vector",18],[".Type) -> ",17],["Vector",18]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Vector",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Vector.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1],["Vector",1,1]]},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["as",1],[" ",17],["_",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Void",18,635],[".Type)",17]],"s":[["func",12],[" ",17],["parse",7],["(",17],["as",1],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[".Type, ",17],["in",1],[": ",17],["Void",18],[".Type)",17]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]],"d":"Discards all remaining input.\n>   Complexity: O(1)"},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Void",18,635],[".Type) ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Construction",18],[" == (), ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Void",18],[".Type)",17]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(prefix:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["prefix",1],[" ",17],["count",2],[": ",17],["Int",18,558],[") ",17],["throws",12],[" -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"s":[["func",12],[" ",17],["parse",7],["(",17],["prefix",1],[": ",17],["Int",18],[") ",17],["throws",12],[" -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["NoDiagnostics","pop()"],"f":[["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":450},{"p":["NoDiagnostics","push(index:for:by:)"],"f":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) -> ",17],["Source",18],[".",17],["Index",18]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type) -> ",17],["Source",18],[".",17],["Index",18]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0],["Rule",0,1],["Construction",1,1]],"o":451},{"p":["NoDiagnostics","reset(index:to:because:)"],"f":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[" ",17],["breadcrumb",2],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["because",1],[" ",17],["_",2],[": ",17],["inout",12],[" ",17],["Error",18,636],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":452},{"p":["DefaultDiagnostics","pop()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":450},{"p":["DefaultDiagnostics","push(index:for:by:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type)",17]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type)",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0],["Rule",0,1],["Construction",1,1]],"o":451},{"p":["DefaultDiagnostics","reset(index:to:because:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[" ",17],["_",2],[": ",17],["Void",18,635],[", ",17],["because",1],[" ",17],["error",2],[": ",17],["inout",12],[" ",17],["Error",18,636],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Void",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]],"c":[["Source",1,"Collection",559]],"g":[["Source",0,0]],"o":452},{"p":["ParsingDiagnostics","pop()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]]},{"p":["ParsingDiagnostics","push(index:for:by:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) -> ",17],["Self",18],[".",17],["Breadcrumb",18]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type) -> ",17],["Self",18],[".",17],["Breadcrumb",18]],"g":[["Rule",0,1],["Construction",1,1]]},{"p":["ParsingDiagnostics","reset(index:to:because:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Self",18],[".",17],["Breadcrumb",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18,636],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Self",18],[".",17],["Breadcrumb",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]]},{"p":["UnicodeDigit","HexScalar","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,640],[".",17],["Scalar",18,641]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":15},{"p":["UnicodeDigit","HexScalar","Lowercase","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,640],[".",17],["Scalar",18,641]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":15},{"p":["UnicodeDigit","DecimalScalar","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,640],[".",17],["Scalar",18,641]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":15},{"p":["UnicodeDigit","NaturalScalar","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,640],[".",17],["Scalar",18,641]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Terminal",2,"Unicode.Scalar",641],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":15},{"p":["UnicodeEncoding","StartOfHeader"],"f":[["typealias",12],[" ",17],["StartOfHeader",7],[" = ",17],["UnicodeEncoding",18,27],["<",17],["Location",18],[", ",17],["Terminal",18],[">.",17],["StartOfHeading",18,50]],"s":[["typealias",12],[" ",17],["StartOfHeader",7]],"a":{"a":{"d":true}},"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["UnicodeEncoding","A","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","B","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","C","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","D","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","E","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","F","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","G","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","H","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","I","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","J","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","K","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","L","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","M","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","N","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","O","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","P","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","Q","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","R","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","S","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","T","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","U","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","V","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","W","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","X","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","Y","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","Z","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,635]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["UnicodeEncoding","And"],"f":[["typealias",12],[" ",17],["And",7],[" = ",17],["UnicodeEncoding",18,27],["<",17],["Location",18],[", ",17],["Terminal",18],[">.",17],["Ampersand",18,176]],"s":[["typealias",12],[" ",17],["And",7]],"a":{"a":{"d":true}},"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["UnicodeEncoding","Minus"],"f":[["typealias",12],[" ",17],["Minus",7],[" = ",17],["UnicodeEncoding",18,27],["<",17],["Location",18],[", ",17],["Terminal",18],[">.",17],["Hyphen",18,163]],"s":[["typealias",12],[" ",17],["Minus",7]],"a":{"a":{"d":true}},"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["UnicodeEncoding","Quote"],"f":[["typealias",12],[" ",17],["Quote",7],[" = ",17],["UnicodeEncoding",18,27],["<",17],["Location",18],[", ",17],["Terminal",18],[">.",17],["DoubleQuote",18,33]],"s":[["typealias",12],[" ",17],["Quote",7]],"a":{"a":{"d":true}},"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Pattern","UnsignedInteger"],"f":[["typealias",12],[" ",17],["UnsignedInteger",7],["<",17],["Digit",0],["> = ",17],["Pattern",18,183],[".",17],["UnsignedNormalizedInteger",18,184],["<",17],["Digit",18],[", ",17],["Digit",18],["> ",17],["where",12],[" ",17],["Digit",18],[" : ",17],["DigitRule",18,11],[", ",17],["Digit",18],[".",17],["Construction",18],[" : ",17],["FixedWidthInteger",18,591]],"s":[["typealias",12],[" ",17],["UnsignedInteger",7]],"c":[["Digit",1,"DigitRule",11],["Digit.Construction",1,"FixedWidthInteger",591]],"g":[["Digit",0,0]]},{"p":["Pattern","UnsignedNormalizedInteger","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["First",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["First",1,"ParsingRule",1],["Next",1,"DigitRule",11],["First.Construction",1,"FixedWidthInteger",591],["First.Construction",2,"Next.Construction"],["First.Location",2,"Next.Location"],["First.Terminal",2,"Next.Terminal"]],"g":[["First",0,0],["Next",1,0]],"o":14},{"p":["Pattern","UnsignedNormalizedInteger","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["First",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["First",1,"ParsingRule",1],["Next",1,"DigitRule",11],["First.Construction",1,"FixedWidthInteger",591],["First.Construction",2,"Next.Construction"],["First.Location",2,"Next.Location"],["First.Terminal",2,"Next.Terminal"]],"g":[["First",0,0],["Next",1,0]],"o":15},{"p":["Pattern","Pad","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]],"o":14},{"p":["Pattern","Pad","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]],"o":15},{"p":["Pattern","Join","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]],"o":14},{"p":["Pattern","Join","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]],"o":15},{"p":["Pattern","Reduce","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":14},{"p":["Pattern","Reduce","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":15},{"p":["Pattern","Collect","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":14},{"p":["Pattern","Collect","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":15},{"p":["Pattern","Discard","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]],"o":14},{"p":["Pattern","Discard","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]],"o":15},{"p":["Grammar","DecimalDigit"],"f":[["typealias",12],[" ",17],["DecimalDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Terminal",18],[", ",17],["Construction",18],[">.",17],["Decimal",18,21],[" ",17],["where",12],[" ",17],["Terminal",18],[" : ",17],["BinaryInteger",18,564],[", ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["DecimalDigit",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.Decimal"}},"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["Grammar","NoDiagnostics"],"f":[["typealias",12],[" ",17],["NoDiagnostics",7],[" = ",17],["_NoDiagnostics",18,529]],"s":[["typealias",12],[" ",17],["NoDiagnostics",7]],"a":{"a":{"d":true,"r":"NoDiagnostics"}},"d":"``Grammar//NoDiagnostics`` was moved to the top-level \nnamespace of this module."},{"p":["Grammar","TerminalClass"],"f":[["typealias",12],[" ",17],["TerminalClass",7],[" = ",17],["TerminalRule",18,2]],"s":[["typealias",12],[" ",17],["TerminalClass",7]],"a":{"a":{"d":true,"r":"TerminalRule"}}},{"p":["Grammar","ExpectedRegion"],"f":[["typealias",12],[" ",17],["ExpectedRegion",7],["<",17],["Base",0],[", ",17],["Exclusion",0],["> = ",17],["Pattern",18,183],[".",17],["ApplicationError",18,197],["<",17],["Base",18],["> ",17],["where",12],[" ",17],["Base",18],[" : ",17],["ParsingRule",18,1]],"s":[["typealias",12],[" ",17],["ExpectedRegion",7]],"a":{"a":{"d":true,"r":"Pattern.ApplicationError"}},"c":[["Base",1,"ParsingRule",1]],"g":[["Base",0,0],["Exclusion",1,0]]},{"p":["Grammar","HexDigitScalar"],"f":[["typealias",12],[" ",17],["HexDigitScalar",7],["<",17],["Location",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[", ",17],["Construction",18],[">.",17],["HexScalar",18,23],[" ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["HexDigitScalar",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.HexScalar"}},"c":[["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","TerminalSequence"],"f":[["typealias",12],[" ",17],["TerminalSequence",7],[" = ",17],["LiteralRule",18,0]],"s":[["typealias",12],[" ",17],["TerminalSequence",7]],"a":{"a":{"d":true,"r":"LiteralRule"}}},{"p":["Grammar","DecimalDigitScalar"],"f":[["typealias",12],[" ",17],["DecimalDigitScalar",7],["<",17],["Location",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[", ",17],["Construction",18],[">.",17],["DecimalScalar",18,25],[" ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["DecimalDigitScalar",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.DecimalScalar"}},"c":[["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","DefaultDiagnostics"],"f":[["typealias",12],[" ",17],["DefaultDiagnostics",7],[" = ",17],["_DefaultDiagnostics",18,530]],"s":[["typealias",12],[" ",17],["DefaultDiagnostics",7]],"a":{"a":{"d":true,"r":"DefaultDiagnostics"}},"d":"``Grammar//DefaultDiagnostics`` was moved to the top-level \nnamespace of this module."},{"p":["Grammar","NaturalDecimalDigit"],"f":[["typealias",12],[" ",17],["NaturalDecimalDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Terminal",18],[", ",17],["Construction",18],[">.",17],["Natural",18,22],[" ",17],["where",12],[" ",17],["Terminal",18],[" : ",17],["BinaryInteger",18,564],[", ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["NaturalDecimalDigit",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.Natural"}},"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["Grammar","IntegerOverflowError"],"f":[["typealias",12],[" ",17],["IntegerOverflowError",7],["<",17],["T",0],["> = ",17],["Pattern",18,183],[".",17],["IntegerOverflowError",18,198],["<",17],["T",18],["> ",17],["where",12],[" ",17],["T",18],[" : ",17],["FixedWidthInteger",18,591]],"s":[["typealias",12],[" ",17],["IntegerOverflowError",7]],"a":{"a":{"d":true,"r":"Pattern.IntegerOverflowError"}},"c":[["T",1,"FixedWidthInteger",591]],"g":[["T",0,0]]},{"p":["Grammar","UnsignedIntegerLiteral"],"f":[["typealias",12],[" ",17],["UnsignedIntegerLiteral",7],["<",17],["Digit",0],["> = ",17],["Pattern",18,183],[".",17],["UnsignedInteger",18,487],["<",17],["Digit",18],["> ",17],["where",12],[" ",17],["Digit",18],[" : ",17],["DigitRule",18,11],[", ",17],["Digit",18],[".",17],["Construction",18],[" : ",17],["FixedWidthInteger",18,591]],"s":[["typealias",12],[" ",17],["UnsignedIntegerLiteral",7]],"a":{"a":{"d":true,"r":"Pattern.UnsignedInteger"}},"c":[["Digit",1,"DigitRule",11],["Digit.Construction",1,"FixedWidthInteger",591]],"g":[["Digit",0,0]]},{"p":["Grammar","NaturalDecimalDigitScalar"],"f":[["typealias",12],[" ",17],["NaturalDecimalDigitScalar",7],["<",17],["Location",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Unicode",18,640],[".",17],["Scalar",18,641],[", ",17],["Construction",18],[">.",17],["NaturalScalar",18,26],[" ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["NaturalDecimalDigitScalar",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.NaturalScalar"}},"c":[["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","UnsignedNormalizedIntegerLiteral"],"f":[["typealias",12],[" ",17],["UnsignedNormalizedIntegerLiteral",7],["<",17],["First",0],[", ",17],["Next",0],["> = ",17],["Pattern",18,183],[".",17],["UnsignedNormalizedInteger",18,184],["<",17],["First",18],[", ",17],["Next",18],["> ",17],["where",12],[" ",17],["First",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Next",18],[" : ",17],["DigitRule",18,11],[", ",17],["First",18],[".",17],["Construction",18],[" : ",17],["FixedWidthInteger",18,591],[", ",17],["First",18],[".",17],["Construction",18],[" == ",17],["Next",18],[".",17],["Construction",18],[", ",17],["First",18],[".",17],["Location",18],[" == ",17],["Next",18],[".",17],["Location",18],[", ",17],["First",18],[".",17],["Terminal",18],[" == ",17],["Next",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["UnsignedNormalizedIntegerLiteral",7]],"a":{"a":{"d":true,"r":"Pattern.UnsignedNormalizedInteger"}},"c":[["First",1,"ParsingRule",1],["Next",1,"DigitRule",11],["First.Construction",1,"FixedWidthInteger",591],["First.Construction",2,"Next.Construction"],["First.Location",2,"Next.Location"],["First.Terminal",2,"Next.Terminal"]],"g":[["First",0,0],["Next",1,0]]},{"p":["Grammar","End"],"f":[["typealias",12],[" ",17],["End",7],["<",17],["Location",0],[", ",17],["Terminal",0],["> = ",17],["Pattern",18,183],[".",17],["End",18,185],["<",17],["Location",18],[", ",17],["Terminal",18],[">",17]],"s":[["typealias",12],[" ",17],["End",7]],"a":{"a":{"d":true,"r":"Pattern.End"}},"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Pad"],"f":[["typealias",12],[" ",17],["Pad",7],["<",17],["Rule",0],[", ",17],["Padding",0],["> = ",17],["Pattern",18,183],[".",17],["Pad",18,186],["<",17],["Rule",18],[", ",17],["Padding",18],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Padding",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Padding",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Padding",18],[".",17],["Terminal",18],[", ",17],["Padding",18],[".",17],["Construction",18],[" == ()",17]],"s":[["typealias",12],[" ",17],["Pad",7]],"a":{"a":{"d":true,"r":"Pattern.Pad"}},"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]]},{"p":["Grammar","Join"],"f":[["typealias",12],[" ",17],["Join",7],["<",17],["Rule",0],[", ",17],["Separator",0],[", ",17],["Construction",0],["> = ",17],["Pattern",18,183],[".",17],["Join",18,187],["<",17],["Rule",18],[", ",17],["Separator",18],[", ",17],["Construction",18],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Separator",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Separator",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Separator",18],[".",17],["Terminal",18],[", ",17],["Separator",18],[".",17],["Construction",18],[" == ()",17]],"s":[["typealias",12],[" ",17],["Join",7]],"a":{"a":{"d":true,"r":"Pattern.Join"}},"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]]},{"p":["Grammar","Reduce"],"f":[["typealias",12],[" ",17],["Reduce",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> = ",17],["Pattern",18,183],[".",17],["Reduce",18,188],["<",17],["Rule",18],[", ",17],["Construction",18],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["typealias",12],[" ",17],["Reduce",7]],"a":{"a":{"d":true,"r":"Pattern.Reduce"}},"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Grammar","Collect"],"f":[["typealias",12],[" ",17],["Collect",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> = ",17],["Pattern",18,183],[".",17],["Collect",18,189],["<",17],["Rule",18],[", ",17],["Construction",18],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,560],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["typealias",12],[" ",17],["Collect",7]],"a":{"a":{"d":true,"r":"Pattern.Collect"}},"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",560],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Grammar","Discard"],"f":[["typealias",12],[" ",17],["Discard",7],["<",17],["Rule",0],["> = ",17],["Pattern",18,183],[".",17],["Discard",18,190],["<",17],["Rule",18],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ()",17]],"s":[["typealias",12],[" ",17],["Discard",7]],"a":{"a":{"d":true,"r":"Pattern.Discard"}},"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]]},{"p":["Grammar","Encoding"],"f":[["typealias",12],[" ",17],["Encoding",7],[" = ",17],["UnicodeEncoding",18,27]],"s":[["typealias",12],[" ",17],["Encoding",7]],"a":{"a":{"d":true,"r":"UnicodeEncoding"}},"d":"A generic context for unicode definitions."},{"p":["Grammar","Expected"],"f":[["typealias",12],[" ",17],["Expected",7],["<",17],["T",0],["> = ",17],["Pattern",18,183],[".",17],["ApplicationError",18,197],["<",17],["T",18],["> ",17],["where",12],[" ",17],["T",18],[" : ",17],["ParsingRule",18,1]],"s":[["typealias",12],[" ",17],["Expected",7]],"a":{"a":{"d":true,"r":"Pattern.ApplicationError"}},"c":[["T",1,"ParsingRule",1]],"g":[["T",0,0]]},{"p":["Grammar","HexDigit"],"f":[["typealias",12],[" ",17],["HexDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> = ",17],["UnicodeDigit",18,18],["<",17],["Location",18],[", ",17],["Terminal",18],[", ",17],["Construction",18],[">.",17],["Hex",18,19],[" ",17],["where",12],[" ",17],["Terminal",18],[" : ",17],["BinaryInteger",18,564],[", ",17],["Construction",18],[" : ",17],["BinaryInteger",18,564]],"s":[["typealias",12],[" ",17],["HexDigit",7]],"a":{"a":{"d":true,"r":"UnicodeDigit.Hex"}},"c":[["Terminal",1,"BinaryInteger",564],["Construction",1,"BinaryInteger",564]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["Grammar","Parsable"],"f":[["typealias",12],[" ",17],["Parsable",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Diagnostics",0],["> = ",17],["Never",18,637],[" ",17],["where",12],[" ",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[", ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["typealias",12],[" ",17],["Parsable",7]],"a":{"a":{"d":true}},"c":[["Location",2,"Diagnostics.Source.Index"],["Terminal",2,"Diagnostics.Source.Element"],["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Location",0,0],["Terminal",1,0],["Diagnostics",2,0]],"d":"A shortcut for expressing the type constraints on ``ParsingRule.parse(_:)``.\n\nTo use this compile-time abstraction, fill in its generic parameters and \ndeclare that it must conform to [`Any`]().\n\nFor example, the following:\n\n   ```swift \n   static \n   func parse<Diagnostics>(_ input:inout ParsingInput<Diagnostics>) \n       throws -> Void?\n       where Grammar.Parsable<String.Index, UInt8, Diagnostics>:Any\n   {\n       // ...\n   }\n   ```\n   \nis equivalent to:\n\n   ```swift \n   static \n   func parse<Diagnostics>(_ input:inout ParsingInput<Diagnostics>) \n       throws -> Void?\n       where   Diagnostics:ParsingDiagnostics, \n               Diagnostics.Source.Index == String.Index,\n               Diagnostics.Source.Element == UInt8\n   {\n       // ...\n   }\n   ```\n   "},{"p":["Array","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) -> [",17],["Element",18],[".",17],["Construction",18],["] ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Element",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Element",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> [",17],["Element",18],[".",17],["Construction",18],["]",17]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Element.Location",2,"Diagnostics.Source.Index"],["Element.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Element",0,0],["Diagnostics",0,1]],"o":377},{"p":["Optional","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,194],["<",17],["Diagnostics",18],[">) -> ",17],["Wrapped",18],[".",17],["Construction",18],["? ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Wrapped",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Wrapped",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> ",17],["Wrapped",18],[".",17],["Construction",18],["?",17]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Wrapped.Location",2,"Diagnostics.Source.Index"],["Wrapped.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Wrapped",0,0],["Diagnostics",0,1]],"o":377},{"p":["Array","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Element",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1]],"g":[["Element",0,0]],"o":14},{"p":["Array","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Element",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1]],"g":[["Element",0,0]],"o":15},{"p":["Optional","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Wrapped",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1]],"g":[["Wrapped",0,0]],"o":14},{"p":["Optional","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Wrapped",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1]],"g":[["Wrapped",0,0]],"o":15}],"edges":{"conformer":[0,1,[],2,1,[],3,4,[],3,545,[],4,545,[],5,4,[],5,545,[],6,630,[],6,636,[],6,642,[],7,4,[],7,545,[],8,4,[],8,7,[],8,545,[],10,6,[],10,630,[],10,636,[],10,642,[],11,1,[],11,2,[],19,1,[],19,2,[],19,11,[],20,1,[],20,2,[],20,11,[],21,1,[],21,2,[],21,11,[],22,1,[],22,2,[],23,1,[],23,2,[],23,11,[],24,1,[],24,2,[],24,11,[],25,1,[],25,2,[],25,11,[],26,1,[],26,2,[],28,0,[],28,1,[],29,0,[],29,1,[],30,0,[],30,1,[],31,0,[],31,1,[],32,0,[],32,1,[],33,0,[],33,1,[],34,0,[],34,1,[],35,0,[],35,1,[],36,0,[],36,1,[],37,0,[],37,1,[],38,0,[],38,1,[],39,0,[],39,1,[],40,0,[],40,1,[],41,0,[],41,1,[],42,0,[],42,1,[],43,0,[],43,1,[],44,0,[],44,1,[],45,0,[],45,1,[],46,0,[],46,1,[],47,0,[],47,1,[],48,0,[],48,1,[],49,0,[],49,1,[],50,0,[],50,1,[],51,0,[],51,1,[],52,0,[],52,1,[],53,0,[],53,1,[],54,0,[],54,1,[],55,0,[],55,1,[],56,0,[],56,1,[],57,1,[],57,2,[],58,0,[],58,1,[],59,0,[],59,1,[],60,1,[],60,2,[],61,0,[],61,1,[],62,0,[],62,1,[],63,1,[],63,2,[],64,0,[],64,1,[],65,0,[],65,1,[],66,1,[],66,2,[],67,0,[],67,1,[],68,0,[],68,1,[],69,1,[],69,2,[],70,0,[],70,1,[],71,0,[],71,1,[],72,1,[],72,2,[],73,0,[],73,1,[],74,0,[],74,1,[],75,1,[],75,2,[],76,0,[],76,1,[],77,0,[],77,1,[],78,1,[],78,2,[],79,0,[],79,1,[],80,0,[],80,1,[],81,1,[],81,2,[],82,0,[],82,1,[],83,0,[],83,1,[],84,1,[],84,2,[],85,0,[],85,1,[],86,0,[],86,1,[],87,1,[],87,2,[],88,0,[],88,1,[],89,0,[],89,1,[],90,1,[],90,2,[],91,0,[],91,1,[],92,0,[],92,1,[],93,1,[],93,2,[],94,0,[],94,1,[],95,0,[],95,1,[],96,1,[],96,2,[],97,0,[],97,1,[],98,0,[],98,1,[],99,1,[],99,2,[],100,0,[],100,1,[],101,0,[],101,1,[],102,1,[],102,2,[],103,0,[],103,1,[],104,0,[],104,1,[],105,1,[],105,2,[],106,0,[],106,1,[],107,0,[],107,1,[],108,1,[],108,2,[],109,0,[],109,1,[],110,0,[],110,1,[],111,1,[],111,2,[],112,0,[],112,1,[],113,0,[],113,1,[],114,1,[],114,2,[],115,0,[],115,1,[],116,0,[],116,1,[],117,1,[],117,2,[],118,0,[],118,1,[],119,0,[],119,1,[],120,1,[],120,2,[],121,0,[],121,1,[],122,0,[],122,1,[],123,1,[],123,2,[],124,0,[],124,1,[],125,0,[],125,1,[],126,1,[],126,2,[],127,0,[],127,1,[],128,0,[],128,1,[],129,1,[],129,2,[],130,0,[],130,1,[],131,0,[],131,1,[],132,1,[],132,2,[],133,0,[],133,1,[],134,0,[],134,1,[],135,0,[],135,1,[],136,0,[],136,1,[],137,0,[],137,1,[],138,0,[],138,1,[],139,0,[],139,1,[],140,0,[],140,1,[],141,0,[],141,1,[],142,0,[],142,1,[],143,0,[],143,1,[],144,0,[],144,1,[],145,0,[],145,1,[],146,0,[],146,1,[],147,0,[],147,1,[],148,0,[],148,1,[],149,0,[],149,1,[],150,0,[],150,1,[],151,0,[],151,1,[],152,0,[],152,1,[],153,0,[],153,1,[],154,0,[],154,1,[],155,0,[],155,1,[],156,0,[],156,1,[],157,0,[],157,1,[],158,0,[],158,1,[],159,0,[],159,1,[],160,0,[],160,1,[],161,0,[],161,1,[],162,0,[],162,1,[],163,0,[],163,1,[],164,0,[],164,1,[],165,0,[],165,1,[],166,0,[],166,1,[],167,1,[],168,0,[],168,1,[],169,0,[],169,1,[],170,0,[],170,1,[],171,0,[],171,1,[],172,0,[],172,1,[],173,0,[],173,1,[],174,0,[],174,1,[],175,0,[],175,1,[],176,0,[],176,1,[],177,0,[],177,1,[],178,0,[],178,1,[],179,0,[],179,1,[],180,0,[],180,1,[],181,0,[],181,1,[],182,0,[],182,1,[],184,1,[],185,1,[],186,1,[],187,1,[],188,1,[],189,1,[],190,1,[],192,6,[],192,630,[],192,636,[],192,642,[],195,9,[],195,642,[],196,9,[],197,630,[],197,636,[],197,642,[],198,630,[],198,636,[],198,642,[],199,636,[],199,642,[],200,636,[],200,642,[],556,1,[["Element",1,"ParsingRule",1]],561,1,[["Wrapped",1,"ParsingRule",1]],638,3,[],639,5,[],641,7,[]],"feature":[368,192,376,28,376,29,376,30,376,31,376,32,376,33,376,34,376,35,376,36,376,37,376,38,376,39,376,40,376,41,376,42,376,43,376,44,376,45,376,46,376,47,376,48,376,49,376,50,376,51,376,52,376,53,376,54,376,55,376,56,376,58,376,59,376,61,376,62,376,64,376,65,376,67,376,68,376,70,376,71,376,73,376,74,376,76,376,77,376,79,376,80,376,82,376,83,376,85,376,86,376,88,376,89,376,91,376,92,376,94,376,95,376,97,376,98,376,100,376,101,376,103,376,104,376,106,376,107,376,109,376,110,376,112,376,113,376,115,376,116,376,118,376,119,376,121,376,122,376,124,376,125,376,127,376,128,376,130,376,131,376,133,376,134,376,135,376,136,376,137,376,138,376,139,376,140,376,141,376,142,376,143,376,144,376,145,376,146,376,147,376,148,376,149,376,150,376,151,376,152,376,153,376,154,376,155,376,156,376,157,376,158,376,159,376,160,376,161,376,162,376,163,376,164,376,165,376,166,376,168,376,169,376,170,376,171,376,172,376,173,376,174,376,175,376,176,376,177,376,178,376,179,376,180,376,181,376,182,378,19,378,20,378,21,378,22,378,23,378,24,378,25,378,26,378,28,378,29,378,30,378,31,378,32,378,33,378,34,378,35,378,36,378,37,378,38,378,39,378,40,378,41,378,42,378,43,378,44,378,45,378,46,378,47,378,48,378,49,378,50,378,51,378,52,378,53,378,54,378,55,378,56,378,57,378,58,378,59,378,60,378,61,378,62,378,63,378,64,378,65,378,66,378,67,378,68,378,69,378,70,378,71,378,72,378,73,378,74,378,75,378,76,378,77,378,78,378,79,378,80,378,81,378,82,378,83,378,84,378,85,378,86,378,87,378,88,378,89,378,90,378,91,378,92,378,93,378,94,378,95,378,96,378,97,378,98,378,99,378,100,378,101,378,102,378,103,378,104,378,105,378,106,378,107,378,108,378,109,378,110,378,111,378,112,378,113,378,114,378,115,378,116,378,117,378,118,378,119,378,120,378,121,378,122,378,123,378,124,378,125,378,126,378,127,378,128,378,129,378,130,378,131,378,132,378,133,378,134,378,135,378,136,378,137,378,138,378,139,378,140,378,141,378,142,378,143,378,144,378,145,378,146,378,147,378,148,378,149,378,150,378,151,378,152,378,153,378,154,378,155,378,156,378,157,378,158,378,159,378,160,378,161,378,162,378,163,378,164,378,165,378,166,378,167,378,168,378,169,378,170,378,171,378,172,378,173,378,174,378,175,378,176,378,177,378,178,378,179,378,180,378,181,378,182,378,184,378,185,378,186,378,187,378,188,378,189,378,190,378,556,378,561,379,19,379,20,379,21,379,22,379,23,379,24,379,25,379,26,379,28,379,29,379,30,379,31,379,32,379,33,379,34,379,35,379,36,379,37,379,38,379,39,379,40,379,41,379,42,379,43,379,44,379,45,379,46,379,47,379,48,379,49,379,50,379,51,379,52,379,53,379,54,379,55,379,56,379,57,379,58,379,59,379,60,379,61,379,62,379,63,379,64,379,65,379,66,379,67,379,68,379,69,379,70,379,71,379,72,379,73,379,74,379,75,379,76,379,77,379,78,379,79,379,80,379,81,379,82,379,83,379,84,379,85,379,86,379,87,379,88,379,89,379,90,379,91,379,92,379,93,379,94,379,95,379,96,379,97,379,98,379,99,379,100,379,101,379,102,379,103,379,104,379,105,379,106,379,107,379,108,379,109,379,110,379,111,379,112,379,113,379,114,379,115,379,116,379,117,379,118,379,119,379,120,379,121,379,122,379,123,379,124,379,125,379,126,379,127,379,128,379,129,379,130,379,131,379,132,379,133,379,134,379,135,379,136,379,137,379,138,379,139,379,140,379,141,379,142,379,143,379,144,379,145,379,146,379,147,379,148,379,149,379,150,379,151,379,152,379,153,379,154,379,155,379,156,379,157,379,158,379,159,379,160,379,161,379,162,379,163,379,164,379,165,379,166,379,167,379,168,379,169,379,170,379,171,379,172,379,173,379,174,379,175,379,176,379,177,379,178,379,179,379,180,379,181,379,182,379,184,379,185,379,186,379,187,379,188,379,189,379,190,379,556,379,561,380,19,380,20,380,21,380,22,380,23,380,24,380,25,380,26,380,28,380,29,380,30,380,31,380,32,380,33,380,34,380,35,380,36,380,37,380,38,380,39,380,40,380,41,380,42,380,43,380,44,380,45,380,46,380,47,380,48,380,49,380,50,380,51,380,52,380,53,380,54,380,55,380,56,380,57,380,58,380,59,380,60,380,61,380,62,380,63,380,64,380,65,380,66,380,67,380,68,380,69,380,70,380,71,380,72,380,73,380,74,380,75,380,76,380,77,380,78,380,79,380,80,380,81,380,82,380,83,380,84,380,85,380,86,380,87,380,88,380,89,380,90,380,91,380,92,380,93,380,94,380,95,380,96,380,97,380,98,380,99,380,100,380,101,380,102,380,103,380,104,380,105,380,106,380,107,380,108,380,109,380,110,380,111,380,112,380,113,380,114,380,115,380,116,380,117,380,118,380,119,380,120,380,121,380,122,380,123,380,124,380,125,380,126,380,127,380,128,380,129,380,130,380,131,380,132,380,133,380,134,380,135,380,136,380,137,380,138,380,139,380,140,380,141,380,142,380,143,380,144,380,145,380,146,380,147,380,148,380,149,380,150,380,151,380,152,380,153,380,154,380,155,380,156,380,157,380,158,380,159,380,160,380,161,380,162,380,163,380,164,380,165,380,166,380,167,380,168,380,169,380,170,380,171,380,172,380,173,380,174,380,175,380,176,380,177,380,178,380,179,380,180,380,181,380,182,380,184,380,185,380,186,380,187,380,188,380,189,380,190,380,556,380,561,382,19,382,20,382,21,382,22,382,23,382,24,382,25,382,26,382,57,382,60,382,63,382,66,382,69,382,72,382,75,382,78,382,81,382,84,382,87,382,90,382,93,382,96,382,99,382,102,382,105,382,108,382,111,382,114,382,117,382,120,382,123,382,126,382,129,382,132,537,638,537,639,538,638,538,639,539,638,539,639,540,638,540,639,541,638,541,639,542,638,542,639,543,638,543,639,544,638,544,639,549,638,549,639,550,638,550,639,551,638,551,639,552,638,552,639,553,638,553,639,554,638,554,639,562,638,562,639,563,638,563,639,566,638,566,639,569,638,569,639,570,638,570,639,571,638,571,639,572,638,572,639,573,638,573,639,574,638,574,639,575,638,575,639,576,638,576,639,577,638,577,639,578,638,578,639,579,638,579,639,580,638,580,639,581,638,581,639,582,638,582,639,583,638,583,639,584,638,584,639,585,638,585,639,586,638,586,639,587,638,587,639,588,638,588,639,589,638,589,639,592,638,592,639,593,638,593,639,594,638,594,639,595,638,595,639,596,638,596,639,597,638,597,639,598,638,598,639,599,638,599,639,600,638,600,639,601,638,601,639,602,638,602,639,603,638,603,639,604,638,604,639,605,638,605,639,606,638,606,639,607,638,607,639,608,638,608,639,609,638,609,639,610,638,610,639,611,638,611,639,612,638,612,639,613,638,613,639,614,638,614,639,615,638,615,639,616,638,616,639,617,638,617,639,618,638,618,639,619,638,619,639,620,638,620,639,621,638,621,639,622,638,622,639,623,638,623,639,626,638,626,639,627,638,627,639,628,638,628,639,629,638,629,639,632,192,632,197,632,198,632,638,632,639,634,638,634,639],"member":[19,18,20,19,21,18,22,18,23,18,24,23,25,18,26,18,28,27,29,27,30,27,31,27,32,27,33,27,34,27,35,27,36,27,37,27,38,27,39,27,40,27,41,27,42,27,43,27,44,27,45,27,46,27,47,27,48,27,49,27,50,27,51,27,52,27,53,27,54,27,55,27,56,27,57,27,58,57,59,57,60,27,61,60,62,60,63,27,64,63,65,63,66,27,67,66,68,66,69,27,70,69,71,69,72,27,73,72,74,72,75,27,76,75,77,75,78,27,79,78,80,78,81,27,82,81,83,81,84,27,85,84,86,84,87,27,88,87,89,87,90,27,91,90,92,90,93,27,94,93,95,93,96,27,97,96,98,96,99,27,100,99,101,99,102,27,103,102,104,102,105,27,106,105,107,105,108,27,109,108,110,108,111,27,112,111,113,111,114,27,115,114,116,114,117,27,118,117,119,117,120,27,121,120,122,120,123,27,124,123,125,123,126,27,127,126,128,126,129,27,130,129,131,129,132,27,133,132,134,132,135,27,136,27,137,27,138,27,139,27,140,27,141,27,142,27,143,27,144,27,145,27,146,27,147,27,148,27,149,27,150,27,151,27,152,27,153,27,154,27,155,27,156,27,157,27,158,27,159,27,160,27,161,27,162,27,163,27,164,27,165,27,166,27,167,27,168,27,169,27,170,27,171,27,172,27,173,27,174,27,175,27,176,27,177,27,178,27,179,27,180,27,181,27,182,27,184,183,185,183,186,183,187,183,188,183,189,183,190,183,193,192,197,183,198,183,199,183,200,183,201,192,202,193,203,194,205,195,209,196,211,197,212,198,213,199,214,200,215,194,216,194,218,192,219,19,220,20,221,21,222,23,223,24,224,25,226,28,227,29,228,30,229,31,230,32,231,33,232,34,233,35,234,36,235,37,236,38,237,39,238,40,239,41,240,42,241,43,242,44,243,45,244,46,245,47,246,48,247,49,248,50,249,51,250,52,251,53,252,54,253,55,254,56,255,58,256,59,257,61,258,62,259,64,260,65,261,67,262,68,263,70,264,71,265,73,266,74,267,76,268,77,269,79,270,80,271,82,272,83,273,85,274,86,275,88,276,89,277,91,278,92,279,94,280,95,281,97,282,98,283,100,284,101,285,103,286,104,287,106,288,107,289,109,290,110,291,112,292,113,293,115,294,116,295,118,296,119,297,121,298,122,299,124,300,125,301,127,302,128,303,130,304,131,305,133,306,134,307,135,308,136,309,137,310,138,311,139,312,140,313,141,314,142,315,143,316,144,317,145,318,146,319,147,320,148,321,149,322,150,323,151,324,152,325,153,326,154,327,155,328,156,329,157,330,158,331,159,332,160,333,161,334,162,335,163,336,164,337,165,338,166,339,168,340,169,341,170,342,171,343,172,344,173,345,174,346,175,347,176,348,177,349,178,350,179,351,180,352,181,353,182,355,192,356,193,357,193,358,193,359,192,360,192,361,192,362,192,363,194,364,194,365,194,368,6,369,196,370,196,374,197,375,198,378,1,379,1,383,19,384,20,385,21,386,22,387,23,388,24,389,25,390,26,391,57,392,60,393,63,394,66,395,69,396,72,397,75,398,78,399,81,400,84,401,87,402,90,403,93,404,96,405,99,406,102,407,105,408,108,409,111,410,114,411,117,412,120,413,123,414,126,415,129,416,132,417,167,418,184,419,185,420,186,421,187,422,188,423,189,424,190,425,191,426,191,427,191,428,192,429,194,430,194,431,194,432,194,433,194,434,194,435,194,436,194,437,194,438,194,439,194,440,194,441,194,442,194,443,194,444,195,445,195,446,195,447,196,448,196,449,196,453,23,454,24,455,25,456,26,457,27,458,57,459,60,460,63,461,66,462,69,463,72,464,75,465,78,466,81,467,84,468,87,469,90,470,93,471,96,472,99,473,102,474,105,475,108,476,111,477,114,478,117,479,120,480,123,481,126,482,129,483,132,484,27,485,27,486,27,487,183,488,184,489,184,490,186,491,186,492,187,493,187,494,188,495,188,496,189,497,189,498,190,499,190,500,191,501,191,502,191,503,191,504,191,505,191,506,191,507,191,508,191,509,191,510,191,511,191,512,191,513,191,514,191,515,191,516,191,517,191,518,191,519,191,520,191,521,191,522,191,523,556,524,561,525,556,526,556,527,561,528,561],"requirement":[12,0,13,1,14,1,15,1,16,9,17,9,204,4,206,5,207,7,208,8,210,9,217,0,225,6,354,11,366,6,367,6,371,10,377,1,381,2,450,9,451,9,452,9],"defaultImplementation":[368,631,372,366,373,367,376,377,380,377,382,377]},"sourcemap":[{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Diagnostics/DefaultDiagnostics.swift","symbols":[7,7,196,10,8,369,11,8,370,13,4,209,19,9,448,24,9,447,29,9,449]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Diagnostics/NoDiagnostics.swift","symbols":[9,7,195,12,4,205,19,9,445,26,9,444,31,9,446]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Diagnostics/ParsingDiagnostics.spf.swift","symbols":[5,9,9,7,19,17,8,19,16,10,4,210,13,9,451,16,9,450,18,9,452]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Digit/DigitRule.spf.swift","symbols":[5,9,11,8,8,354]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Digit/UnicodeDigit.swift","symbols":[2,5,18,10,9,22,13,13,386,26,9,21,29,12,221,34,13,385,47,9,19,50,12,219,55,13,383,68,13,20,71,16,220,76,17,384,92,9,26,95,18,456,98,13,390,106,9,25,109,18,455,112,12,224,117,13,389,125,9,23,128,18,453,131,12,222,136,13,387,153,13,24,156,22,454,159,16,223,164,17,388]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Parsing/ASCIITerminal.swift","symbols":[6,9,4,8,4,204,16,9,3,21,9,5,23,4,206,27,9,7,29,4,207,33,9,8,35,4,208]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Parsing/Grammar.swift","symbols":[10,5,191,45,14,522,53,14,519,57,14,520,61,14,503,66,9,425,75,9,426,83,9,427,93,14,505,97,14,502,103,14,501,109,14,507,113,14,513,117,14,518,122,14,517,128,14,516,134,14,515,144,14,514,152,16,508,157,16,500,162,16,521,168,16,511,173,16,506,178,16,504,184,14,509,188,14,510,193,14,512]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Parsing/ParsingError.swift","symbols":[10,7,192,16,11,193,21,12,358,28,12,357,35,12,356,42,8,202,51,8,218,57,8,362,64,8,359,66,8,360,69,4,201,76,8,361,91,8,355,136,9,428]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Parsing/ParsingInput.swift","symbols":[7,7,194,10,8,365,12,8,364,14,8,363,16,4,203,23,4,216,28,4,215,35,9,429,56,9,430,75,9,438,83,9,437,98,9,436,115,9,435,134,9,434,155,9,433,178,9,432,206,9,431,212,9,442,221,9,440,234,9,443,250,9,439,261,9,441]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Parsing/TraceableError.swift","symbols":[2,9,6,5,8,225,9,8,366,13,8,367,20,9,10,22,8,371,30,8,373,34,8,372,66,8,368]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Rule/LiteralRule.spf.swift","symbols":[4,9,0,7,19,12,9,8,217,31,9,376]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Rule/ParsingRule.spf.swift","symbols":[4,9,1,18,19,14,20,19,15,27,19,13,45,9,377,111,9,378,130,9,380,145,9,379,162,14,527,164,14,528,167,9,524,179,14,525,181,14,526,184,9,523]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Rule/Pattern.swift","symbols":[2,5,183,5,11,199,8,8,213,13,11,200,16,8,214,23,11,198,29,8,212,33,12,375,40,11,197,44,8,211,48,12,374,59,9,185,62,13,419,77,9,190,81,18,498,83,18,499,85,13,424,94,9,189,99,18,496,101,18,497,103,13,423,112,9,188,117,18,494,119,18,495,121,13,422,136,9,187,145,18,493,147,18,492,149,13,421,164,9,186,171,18,491,173,18,490,175,13,420,188,14,487,192,9,184,199,18,488,201,18,489,204,13,418]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Rule/TerminalRule.spf.swift","symbols":[4,9,2,7,9,381,21,9,382]},{"uri":"file:///workspace/ecosystem/packages/.builds/swift-grammar@0.2.0/.build/checkouts/swift-grammar/Sources/Grammar/Rule/UnicodeEncoding.spf.swift","symbols":[2,5,27,10,9,167,13,13,417,27,14,457,31,14,486,35,14,484,39,14,485,77,9,145,80,12,317,87,9,50,90,12,248,97,9,37,100,12,235,107,9,181,110,12,352,117,9,56,120,12,254,127,9,165,130,12,337,137,9,51,140,12,249,147,9,141,150,12,313,157,9,179,160,12,350,167,9,41,170,12,239,177,9,173,180,12,344,187,9,38,190,12,236,197,9,172,200,12,343,207,9,43,210,12,241,217,9,175,220,12,346,227,9,169,230,12,340,237,9,44,240,12,242,247,9,45,250,12,243,257,9,46,260,12,244,267,9,47,270,12,245,277,9,48,280,12,246,287,9,136,290,12,308,297,9,54,300,12,252,307,9,135,310,12,307,317,9,158,320,12,330,327,9,34,330,12,232,337,9,30,340,12,228,347,9,162,350,12,334,357,9,40,360,12,238,367,9,49,370,12,247,377,9,53,380,12,251,387,9,42,390,12,240,397,9,155,400,12,327,407,9,35,410,12,233,417,9,33,420,12,231,427,9,166,430,12,338,437,9,160,440,12,332,447,9,168,450,12,339,457,9,176,460,12,347,467,9,36,470,12,234,477,9,52,480,12,250,487,9,55,490,12,253,497,9,170,500,12,341,507,9,147,510,12,319,517,9,151,520,12,323,527,9,163,530,12,335,537,9,164,540,12,336,547,9,154,550,12,326,557,9,148,560,12,320,567,9,138,570,12,310,577,9,140,580,12,312,587,9,156,590,12,328,597,9,143,600,12,315,607,9,142,610,12,314,617,9,139,620,12,311,627,9,153,630,12,325,637,9,152,640,12,324,647,9,144,650,12,316,657,9,150,660,12,322,667,9,182,670,12,353,677,9,177,680,12,348,687,9,161,690,12,333,697,9,28,700,12,226,707,9,174,710,12,345,717,9,137,720,12,309,727,9,32,730,12,230,737,9,178,740,12,349,747,9,39,750,12,237,757,9,149,760,12,321,767,9,31,770,12,229,777,9,171,780,12,342,787,9,180,790,12,351,797,9,146,800,12,318,807,9,29,810,12,227,817,9,157,820,12,329,827,9,159,830,12,331,843,9,57,850,13,58,853,16,255,860,13,59,863,16,256,867,18,458,870,13,391,892,9,60,899,13,61,902,16,257,909,13,62,912,16,258,916,18,459,919,13,392,941,9,63,948,13,64,951,16,259,958,13,65,961,16,260,965,18,460,968,13,393,990,9,66,997,13,67,1000,16,261,1007,13,68,1010,16,262,1014,18,461,1017,13,394,1039,9,69,1046,13,70,1049,16,263,1056,13,71,1059,16,264,1063,18,462,1066,13,395,1088,9,72,1095,13,73,1098,16,265,1105,13,74,1108,16,266,1112,18,463,1115,13,396,1137,9,75,1144,13,76,1147,16,267,1154,13,77,1157,16,268,1161,18,464,1164,13,397,1186,9,78,1193,13,79,1196,16,269,1203,13,80,1206,16,270,1210,18,465,1213,13,398,1235,9,81,1242,13,82,1245,16,271,1252,13,83,1255,16,272,1259,18,466,1262,13,399,1284,9,84,1291,13,85,1294,16,273,1301,13,86,1304,16,274,1308,18,467,1311,13,400,1333,9,87,1340,13,88,1343,16,275,1350,13,89,1353,16,276,1357,18,468,1360,13,401,1382,9,90,1389,13,91,1392,16,277,1399,13,92,1402,16,278,1406,18,469,1409,13,402,1431,9,93,1438,13,94,1441,16,279,1448,13,95,1451,16,280,1455,18,470,1458,13,403,1480,9,96,1487,13,97,1490,16,281,1497,13,98,1500,16,282,1504,18,471,1507,13,404,1529,9,99,1536,13,100,1539,16,283,1546,13,101,1549,16,284,1553,18,472,1556,13,405,1578,9,102,1585,13,103,1588,16,285,1595,13,104,1598,16,286,1602,18,473,1605,13,406,1627,9,105,1634,13,106,1637,16,287,1644,13,107,1647,16,288,1651,18,474,1654,13,407,1676,9,108,1683,13,109,1686,16,289,1693,13,110,1696,16,290,1700,18,475,1703,13,408,1725,9,111,1732,13,112,1735,16,291,1742,13,113,1745,16,292,1749,18,476,1752,13,409,1774,9,114,1781,13,115,1784,16,293,1791,13,116,1794,16,294,1798,18,477,1801,13,410,1823,9,117,1830,13,118,1833,16,295,1840,13,119,1843,16,296,1847,18,478,1850,13,411,1872,9,120,1879,13,121,1882,16,297,1889,13,122,1892,16,298,1896,18,479,1899,13,412,1921,9,123,1928,13,124,1931,16,299,1938,13,125,1941,16,300,1945,18,480,1948,13,413,1970,9,126,1977,13,127,1980,16,301,1987,13,128,1990,16,302,1994,18,481,1997,13,414,2019,9,129,2026,13,130,2029,16,303,2036,13,131,2039,16,304,2043,18,482,2046,13,415,2068,9,132,2075,13,133,2078,16,305,2085,13,134,2088,16,306,2092,18,483,2095,13,416]}]}