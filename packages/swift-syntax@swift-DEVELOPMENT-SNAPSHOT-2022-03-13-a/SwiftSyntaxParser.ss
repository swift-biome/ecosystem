{"culture":"SwiftSyntaxParser","dependencies":[{"package":"swift-syntax","modules":["SwiftSyntax"]}],"extensions":[],"partitions":[{"namespace":"SwiftSyntaxParser","communities":[{"community":"enum","startIndex":0,"endIndex":4},{"community":"struct","startIndex":4,"endIndex":8},{"community":"enum.case","startIndex":8,"endIndex":16},{"community":"init","startIndex":16,"endIndex":25},{"community":"property","startIndex":25,"endIndex":42},{"community":"type.method","startIndex":42,"endIndex":44},{"community":"method","startIndex":44,"endIndex":51},{"community":"func","startIndex":51,"endIndex":52}]}],"identifiers":["s17SwiftSyntaxParser0C5ErrorO","s17SwiftSyntaxParser0bC0O","s17SwiftSyntaxParser10DiagnosticV8SeverityO","s17SwiftSyntaxParser5FixItO","s17SwiftSyntaxParser10DiagnosticV","s17SwiftSyntaxParser10DiagnosticV7BuilderV","s17SwiftSyntaxParser10DiagnosticV7MessageV","s17SwiftSyntaxParser4NoteV","s17SwiftSyntaxParser0C5ErrorO07invalidB4DatayA2CmF","s17SwiftSyntaxParser0C5ErrorO30parserCompatibilityCheckFailedyA2CmF","s17SwiftSyntaxParser10DiagnosticV8SeverityO4noteyA2EmF","s17SwiftSyntaxParser10DiagnosticV8SeverityO5erroryA2EmF","s17SwiftSyntaxParser10DiagnosticV8SeverityO7warningyA2EmF","s17SwiftSyntaxParser5FixItO6insertyAC0aB014SourceLocationV_SStcACmF","s17SwiftSyntaxParser5FixItO6removeyAC0aB011SourceRangeVcACmF","s17SwiftSyntaxParser5FixItO7replaceyAC0aB011SourceRangeV_SStcACmF","s17SwiftSyntaxParser10DiagnosticV4fromACs7Decoder_p_tKcfc","s17SwiftSyntaxParser10DiagnosticV7MessageV4fromAEs7Decoder_p_tKcfc","s17SwiftSyntaxParser10DiagnosticV7MessageVyAeC8SeverityO_SStcfc","s17SwiftSyntaxParser10DiagnosticV7message8location5notes10highlights6fixItsA2C7MessageV_0aB014SourceLocationVSgSayAA4NoteVGSayAK0L5RangeVGSayAA5FixItOGtcfc","s17SwiftSyntaxParser10DiagnosticV7message8location7actionsA2C7MessageV_0aB014SourceLocationVSgyAC7BuilderVzcSgtcfc","s17SwiftSyntaxParser10DiagnosticV8SeverityO8rawValueAESgs5UInt8V_tcfc","s17SwiftSyntaxParser4NoteV4fromACs7Decoder_p_tKcfc","s17SwiftSyntaxParser4NoteV7message8location10highlights6fixItsAcA10DiagnosticV7MessageV_0aB014SourceLocationVSgSayAL0L5RangeVGSayAA5FixItOGtcfc","s17SwiftSyntaxParser5FixItO4fromACs7Decoder_p_tKcfc","s17SwiftSyntaxParser0C5ErrorO11descriptionSSvp","s17SwiftSyntaxParser10DiagnosticV10highlightsSay0aB011SourceRangeVGvp","s17SwiftSyntaxParser10DiagnosticV16debugDescriptionSSvp","s17SwiftSyntaxParser10DiagnosticV5notesSayAA4NoteVGvp","s17SwiftSyntaxParser10DiagnosticV6fixItsSayAA5FixItOGvp","s17SwiftSyntaxParser10DiagnosticV7MessageV16debugDescriptionSSvp","s17SwiftSyntaxParser10DiagnosticV7MessageV4textSSvp","s17SwiftSyntaxParser10DiagnosticV7MessageV8severityAC8SeverityOvp","s17SwiftSyntaxParser10DiagnosticV7messageAC7MessageVvp","s17SwiftSyntaxParser10DiagnosticV8location0aB014SourceLocationVSgvp","s17SwiftSyntaxParser4NoteV10highlightsSay0aB011SourceRangeVGvp","s17SwiftSyntaxParser4NoteV6fixItsSayAA5FixItOGvp","s17SwiftSyntaxParser4NoteV7messageAA10DiagnosticV7MessageVvp","s17SwiftSyntaxParser4NoteV8location0aB014SourceLocationVSgvp","s17SwiftSyntaxParser5FixItO16debugDescriptionSSvp","s17SwiftSyntaxParser5FixItO4textSSvp","s17SwiftSyntaxParser5FixItO5range0aB011SourceRangeVvp","s17SwiftSyntaxParser0bC0O5parse6source0D10Transition22filenameForDiagnostics17diagnosticHandler0aB0010SourceFileB0VSS_AI016IncrementalParseF0CSgSSyAA10DiagnosticVcSgtKFZ","s17SwiftSyntaxParser0bC0O5parse_17diagnosticHandler0aB0010SourceFileB0V10Foundation3URLV_yAA10DiagnosticVcSgtKFZ","s17SwiftSyntaxParser10DiagnosticV7BuilderV11fixItInsert_2atySS_0aB014SourceLocationVtF","s17SwiftSyntaxParser10DiagnosticV7BuilderV11fixItRemoveyy0aB011SourceRangeVF","s17SwiftSyntaxParser10DiagnosticV7BuilderV12fixItReplace_4withy0aB011SourceRangeV_SStF","s17SwiftSyntaxParser10DiagnosticV7BuilderV4note_8location10highlights6fixItsyAC7MessageV_0aB014SourceLocationVSgSayAL0L5RangeVGSayAA5FixItOGtF","s17SwiftSyntaxParser10DiagnosticV7BuilderV9highlightyy0aB011SourceRangeVd_tF","s17SwiftSyntaxParser4NoteV12asDiagnosticAA0F0VyF","s17SwiftSyntaxParser5FixItO6encode2toys7Encoder_p_tKF","s17SwiftSyntaxParser15cNodeLayoutHashSiyF","s10Foundation3URLV","s11SwiftSyntax010SourceFileB0V","s11SwiftSyntax11SourceRangeV","s11SwiftSyntax14SourceLocationV","s11SwiftSyntax26IncrementalParseTransitionC","sSE","sSE6encode2toys7Encoder_p_tKF","sSH","sSQ","sSQsE2neoiySbx_xtFZ","sSS","sSY","sSY8rawValuexSg03RawB0Qz_tcfc","sSYsSERzs5UInt8V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF","sSYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp","sSYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF","sSYsSeRzs5UInt8V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc","sSe","sSe4fromxs7Decoder_p_tKcfc","sSi","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss28CustomDebugStringConvertibleP","ss28CustomDebugStringConvertibleP16debugDescriptionSSvp","ss4Voida","ss5ErrorP","ss5ErrorP10FoundationE20localizedDescriptionSSvp","ss5UInt8V","ss7DecoderP","ss7EncoderP","ss8SendableP"],"vertices":[{"p":["ParserError"],"f":[["enum",12],[" ",17],["ParserError",7]],"s":[["enum",12],[" ",17],["ParserError",7]],"d":"A list of possible errors that could be encountered while parsing a\nSyntax tree."},{"p":["SyntaxParser"],"f":[["enum",12],[" ",17],["SyntaxParser",7]],"s":[["enum",12],[" ",17],["SyntaxParser",7]],"d":"Namespace for functions to parse swift source and retrieve a syntax tree."},{"p":["Diagnostic","Severity"],"f":[["enum",12],[" ",17],["Severity",7]],"s":[["enum",12],[" ",17],["Severity",7]],"d":"The severity of the diagnostic."},{"p":["FixIt"],"f":[["enum",12],[" ",17],["FixIt",7]],"s":[["enum",12],[" ",17],["FixIt",7]],"d":"A FixIt represents a change to source code in order to \"correct\" a\ndiagnostic."},{"p":["Diagnostic"],"f":[["struct",12],[" ",17],["Diagnostic",7]],"s":[["struct",12],[" ",17],["Diagnostic",7]],"d":"A Diagnostic message that can be emitted regarding some piece of code."},{"p":["Diagnostic","Builder"],"f":[["struct",12],[" ",17],["Builder",7]],"s":[["struct",12],[" ",17],["Builder",7]],"d":"A diagnostic builder that exposes mutating operations for notes,\nhighlights, and FixIts. When a Diagnostic is created, a builder\nwill be provided in a closure where the user can conditionally\nadd notes, highlights, and FixIts, that will then be wrapped\ninto the immutable Diagnostic object."},{"p":["Diagnostic","Message"],"f":[["struct",12],[" ",17],["Message",7]],"s":[["struct",12],[" ",17],["Message",7]]},{"p":["Note"],"f":[["struct",12],[" ",17],["Note",7]],"s":[["struct",12],[" ",17],["Note",7]],"d":"A Note attached to a Diagnostic. This provides more context for a specific\nerror, and optionally allows for FixIts."},{"p":["ParserError","invalidSyntaxData"],"f":[["case",12],[" ",17],["invalidSyntaxData",7]],"s":[["case",12],[" ",17],["invalidSyntaxData",7]],"d":"Parser created an invalid syntax data. That should never occur under\nnormal circumstances, and it should be reported as a bug."},{"p":["ParserError","parserCompatibilityCheckFailed"],"f":[["case",12],[" ",17],["parserCompatibilityCheckFailed",7]],"s":[["case",12],[" ",17],["parserCompatibilityCheckFailed",7]],"d":"The SwiftSyntax parser library isn't compatible with this SwiftSyntax version.\n\nIncompatibility can occur if the loaded `lib_InternalSwiftSyntaxParser.dylib/.so`\nis from a toolchain that is not compatible with this version of SwiftSyntax."},{"p":["Diagnostic","Severity","note"],"f":[["case",12],[" ",17],["note",7]],"s":[["case",12],[" ",17],["note",7]]},{"p":["Diagnostic","Severity","error"],"f":[["case",12],[" ",17],["error",7]],"s":[["case",12],[" ",17],["error",7]]},{"p":["Diagnostic","Severity","warning"],"f":[["case",12],[" ",17],["warning",7]],"s":[["case",12],[" ",17],["warning",7]]},{"p":["FixIt","insert(_:_:)"],"f":[["case",12],[" ",17],["insert",7],["(",17],["SourceLocation",18,55],[", ",17],["String",18,62],[")",17]],"s":[["case",12],[" ",17],["insert",7],["(",17],["SourceLocation",18],[", ",17],["String",18],[")",17]],"d":"Insert, at the provided source location, the provided string."},{"p":["FixIt","remove(_:)"],"f":[["case",12],[" ",17],["remove",7],["(",17],["SourceRange",18,54],[")",17]],"s":[["case",12],[" ",17],["remove",7],["(",17],["SourceRange",18],[")",17]],"d":"Remove the characters from the source file over the provided source range."},{"p":["FixIt","replace(_:_:)"],"f":[["case",12],[" ",17],["replace",7],["(",17],["SourceRange",18,54],[", ",17],["String",18,62],[")",17]],"s":[["case",12],[" ",17],["replace",7],["(",17],["SourceRange",18],[", ",17],["String",18],[")",17]],"d":"Replace the characters at the provided source range with the provided\nstring."},{"p":["Diagnostic","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,81],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Diagnostic","Message","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,81],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Diagnostic","Message","init(_:_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["severity",2],[": ",17],["Diagnostic",18,4],[".",17],["Severity",18,2],[", ",17],["_",1],[" ",17],["text",2],[": ",17],["String",18,62],[")",17]],"s":[["init",10],["(",17],["Diagnostic",18],[".",17],["Severity",18],[", ",17],["String",18],[")",17]],"d":"Creates a diagnostic message with the provided severity and text."},{"p":["Diagnostic","init(message:location:notes:highlights:fixIts:)"],"f":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6],[", ",17],["location",1],[": ",17],["SourceLocation",18,55],["?, ",17],["notes",1],[": [",17],["Note",18,7],["], ",17],["highlights",1],[": [",17],["SourceRange",18,54],["], ",17],["fixIts",1],[": [",17],["FixIt",18,3],["])",17]],"s":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18],[".",17],["Message",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],["?, ",17],["notes",1],[": [",17],["Note",18],["], ",17],["highlights",1],[": [",17],["SourceRange",18],["], ",17],["fixIts",1],[": [",17],["FixIt",18],["])",17]],"d":"Creates a new Diagnostic with the provided message, pointing to the\nprovided location (if any).\n- parameters:\n  - message: The diagnostic's message.\n  - location: The location the diagnostic is attached to.\n  - highlights: An array of SourceRanges which will be highlighted when\n                the diagnostic is presented."},{"p":["Diagnostic","init(message:location:actions:)"],"f":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6],[", ",17],["location",1],[": ",17],["SourceLocation",18,55],["?, ",17],["actions",1],[": ((",17],["inout",12],[" ",17],["Diagnostic",18,4],[".",17],["Builder",18,5],[") -> ",17],["Void",18,77],[")?)",17]],"s":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18],[".",17],["Message",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],["?, ",17],["actions",1],[": ((",17],["inout",12],[" ",17],["Diagnostic",18],[".",17],["Builder",18],[") -> ",17],["Void",18],[")?)",17]],"d":"Creates a new Diagnostic with the provided message, pointing to the\nprovided location (if any).\nThis initializer also takes a closure that will be passed a Diagnostic\nBuilder as an inout parameter. Use this closure to add notes, highlights,\nand FixIts to the diagnostic through the Builder's API.\n- parameters:\n  - message: The diagnostic's message.\n  - location: The location the diagnostic is attached to.\n  - actions: A closure that's used to attach notes and highlights to\n             diagnostics."},{"p":["Diagnostic","Severity","init(rawValue:)"],"f":[["init",10],["?(",17],["rawValue",1],[": ",17],["UInt8",18,80],[")",17]],"s":[["init",10],["?(",17],["rawValue",1],[": ",17],["UInt8",18],[")",17]]},{"p":["Note","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,81],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["Note","init(message:location:highlights:fixIts:)"],"f":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6],[", ",17],["location",1],[": ",17],["SourceLocation",18,55],["?, ",17],["highlights",1],[": [",17],["SourceRange",18,54],["], ",17],["fixIts",1],[": [",17],["FixIt",18,3],["])",17]],"s":[["init",10],["(",17],["message",1],[": ",17],["Diagnostic",18],[".",17],["Message",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],["?, ",17],["highlights",1],[": [",17],["SourceRange",18],["], ",17],["fixIts",1],[": [",17],["FixIt",18],["])",17]],"d":"Constructs a new Note from the constituent parts."},{"p":["FixIt","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,81],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["ParserError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,62],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]]},{"p":["Diagnostic","highlights"],"f":[["let",12],[" ",17],["highlights",7],[": [",17],["SourceRange",18,54],["]",17]],"s":[["let",12],[" ",17],["highlights",7],[": [",17],["SourceRange",18],["]",17]],"d":"An array of source ranges to highlight."},{"p":["Diagnostic","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,62],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]]},{"p":["Diagnostic","notes"],"f":[["let",12],[" ",17],["notes",7],[": [",17],["Note",18,7],["]",17]],"s":[["let",12],[" ",17],["notes",7],[": [",17],["Note",18],["]",17]],"d":"An array of notes providing more context for this diagnostic."},{"p":["Diagnostic","fixIts"],"f":[["let",12],[" ",17],["fixIts",7],[": [",17],["FixIt",18,3],["]",17]],"s":[["let",12],[" ",17],["fixIts",7],[": [",17],["FixIt",18],["]",17]],"d":"An array of possible FixIts to apply to this diagnostic."},{"p":["Diagnostic","Message","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,62],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]]},{"p":["Diagnostic","Message","text"],"f":[["let",12],[" ",17],["text",7],[": ",17],["String",18,62]],"s":[["let",12],[" ",17],["text",7],[": ",17],["String",18]],"d":"A string containing the contents of the diagnostic."},{"p":["Diagnostic","Message","severity"],"f":[["let",12],[" ",17],["severity",7],[": ",17],["Diagnostic",18,4],[".",17],["Severity",18,2]],"s":[["let",12],[" ",17],["severity",7],[": ",17],["Diagnostic",18],[".",17],["Severity",18]],"d":"The severity of diagnostic. This can be note, error, or warning."},{"p":["Diagnostic","message"],"f":[["let",12],[" ",17],["message",7],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6]],"s":[["let",12],[" ",17],["message",7],[": ",17],["Diagnostic",18],[".",17],["Message",18]],"d":"The diagnostic's message."},{"p":["Diagnostic","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,55],["?",17]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18],["?",17]],"d":"The location the diagnostic should point."},{"p":["Note","highlights"],"f":[["let",12],[" ",17],["highlights",7],[": [",17],["SourceRange",18,54],["]",17]],"s":[["let",12],[" ",17],["highlights",7],[": [",17],["SourceRange",18],["]",17]],"d":"An array of source ranges that should be highlighted."},{"p":["Note","fixIts"],"f":[["let",12],[" ",17],["fixIts",7],[": [",17],["FixIt",18,3],["]",17]],"s":[["let",12],[" ",17],["fixIts",7],[": [",17],["FixIt",18],["]",17]],"d":"An array of FixIts that apply to this note."},{"p":["Note","message"],"f":[["let",12],[" ",17],["message",7],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6]],"s":[["let",12],[" ",17],["message",7],[": ",17],["Diagnostic",18],[".",17],["Message",18]],"d":"The note's message."},{"p":["Note","location"],"f":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18,55],["?",17]],"s":[["let",12],[" ",17],["location",7],[": ",17],["SourceLocation",18],["?",17]],"d":"The source location where the note should point."},{"p":["FixIt","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,62],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]]},{"p":["FixIt","text"],"f":[["var",12],[" ",17],["text",7],[": ",17],["String",18,62],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["text",7],[": ",17],["String",18]],"d":"The text associated with this FixIt. If this is a removal, the text is\nthe empty string."},{"p":["FixIt","range"],"f":[["var",12],[" ",17],["range",7],[": ",17],["SourceRange",18,54],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["range",7],[": ",17],["SourceRange",18]],"d":"The source range associated with a FixIt. If this is an insertion,\nit is a range with the same start and end location."},{"p":["SyntaxParser","parse(source:parseTransition:filenameForDiagnostics:diagnosticHandler:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["source",1],[": ",17],["String",18,62],[", ",17],["parseTransition",1],[": ",17],["IncrementalParseTransition",18,56],["? = nil, ",17],["filenameForDiagnostics",1],[": ",17],["String",18,62],[" = \"\", ",17],["diagnosticHandler",1],[": ((",17],["Diagnostic",18,4],[") -> ",17],["Void",18,77],[")? = nil) ",17],["throws",12],[" -> ",17],["SourceFileSyntax",18,53]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["source",1],[": ",17],["String",18],[", ",17],["parseTransition",1],[": ",17],["IncrementalParseTransition",18],["?, ",17],["filenameForDiagnostics",1],[": ",17],["String",18],[", ",17],["diagnosticHandler",1],[": ((",17],["Diagnostic",18],[") -> ",17],["Void",18],[")?) ",17],["throws",12],[" -> ",17],["SourceFileSyntax",18]],"d":"Parses the string into a full-fidelity Syntax tree.\n\n- Parameters:\n  - source: The source string to parse.\n  - parseTransition: Optional mechanism for incremental re-parsing.\n  - filenameForDiagnostics: Optional file name used for SourceLocation.\n  - diagnosticHandler: Optional callback that will be called for all\n      diagnostics the parser emits\n- Returns: A top-level Syntax node representing the contents of the tree,\n           if the parse was successful.\n- Throws: `ParserError`"},{"p":["SyntaxParser","parse(_:diagnosticHandler:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["_",1],[" ",17],["url",2],[": ",17],["URL",18,52],[", ",17],["diagnosticHandler",1],[": ((",17],["Diagnostic",18,4],[") -> ",17],["Void",18,77],[")? = nil) ",17],["throws",12],[" -> ",17],["SourceFileSyntax",18,53]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["URL",18],[", ",17],["diagnosticHandler",1],[": ((",17],["Diagnostic",18],[") -> ",17],["Void",18],[")?) ",17],["throws",12],[" -> ",17],["SourceFileSyntax",18]],"d":"Parses the file `URL` into a full-fidelity Syntax tree.\n\n- Parameters:\n  - url: The file URL to parse.\n  - diagnosticHandler: Optional callback that will be called for all\n      diagnostics the parser emits\n- Returns: A top-level Syntax node representing the contents of the tree,\n           if the parse was successful.\n- Throws: `ParserError`"},{"p":["Diagnostic","Builder","fixItInsert(_:at:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["fixItInsert",7],["(",17],["_",1],[" ",17],["text",2],[": ",17],["String",18,62],[", ",17],["at",1],[" ",17],["sourceLocation",2],[": ",17],["SourceLocation",18,55],[")",17]],"s":[["func",12],[" ",17],["fixItInsert",7],["(",17],["String",18],[", ",17],["at",1],[": ",17],["SourceLocation",18],[")",17]],"d":"Adds a FixIt to insert the provided text at the provided SourceLocation\nin the file where the location resides."},{"p":["Diagnostic","Builder","fixItRemove(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["fixItRemove",7],["(",17],["_",1],[" ",17],["sourceRange",2],[": ",17],["SourceRange",18,54],[")",17]],"s":[["func",12],[" ",17],["fixItRemove",7],["(",17],["SourceRange",18],[")",17]],"d":"Adds a FixIt to remove the contents of the provided SourceRange.\nWhen applied, this FixIt will delete the characters corresponding to\nthis range in the original source file."},{"p":["Diagnostic","Builder","fixItReplace(_:with:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["fixItReplace",7],["(",17],["_",1],[" ",17],["sourceRange",2],[": ",17],["SourceRange",18,54],[", ",17],["with",1],[" ",17],["text",2],[": ",17],["String",18,62],[")",17]],"s":[["func",12],[" ",17],["fixItReplace",7],["(",17],["SourceRange",18],[", ",17],["with",1],[": ",17],["String",18],[")",17]],"d":"Adds a FixIt to replace the contents of the source file corresponding\nto the provided SourceRange with the provided text."},{"p":["Diagnostic","Builder","note(_:location:highlights:fixIts:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["note",7],["(",17],["_",1],[" ",17],["message",2],[": ",17],["Diagnostic",18,4],[".",17],["Message",18,6],[", ",17],["location",1],[": ",17],["SourceLocation",18,55],["? = nil, ",17],["highlights",1],[": [",17],["SourceRange",18,54],["] = [], ",17],["fixIts",1],[": [",17],["FixIt",18,3],["] = [])",17]],"s":[["func",12],[" ",17],["note",7],["(",17],["Diagnostic",18],[".",17],["Message",18],[", ",17],["location",1],[": ",17],["SourceLocation",18],["?, ",17],["highlights",1],[": [",17],["SourceRange",18],["], ",17],["fixIts",1],[": [",17],["FixIt",18],["])",17]],"d":"Adds a Note to the diagnostic builder.\n- parameters:\n  - message: The message associated with the note. This must have the\n             `.note` severity.\n  - location: The source location to which this note is attached.\n  - highlights: Any source ranges that should be highlighted by this\n                note.\n  - fixIts: Any FixIts that should be attached to this note."},{"p":["Diagnostic","Builder","highlight(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["highlight",7],["(",17],["_",1],[" ",17],["ranges",2],[": ",17],["SourceRange",18,54],["...)",17]],"s":[["func",12],[" ",17],["highlight",7],["(",17],["SourceRange",18],["...)",17]],"d":"Adds the provided source ranges as highlights of this diagnostic."},{"p":["Note","asDiagnostic()"],"f":[["func",12],[" ",17],["asDiagnostic",7],["() -> ",17],["Diagnostic",18,4]],"s":[["func",12],[" ",17],["asDiagnostic",7],["() -> ",17],["Diagnostic",18]],"d":"Converts this Note to a Diagnostic for serialization."},{"p":["FixIt","encode(to:)"],"f":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[" ",17],["encoder",2],[": ",17],["Encoder",18,82],[") ",17],["throws",12]],"s":[["func",12],[" ",17],["encode",7],["(",17],["to",1],[": ",17],["Encoder",18],[") ",17],["throws",12]]},{"p":["cNodeLayoutHash()"],"f":[["func",12],[" ",17],["cNodeLayoutHash",7],["() -> ",17],["Int",18,71]],"s":[["func",12],[" ",17],["cNodeLayoutHash",7],["() -> ",17],["Int",18]],"d":"Computes a hash value that describes the layout of all C nodes which are\npassed as opaque values between `SwiftSyntaxParser` and `SwiftSyntax`.\nThis should match the value returned by the `cNodeLayoutHash` function in\nthe `SwiftSyntax` module."}],"edges":{"conformer":[0,59,[],0,60,[],0,72,[],0,78,[],0,83,[],2,57,[],2,59,[],2,60,[],2,63,[],2,69,[],3,57,[],3,69,[],3,75,[],4,57,[],4,69,[],4,75,[],6,57,[],6,69,[],6,75,[],7,57,[],7,69,[]],"feature":[61,0,61,2,65,2,66,2,67,2,68,2,74,0,79,0],"member":[2,4,5,4,6,4,8,0,9,0,10,2,11,2,12,2,13,3,14,3,15,3,16,4,17,6,18,6,19,4,20,4,21,2,22,7,23,7,24,3,25,0,26,4,27,4,28,4,29,4,30,6,31,6,32,6,33,4,34,4,35,7,36,7,37,7,38,7,39,3,40,3,41,3,42,1,43,1,44,5,45,5,46,5,47,5,48,5,49,7,50,3]},"hints":[16,70,17,70,21,64,22,70,24,70,25,73,27,76,30,76,39,76,50,58,61,61,65,65,66,66,67,67,68,68,74,74,79,79],"sourcemap":[{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-syntax@swift-DEVELOPMENT-SNAPSHOT-2022-03-13-a/.build/checkouts/swift-syntax/Sources/SwiftSyntaxParser/CNodes.swift","symbols":[33,12,51]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-syntax@swift-DEVELOPMENT-SNAPSHOT-2022-03-13-a/.build/checkouts/swift-syntax/Sources/SwiftSyntaxParser/Diagnostic.swift","symbols":[18,12,3,21,7,14,24,7,13,28,7,15,37,13,39,41,9,24,61,14,50,77,13,41,86,13,40,96,14,7,98,13,37,101,13,38,104,13,35,107,13,36,110,9,23,121,14,49,128,14,4,130,16,6,132,15,30,137,15,32,140,15,31,143,11,18,151,14,2,152,9,10,153,9,12,154,9,11,158,13,33,161,13,34,164,13,28,167,13,26,170,13,29,172,13,27,187,16,5,207,25,47,216,25,48,223,25,45,230,9,44,237,9,46,252,9,20,267,9,19]},{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-syntax@swift-DEVELOPMENT-SNAPSHOT-2022-03-13-a/.build/checkouts/swift-syntax/Sources/SwiftSyntaxParser/SyntaxParser.swift","symbols":[22,12,0,25,7,8,31,7,9,33,13,25,44,12,1,65,21,42,99,21,43]}]}