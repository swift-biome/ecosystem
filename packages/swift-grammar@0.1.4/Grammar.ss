{"culture":"Grammar","dependencies":[],"extensions":[],"partitions":[{"namespace":"Grammar","communities":[{"community":"protocol","startIndex":0,"endIndex":12},{"community":"associatedtype","startIndex":12,"endIndex":18},{"community":"enum","startIndex":18,"endIndex":74},{"community":"struct","startIndex":74,"endIndex":82},{"community":"init","startIndex":82,"endIndex":95},{"community":"subscript","startIndex":95,"endIndex":97},{"community":"type.property","startIndex":97,"endIndex":144},{"community":"property","startIndex":144,"endIndex":166},{"community":"type.method","startIndex":166,"endIndex":188},{"community":"method","startIndex":188,"endIndex":211},{"community":"typealias","startIndex":211,"endIndex":230}]},{"namespace":"Swift","communities":[{"community":"type.method","startIndex":230,"endIndex":232},{"community":"typealias","startIndex":232,"endIndex":236}]}],"identifiers":["s7Grammar11LiteralRuleP","s7Grammar11ParsingRuleP","s7Grammar12TerminalRuleP","s7Grammar12UTF8TerminalP","s7Grammar13ASCIITerminalP","s7Grammar13UTF16TerminalP","s7Grammar14TraceableErrorP","s7Grammar15UnicodeTerminalP","s7Grammar17CharacterTerminalP","s7Grammar18ParsingDiagnosticsP","s7Grammar18TraceableErrorRootP","s7Grammar9DigitRuleP","s7Grammar11LiteralRuleP0B0Qa","s7Grammar11ParsingRuleP12ConstructionQa","s7Grammar11ParsingRuleP8LocationQa","s7Grammar11ParsingRuleP8TerminalQa","s7Grammar18ParsingDiagnosticsP10BreadcrumbQa","s7Grammar18ParsingDiagnosticsP6SourceQa","s7GrammarAAO","s7GrammarAAO12DecimalDigitO","s7GrammarAAO14HexDigitScalarO","s7GrammarAAO14HexDigitScalarO9LowercaseO","s7GrammarAAO18DecimalDigitScalarO","s7GrammarAAO22UnsignedIntegerLiteralO","s7GrammarAAO3EndO","s7GrammarAAO3PadO","s7GrammarAAO4JoinO","s7GrammarAAO6ReduceO","s7GrammarAAO7CollectO","s7GrammarAAO7DiscardO","s7GrammarAAO8EncodingO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE10AngleRightO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE10BraceRightO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE11BracketLeftO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE12BracketRightO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE13StartOfHeaderO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE14CarriageReturnO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE15ParenthesisLeftO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE16ParenthesisRightO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1EO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1UO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1UO9LowercaseO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1XO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1XO9LowercaseO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3AndO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3OneO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3SixO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3TwoO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4FiveO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4FourO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4NineO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4PlusO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4ZeroO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5ColonO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5CommaO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5EightO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5MinusO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5QuoteO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SevenO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SlashO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SpaceO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5ThreeO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6DollarO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6EqualsO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6PeriodO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE7NewlineO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE7PercentO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE8LinefeedO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE8QuestionO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9AngleLeftO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9BackslashO","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9BraceLeftO","s7GrammarAAO8HexDigitO","s7GrammarAAO8HexDigitO9LowercaseO","s7Grammar12ParsingErrorV","s7Grammar12ParsingErrorV5FrameV","s7Grammar12ParsingInputV","s7GrammarAAO13NoDiagnosticsV","s7GrammarAAO14ExpectedRegionV","s7GrammarAAO18DefaultDiagnosticsV","s7GrammarAAO20IntegerOverflowErrorV","s7GrammarAAO8ExpectedV","s7Grammar12ParsingErrorV2at7because5traceACyxGx_s0C0_pSayAC5FrameVyx_GGtcfc","s7Grammar12ParsingErrorV5FrameV5index4rule12constructionAEyx_Gx_ypXpypXptcfc","s7Grammar12ParsingInputVyACyxG6SourceQzcfc","s7Grammar13ASCIITerminalPyxs5UInt8Vcfc","s7Grammar13UTF16TerminalPyxs6UInt16Vcfc","s7Grammar15UnicodeTerminalPyxs0B0O6ScalarVcfc","s7Grammar17CharacterTerminalPyxSJcfc","s7Grammar18ParsingDiagnosticsPxycfc","s7GrammarAAO13NoDiagnosticsVADy_xGycfc","s7GrammarAAO14ExpectedRegionVADy_xq_Gycfc","s7GrammarAAO18DefaultDiagnosticsVADy_xGycfc","s7GrammarAAO20IntegerOverflowErrorVADy_xGycfc","s7GrammarAAO8ExpectedVADy_xGycfc","s7Grammar12ParsingInputVy6Source_11SubSequenceQZqd__cSXRd__AD_5IndexQZ5BoundRtd__luip","s7Grammar12ParsingInputVy6Source_7ElementQZAD_5IndexQZcip","s7Grammar11LiteralRuleP7literal0B0QzvpZ","s7Grammar12ParsingErrorV9namespaceSSvpZ","s7Grammar14TraceableErrorP9namespaceSSvpZ","s7Grammar9DigitRuleP5radix12ConstructionQzvpZ","s7GrammarAAO12DecimalDigitO5radixq0_vpZ","s7GrammarAAO14HexDigitScalarO5radixq_vpZ","s7GrammarAAO14HexDigitScalarO9LowercaseO5radixq_vpZ","s7GrammarAAO18DecimalDigitScalarO5radixq_vpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE10AngleRightO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE10BraceRightO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE11BracketLeftO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE12BracketRightO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE13StartOfHeaderO7literals010CollectionE3OneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE14CarriageReturnO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE15ParenthesisLeftO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE16ParenthesisRightO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1UO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1XO9LowercaseO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3AndO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3OneO7literals012CollectionOfD0Vyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3SixO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE3TwoO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4FiveO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4FourO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4NineO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4PlusO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE4ZeroO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5ColonO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5CommaO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5EightO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5MinusO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5QuoteO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SevenO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SlashO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5SpaceO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE5ThreeO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6DollarO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6EqualsO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6PeriodO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE7PercentO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE8LinefeedO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE8QuestionO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9AngleLeftO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9BackslashO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE9BraceLeftO7literals15CollectionOfOneVyq_GvpZ","s7GrammarAAO8HexDigitO5radixq0_vpZ","s7GrammarAAO8HexDigitO9LowercaseO5radixq0_vpZ","s7Grammar12ParsingErrorV4nexts0C0_pSgvp","s7Grammar12ParsingErrorV5FrameV12constructionypXpvp","s7Grammar12ParsingErrorV5FrameV4ruleypXpvp","s7Grammar12ParsingErrorV5FrameV5indexxvp","s7Grammar12ParsingErrorV5indexxvp","s7Grammar12ParsingErrorV5traceSayAC5FrameVyx_GGvp","s7Grammar12ParsingErrorV7contextSaySSGvp","s7Grammar12ParsingErrorV7problems0C0_pvp","s7Grammar12ParsingInputV11diagnosticsxvp","s7Grammar12ParsingInputV5index6Source_5IndexQZvp","s7Grammar12ParsingInputV6source6SourceQzvp","s7Grammar14TraceableErrorP4nexts0C0_pSgvp","s7Grammar14TraceableErrorP7contextSaySSGvp","s7Grammar14TraceableErrorPAAE11descriptionSSvp","s7Grammar18TraceableErrorRootP7messageSSvp","s7Grammar18TraceableErrorRootPAAE4nexts0C0_pSgvp","s7Grammar18TraceableErrorRootPAAE7contextSaySSGvp","s7GrammarAAO14ExpectedRegionV11descriptionSSvp","s7GrammarAAO18DefaultDiagnosticsV5stackSayAA12ParsingErrorV5FrameVy5IndexQz_GGvp","s7GrammarAAO18DefaultDiagnosticsV8frontierAA12ParsingErrorVy5IndexQzGSgvp","s7GrammarAAO20IntegerOverflowErrorV11descriptionSSvp","s7GrammarAAO8ExpectedV11descriptionSSvp","s7Grammar11LiteralRulePAAE5parseyyAA12ParsingInputVyqd__GzKAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAI_7ElementQYd__8TerminalRtzlFZ","s7Grammar11ParsingRuleP5parsey12ConstructionQzAA0B5InputVyqd__GzKAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","s7Grammar12TerminalRuleP5parse8terminal12ConstructionQzSg0B0Qz_tFZ","s7Grammar12TerminalRulePAAE5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0F11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__0B0RtzlFZ","s7GrammarAAO12DecimalDigitO5parse8terminalq0_Sgq__tFZ","s7GrammarAAO14HexDigitScalarO5parse8terminalq_Sgs7UnicodeO0D0V_tFZ","s7GrammarAAO14HexDigitScalarO9LowercaseO5parse8terminalq_Sgs7UnicodeO0D0V_tFZ","s7GrammarAAO18DecimalDigitScalarO5parse8terminalq_Sgs7UnicodeO0D0V_tFZ","s7GrammarAAO22UnsignedIntegerLiteralO5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0G11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAL_7ElementQYd__8TerminalRtzlFZ","s7GrammarAAO3EndO5parseyyAA12ParsingInputVyqd__GzK6Source_5IndexQYd__RszAI_7ElementQYd__Rs_AA0D11DiagnosticsRd__lFZ","s7GrammarAAO3PadO5parsey12ConstructionQzAA12ParsingInputVyqd__GzKAA0E11DiagnosticsRd__6Source_5IndexQYd__8LocationRt_AL_7ElementQYd__8TerminalRt_lFZ","s7GrammarAAO4JoinO5parseyq0_AA12ParsingInputVyqd__GzKAA0D11DiagnosticsRd__6Source_5IndexQYd__8LocationRt_AJ_7ElementQYd__8TerminalRt_lFZ","s7GrammarAAO5parse10diagnosing2as12ConstructionQy_x_q_mtKSlRzAA11ParsingRuleR_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzr0_lFZ","s7GrammarAAO5parse_2as12ConstructionQy_x_q_mtKSlRzAA11ParsingRuleR_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzr0_lFZ","s7GrammarAAO5parse_2as2inq0_x_q_mq0_mtKSlRzAA11ParsingRuleR_SmR0_8TerminalQy_7ElementRtz8LocationQy_5IndexRtzAIQy0_12ConstructionRt_r1_lFZ","s7GrammarAAO6ReduceO5parseyq_AA12ParsingInputVyqd__GzKAA0D11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAJ_7ElementQYd__8TerminalRtzlFZ","s7GrammarAAO7CollectO5parseyq_AA12ParsingInputVyqd__GzAA0D11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAJ_7ElementQYd__8TerminalRtzlFZ","s7GrammarAAO7DiscardO5parseyyAA12ParsingInputVyqd__GzAA0D11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAJ_7ElementQYd__8TerminalRtzlFZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1EO5parse8terminalytSgq__tFZ","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE7NewlineO5parseyyAA12ParsingInputVyqd__GzK6Source_5IndexQYd__RszAL_7ElementQYd__Rs_AA0F11DiagnosticsRd__lFZ","s7GrammarAAO8HexDigitO5parse8terminalq0_Sgq__tFZ","s7GrammarAAO8HexDigitO9LowercaseO5parse8terminalq0_Sgq__tFZ","s7Grammar12ParsingErrorV8annotate6source4line7newlineSSqd___SS11SubSequenceQyd__XESb7ElementQyd__XEt5IndexQyd__RszSKRd__lF","s7Grammar12ParsingInputV4next6Source_7ElementQZSgyF","s7Grammar12ParsingInputV5groupyqd_0_qd__m_qd_0_ACyxGzKXEtKr0_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd__Sgqd__Sgm_tAA0B4RuleRd__6Source_5IndexQZ8LocationRtd__AK_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_AFQyd_4_AFQyd_5_tqd___qd_0_qd_1_qd_2_qd_3_qd_4_qd_5_tm_tKAA0B4RuleRd__AaNRd_0_AaNRd_1_AaNRd_2_AaNRd_3_AaNRd_4_AaNRd_5_8LocationQyd_0_AORtd__8TerminalQyd_0_ARRtd__AOQyd_1_APRSARQyd_1_ASRSAOQyd_2_AURSARQyd_2_AVRSAOQyd_3_AWRSARQyd_3_AXRSAOQyd_4_AYRSARQyd_4_AZRSAOQyd_5_A_RSARQyd_5_A0_RS6Source_5IndexQZA1_RSA3__7ElementQZA2_RSr5_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_AFQyd_4_tqd___qd_0_qd_1_qd_2_qd_3_qd_4_tm_tKAA0B4RuleRd__AaMRd_0_AaMRd_1_AaMRd_2_AaMRd_3_AaMRd_4_8LocationQyd_0_ANRtd__8TerminalQyd_0_AQRtd__ANQyd_1_AORSAQQyd_1_ARRSANQyd_2_ATRSAQQyd_2_AURSANQyd_3_AVRSAQQyd_3_AWRSANQyd_4_AXRSAQQyd_4_AYRS6Source_5IndexQZAZRSA0__7ElementQZA_RSr4_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_AFQyd_3_tqd___qd_0_qd_1_qd_2_qd_3_tm_tKAA0B4RuleRd__AaLRd_0_AaLRd_1_AaLRd_2_AaLRd_3_8LocationQyd_0_AMRtd__8TerminalQyd_0_APRtd__AMQyd_1_ANRSAPQyd_1_AQRSAMQyd_2_ASRSAPQyd_2_ATRSAMQyd_3_AURSAPQyd_3_AVRS6Source_5IndexQZAWRSAY_7ElementQZAXRSr3_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_AFQyd_2_tqd___qd_0_qd_1_qd_2_tm_tKAA0B4RuleRd__AaKRd_0_AaKRd_1_AaKRd_2_8LocationQyd_0_ALRtd__8TerminalQyd_0_AORtd__ALQyd_1_AMRSAOQyd_1_APRSALQyd_2_ARRSAOQyd_2_ASRS6Source_5IndexQZATRSAV_7ElementQZAURSr2_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_AFQyd_1_tqd___qd_0_qd_1_tm_tKAA0B4RuleRd__AaJRd_0_AaJRd_1_8LocationQyd_0_AKRtd__8TerminalQyd_0_ANRtd__AKQyd_1_ALRSANQyd_1_AORS6Source_5IndexQZAQRSAS_7ElementQZARRSr1_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd___AFQyd_0_tqd___qd_0_tm_tKAA0B4RuleRd__AaIRd_0_8LocationQyd_0_AJRtd__8TerminalQyd_0_AMRtd__6Source_5IndexQZAKRSAP_7ElementQZANRSr0_lF","s7Grammar12ParsingInputV5parse2as12ConstructionQyd__qd__m_tKAA0B4RuleRd__6Source_5IndexQZ8LocationRtd__AI_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse2as2inqd_0_qd__m_qd_0_mtAA0B4RuleRd__SmRd_0_7ElementQyd_0_12ConstructionRtd__6Source_5IndexQZ8LocationRtd__AL_AHQZ8TerminalRtd__r0_lF","s7Grammar12ParsingInputV5parse2as2inyqd__m_ytmtAA0B4RuleRd__yt12ConstructionRtd__6Source_5IndexQZ8LocationRtd__AJ_7ElementQZ8TerminalRtd__lF","s7Grammar12ParsingInputV5parse6prefix6Source_11SubSequenceQZSi_tKF","s7Grammar18ParsingDiagnosticsP3popyyF","s7Grammar18ParsingDiagnosticsP4push5index3for2by10BreadcrumbQz6Source_5IndexQZ_qd_0_mqd__mtr0_lF","s7Grammar18ParsingDiagnosticsP5reset5index2to7becausey6Source_5IndexQZz_10BreadcrumbQzs5Error_pztF","s7GrammarAAO13NoDiagnosticsV3popyyF","s7GrammarAAO13NoDiagnosticsV4push5index3for2by5IndexQzAJ_qd_0_mqd__mtr0_lF","s7GrammarAAO13NoDiagnosticsV5reset5index2to7becausey5IndexQzz_AJs5Error_pztF","s7GrammarAAO18DefaultDiagnosticsV3popyyF","s7GrammarAAO18DefaultDiagnosticsV4push5index3for2byy5IndexQz_qd_0_mqd__mtr0_lF","s7GrammarAAO18DefaultDiagnosticsV5reset5index2to7becausey5IndexQzz_yts5Error_pztF","s7GrammarAAO13TerminalClassa","s7GrammarAAO14HexDigitScalarO8Terminala","s7GrammarAAO14HexDigitScalarO9LowercaseO8Terminala","s7GrammarAAO16TerminalSequencea","s7GrammarAAO18DecimalDigitScalarO8Terminala","s7GrammarAAO22UnsignedIntegerLiteralO8Locationa","s7GrammarAAO22UnsignedIntegerLiteralO8Terminala","s7GrammarAAO3PadO8Locationa","s7GrammarAAO3PadO8Terminala","s7GrammarAAO4JoinO8Locationa","s7GrammarAAO4JoinO8Terminala","s7GrammarAAO6ReduceO8Locationa","s7GrammarAAO6ReduceO8Terminala","s7GrammarAAO7CollectO8Locationa","s7GrammarAAO7CollectO8Terminala","s7GrammarAAO7DiscardO8Locationa","s7GrammarAAO7DiscardO8Terminala","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE1EO12Constructiona","s7GrammarAAO8EncodingOA2A13ASCIITerminalR_rlE6Hyphena","sSa7GrammarAA11ParsingRuleRzlE5parseySay12ConstructionQzGAA0B5InputVyqd__GzAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","sSq7GrammarAA11ParsingRuleRzlE5parsey12ConstructionQzSgAA0B5InputVyqd__GzAA0B11DiagnosticsRd__6Source_5IndexQYd__8LocationRtzAK_7ElementQYd__8TerminalRtzlFZ","sSa7GrammarAA11ParsingRuleRzlE8Locationa","sSa7GrammarAA11ParsingRuleRzlE8Terminala","sSq7GrammarAA11ParsingRuleRzlE8Locationa","sSq7GrammarAA11ParsingRuleRzlE8Terminala","sSJ","sSK","sSL1goiySbx_xtFZ","sSL1loiySbx_xtFZ","sSL2geoiySbx_xtFZ","sSL2leoiySbx_xtFZ","sSLsE1goiySbx_xtFZ","sSLsE2geoiySbx_xtFZ","sSLsE2leoiySbx_xtFZ","sSLsE3zzloiySnyxGx_xtFZ","sSLsE3zzlopys16PartialRangeUpToVyxGxFZ","sSLsE3zzzoPys16PartialRangeFromVyxGxFZ","sSLsE3zzzoiySNyxGx_xtFZ","sSLsE3zzzopys19PartialRangeThroughVyxGxFZ","sSQ","sSQ2eeoiySbx_xtFZ","sSS","sST","sSUsE8isSignedSbvpZ","sSUsE9magnitudexvp","sSUss17FixedWidthIntegerRzrlE3maxxvpZ","sSUss17FixedWidthIntegerRzrlE3minxvpZ","sSUss17FixedWidthIntegerRzrlE7exactlyxSgqd___tcSzRd__lufc","sSUss17FixedWidthIntegerRzrlEyxqd__cSzRd__lufc","sSX","sSa","sSb","sSi","sSl","sSm","sSq","sSxsE1loiySbx_xtFZ","sSxsE2eeoiySbx_xtFZ","sSz","sSz10isMultiple2ofSbx_tF","sSz12_RegexParserE9assertingxqd___tcSzRd__lufc","sSz3ggeoiyyxz_qd__tSzRd__lFZ","sSz3lleoiyyxz_qd__tSzRd__lFZ","sSzsE10isMultiple2ofSbx_tF","sSzsE11descriptionSSvp","sSzsE1aoiyxx_xtFZ","sSzsE1goiySbx_qd__tSzRd__lFZ","sSzsE1goiySbx_xtFZ","sSzsE1loiySbx_qd__tSzRd__lFZ","sSzsE1ooiyxx_xtFZ","sSzsE1xoiyxx_xtFZ","sSzsE20quotientAndRemainder10dividingByx0A0_x9remaindertx_tF","sSzsE2eeoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_qd__tSzRd__lFZ","sSzsE2geoiySbx_xtFZ","sSzsE2ggoiyxx_qd__tSzRd__lFZ","sSzsE2leoiySbx_qd__tSzRd__lFZ","sSzsE2leoiySbx_xtFZ","sSzsE2lloiyxx_qd__tSzRd__lFZ","sSzsE2neoiySbx_qd__tSzRd__lFZ","sSzsE2neoiySbx_xtFZ","sSzsE8advanced2byxSi_tF","sSzsE8distance2toSix_tF","sSzsExycfc","ss15CollectionOfOneV","ss17FixedWidthIntegerP","ss17FixedWidthIntegerPsE03bitB0Sivp","ss17FixedWidthIntegerPsE12littleEndianxvp","ss17FixedWidthIntegerPsE12littleEndianxx_tcfc","ss17FixedWidthIntegerPsE18truncatingIfNeededxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE1topyxxFZ","ss17FixedWidthIntegerPsE2amoiyxx_xtFZ","ss17FixedWidthIntegerPsE2apoiyxx_xtFZ","ss17FixedWidthIntegerPsE2asoiyxx_xtFZ","ss17FixedWidthIntegerPsE2ggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE2lloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3aggoiyxx_xtFZ","ss17FixedWidthIntegerPsE3alloiyxx_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3alloiyxx_xtFZ","ss17FixedWidthIntegerPsE3ameoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3apeoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3aseoiyyxz_xtFZ","ss17FixedWidthIntegerPsE3ggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE3lleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4aggeoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE4alleoiyyxz_qd__tSzRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSNyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2in5usingxSnyxG_qd__ztSGRd__lFZ","ss17FixedWidthIntegerPsE6random2inxSNyxG_tFZ","ss17FixedWidthIntegerPsE6random2inxSnyxG_tFZ","ss17FixedWidthIntegerPsE7exactlyxSgqd___tcSBRd__lufc","ss17FixedWidthIntegerPsE8clampingxqd___tcSzRd__lufc","ss17FixedWidthIntegerPsE9bigEndianxvp","ss17FixedWidthIntegerPsE9bigEndianxx_tcfc","ss17FixedWidthIntegerPsE_5radixxSgqd___SitcSyRd__lufc","ss17FixedWidthIntegerPsEyxSgSScfc","ss17FixedWidthIntegerPsEyxqd__cSBRd__lufc","ss18AdditiveArithmeticP2peoiyyxz_xtFZ","ss18AdditiveArithmeticP2seoiyyxz_xtFZ","ss18AdditiveArithmeticPsE1popyxxFZ","ss18AdditiveArithmeticPsE2peoiyyxz_xtFZ","ss18AdditiveArithmeticPsE2seoiyyxz_xtFZ","ss18AdditiveArithmeticPss27ExpressibleByIntegerLiteralRzrlE4zeroxvpZ","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss27ExpressibleByIntegerLiteralP07integerD0x0cD4TypeQz_tcfc","ss27ExpressibleByIntegerLiteralPss01_ab7BuiltincD0RzrlE07integerD0xx_tcfc","ss4Voida","ss5ErrorP","ss5UInt8V","ss6UInt16V","ss7UnicodeO","ss7UnicodeO6ScalarV","ss8SendableP"],"vertices":[{"p":["LiteralRule"],"f":[["protocol",12],[" ",17],["LiteralRule",7],[" : ",17],["ParsingRule",18,1],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Construction",18],[" == (), ",17],["Self",18],[".",17],["Terminal",18],[" : ",17],["Equatable",18,250]],"s":[["protocol",12],[" ",17],["LiteralRule",7]]},{"p":["ParsingRule"],"f":[["protocol",12],[" ",17],["ParsingRule",7]],"s":[["protocol",12],[" ",17],["ParsingRule",7]],"d":"A structured parsing rule."},{"p":["TerminalRule"],"f":[["protocol",12],[" ",17],["TerminalRule",7],[" : ",17],["ParsingRule",18,1]],"s":[["protocol",12],[" ",17],["TerminalRule",7]]},{"p":["UTF8Terminal"],"f":[["protocol",12],[" ",17],["UTF8Terminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UTF8Terminal",7]]},{"p":["ASCIITerminal"],"f":[["protocol",12],[" ",17],["ASCIITerminal",7],[" : ",17],["Equatable",18,250]],"s":[["protocol",12],[" ",17],["ASCIITerminal",7]],"d":"A terminal type that can be matched against an ASCII scalar."},{"p":["UTF16Terminal"],"f":[["protocol",12],[" ",17],["UTF16Terminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UTF16Terminal",7]]},{"p":["TraceableError"],"f":[["protocol",12],[" ",17],["TraceableError",7],[" : ",17],["CustomStringConvertible",18,335],[", ",17],["Error",18,341]],"s":[["protocol",12],[" ",17],["TraceableError",7]]},{"p":["UnicodeTerminal"],"f":[["protocol",12],[" ",17],["UnicodeTerminal",7],[" : ",17],["ASCIITerminal",18,4]],"s":[["protocol",12],[" ",17],["UnicodeTerminal",7]]},{"p":["CharacterTerminal"],"f":[["protocol",12],[" ",17],["CharacterTerminal",7],[" : ",17],["UnicodeTerminal",18,7]],"s":[["protocol",12],[" ",17],["CharacterTerminal",7]]},{"p":["ParsingDiagnostics"],"f":[["protocol",12],[" ",17],["ParsingDiagnostics",7]],"s":[["protocol",12],[" ",17],["ParsingDiagnostics",7]]},{"p":["TraceableErrorRoot"],"f":[["protocol",12],[" ",17],["TraceableErrorRoot",7],[" : ",17],["TraceableError",18,6]],"s":[["protocol",12],[" ",17],["TraceableErrorRoot",7]]},{"p":["DigitRule"],"f":[["protocol",12],[" ",17],["DigitRule",7],[" : ",17],["TerminalRule",18,2],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Construction",18],[" : ",17],["BinaryInteger",18,269]],"s":[["protocol",12],[" ",17],["DigitRule",7]]},{"p":["LiteralRule","Literal"],"f":[["associatedtype",12],[" ",17],["Literal",7],[" : ",17],["Sequence",18,253],[" ",17],["where",12],[" ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Self",18],[".",17],["Literal",18],[".",17],["Element",18]],"s":[["associatedtype",12],[" ",17],["Literal",7],[" : ",17],["Sequence",18]]},{"p":["ParsingRule","Construction"],"f":[["associatedtype",12],[" ",17],["Construction",7]],"s":[["associatedtype",12],[" ",17],["Construction",7]],"d":"The type of the constructions produced by a successful application of this \nparsing rule.\n\nImplementations should not report failure through an ``Optional`` \nconstruction type. Instead, implementations should [`throw`]() an ``Error``, \nwhich allows the library to perform appropriate cleanup and backtracking."},{"p":["ParsingRule","Location"],"f":[["associatedtype",12],[" ",17],["Location",7]],"s":[["associatedtype",12],[" ",17],["Location",7]],"d":"The index type of the ``ParsingInput.source`` this rule expects.\n\nParsing rules must be associated with a source location type because \nsome applications may wish to store these indices in the returned \n``Construction``s. If the source location type were not fixed, then \ndifferent calls to ``parse(_:)`` could potentially return constructions\nof varying types, which would require additional abstraction, which would \nbe inefficient.\n\n>   Tip: \n    Implementations can satisfy this requirement with generics, allowing \n    parsing rules to be reused for different input types. "},{"p":["ParsingRule","Terminal"],"f":[["associatedtype",12],[" ",17],["Terminal",7]],"s":[["associatedtype",12],[" ",17],["Terminal",7]],"d":"The element type of the ``ParsingInput.source`` this rule expects."},{"p":["ParsingDiagnostics","Breadcrumb"],"f":[["associatedtype",12],[" ",17],["Breadcrumb",7]],"s":[["associatedtype",12],[" ",17],["Breadcrumb",7]]},{"p":["ParsingDiagnostics","Source"],"f":[["associatedtype",12],[" ",17],["Source",7],[" : ",17],["Collection",18,264]],"s":[["associatedtype",12],[" ",17],["Source",7],[" : ",17],["Collection",18]]},{"p":["Grammar"],"f":[["enum",12],[" ",17],["Grammar",7]],"s":[["enum",12],[" ",17],["Grammar",7]],"d":"A namespace for structured parsing utilities."},{"p":["Grammar","DecimalDigit"],"f":[["enum",12],[" ",17],["DecimalDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Terminal",18],[" : ",17],["BinaryInteger",18,269],[", ",17],["Construction",18],[" : ",17],["BinaryInteger",18,269]],"s":[["enum",12],[" ",17],["DecimalDigit",7]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["Grammar","HexDigitScalar"],"f":[["enum",12],[" ",17],["HexDigitScalar",7],["<",17],["Location",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,269]],"s":[["enum",12],[" ",17],["HexDigitScalar",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","HexDigitScalar","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","DecimalDigitScalar"],"f":[["enum",12],[" ",17],["DecimalDigitScalar",7],["<",17],["Location",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Construction",18],[" : ",17],["BinaryInteger",18,269]],"s":[["enum",12],[" ",17],["DecimalDigitScalar",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","UnsignedIntegerLiteral"],"f":[["enum",12],[" ",17],["UnsignedIntegerLiteral",7],["<",17],["Rule",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["DigitRule",18,11],[", ",17],["Rule",18],[".",17],["Construction",18],[" : ",17],["FixedWidthInteger",18,296]],"s":[["enum",12],[" ",17],["UnsignedIntegerLiteral",7]],"c":[["Rule",1,"DigitRule",11],["Rule.Construction",1,"FixedWidthInteger",296]],"g":[["Rule",0,0]]},{"p":["Grammar","End"],"f":[["enum",12],[" ",17],["End",7],["<",17],["Location",0],[", ",17],["Terminal",0],[">",17]],"s":[["enum",12],[" ",17],["End",7]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Pad"],"f":[["enum",12],[" ",17],["Pad",7],["<",17],["Rule",0],[", ",17],["Padding",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Padding",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Padding",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Padding",18],[".",17],["Terminal",18],[", ",17],["Padding",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Pad",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]]},{"p":["Grammar","Join"],"f":[["enum",12],[" ",17],["Join",7],["<",17],["Rule",0],[", ",17],["Separator",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Separator",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,265],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Separator",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Separator",18],[".",17],["Terminal",18],[", ",17],["Separator",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Join",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]]},{"p":["Grammar","Reduce"],"f":[["enum",12],[" ",17],["Reduce",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,265],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["enum",12],[" ",17],["Reduce",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Grammar","Collect"],"f":[["enum",12],[" ",17],["Collect",7],["<",17],["Rule",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Construction",18],[" : ",17],["RangeReplaceableCollection",18,265],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Construction",18],[".",17],["Element",18]],"s":[["enum",12],[" ",17],["Collect",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]]},{"p":["Grammar","Discard"],"f":[["enum",12],[" ",17],["Discard",7],["<",17],["Rule",0],["> ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ()",17]],"s":[["enum",12],[" ",17],["Discard",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]]},{"p":["Grammar","Encoding"],"f":[["enum",12],[" ",17],["Encoding",7],["<",17],["Location",0],[", ",17],["Terminal",0],[">",17]],"s":[["enum",12],[" ",17],["Encoding",7]],"g":[["Location",0,0],["Terminal",1,0]],"d":"A generic context for unicode definitions."},{"p":["Grammar","Encoding","AngleRight"],"f":[["enum",12],[" ",17],["AngleRight",7]],"s":[["enum",12],[" ",17],["AngleRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","BraceRight"],"f":[["enum",12],[" ",17],["BraceRight",7]],"s":[["enum",12],[" ",17],["BraceRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","BracketLeft"],"f":[["enum",12],[" ",17],["BracketLeft",7]],"s":[["enum",12],[" ",17],["BracketLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","BracketRight"],"f":[["enum",12],[" ",17],["BracketRight",7]],"s":[["enum",12],[" ",17],["BracketRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","StartOfHeader"],"f":[["enum",12],[" ",17],["StartOfHeader",7]],"s":[["enum",12],[" ",17],["StartOfHeader",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","CarriageReturn"],"f":[["enum",12],[" ",17],["CarriageReturn",7]],"s":[["enum",12],[" ",17],["CarriageReturn",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","ParenthesisLeft"],"f":[["enum",12],[" ",17],["ParenthesisLeft",7]],"s":[["enum",12],[" ",17],["ParenthesisLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","ParenthesisRight"],"f":[["enum",12],[" ",17],["ParenthesisRight",7]],"s":[["enum",12],[" ",17],["ParenthesisRight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","E"],"f":[["enum",12],[" ",17],["E",7]],"s":[["enum",12],[" ",17],["E",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","U"],"f":[["enum",12],[" ",17],["U",7]],"s":[["enum",12],[" ",17],["U",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","U","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","X"],"f":[["enum",12],[" ",17],["X",7]],"s":[["enum",12],[" ",17],["X",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","X","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","And"],"f":[["enum",12],[" ",17],["And",7]],"s":[["enum",12],[" ",17],["And",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","One"],"f":[["enum",12],[" ",17],["One",7]],"s":[["enum",12],[" ",17],["One",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Six"],"f":[["enum",12],[" ",17],["Six",7]],"s":[["enum",12],[" ",17],["Six",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Two"],"f":[["enum",12],[" ",17],["Two",7]],"s":[["enum",12],[" ",17],["Two",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Five"],"f":[["enum",12],[" ",17],["Five",7]],"s":[["enum",12],[" ",17],["Five",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Four"],"f":[["enum",12],[" ",17],["Four",7]],"s":[["enum",12],[" ",17],["Four",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Nine"],"f":[["enum",12],[" ",17],["Nine",7]],"s":[["enum",12],[" ",17],["Nine",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Plus"],"f":[["enum",12],[" ",17],["Plus",7]],"s":[["enum",12],[" ",17],["Plus",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Zero"],"f":[["enum",12],[" ",17],["Zero",7]],"s":[["enum",12],[" ",17],["Zero",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Colon"],"f":[["enum",12],[" ",17],["Colon",7]],"s":[["enum",12],[" ",17],["Colon",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Comma"],"f":[["enum",12],[" ",17],["Comma",7]],"s":[["enum",12],[" ",17],["Comma",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Eight"],"f":[["enum",12],[" ",17],["Eight",7]],"s":[["enum",12],[" ",17],["Eight",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Minus"],"f":[["enum",12],[" ",17],["Minus",7]],"s":[["enum",12],[" ",17],["Minus",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Quote"],"f":[["enum",12],[" ",17],["Quote",7]],"s":[["enum",12],[" ",17],["Quote",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Seven"],"f":[["enum",12],[" ",17],["Seven",7]],"s":[["enum",12],[" ",17],["Seven",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Slash"],"f":[["enum",12],[" ",17],["Slash",7]],"s":[["enum",12],[" ",17],["Slash",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Space"],"f":[["enum",12],[" ",17],["Space",7]],"s":[["enum",12],[" ",17],["Space",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Three"],"f":[["enum",12],[" ",17],["Three",7]],"s":[["enum",12],[" ",17],["Three",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Dollar"],"f":[["enum",12],[" ",17],["Dollar",7]],"s":[["enum",12],[" ",17],["Dollar",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Equals"],"f":[["enum",12],[" ",17],["Equals",7]],"s":[["enum",12],[" ",17],["Equals",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Period"],"f":[["enum",12],[" ",17],["Period",7]],"s":[["enum",12],[" ",17],["Period",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Newline"],"f":[["enum",12],[" ",17],["Newline",7]],"s":[["enum",12],[" ",17],["Newline",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Percent"],"f":[["enum",12],[" ",17],["Percent",7]],"s":[["enum",12],[" ",17],["Percent",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Linefeed"],"f":[["enum",12],[" ",17],["Linefeed",7]],"s":[["enum",12],[" ",17],["Linefeed",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Question"],"f":[["enum",12],[" ",17],["Question",7]],"s":[["enum",12],[" ",17],["Question",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","AngleLeft"],"f":[["enum",12],[" ",17],["AngleLeft",7]],"s":[["enum",12],[" ",17],["AngleLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","Backslash"],"f":[["enum",12],[" ",17],["Backslash",7]],"s":[["enum",12],[" ",17],["Backslash",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","Encoding","BraceLeft"],"f":[["enum",12],[" ",17],["BraceLeft",7]],"s":[["enum",12],[" ",17],["BraceLeft",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Grammar","HexDigit"],"f":[["enum",12],[" ",17],["HexDigit",7],["<",17],["Location",0],[", ",17],["Terminal",0],[", ",17],["Construction",0],["> ",17],["where",12],[" ",17],["Terminal",18],[" : ",17],["BinaryInteger",18,269],[", ",17],["Construction",18],[" : ",17],["BinaryInteger",18,269]],"s":[["enum",12],[" ",17],["HexDigit",7]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["Grammar","HexDigit","Lowercase"],"f":[["enum",12],[" ",17],["Lowercase",7]],"s":[["enum",12],[" ",17],["Lowercase",7]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]]},{"p":["ParsingError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ParsingError",7],["<",17],["Index",0],[">",17]],"s":[["struct",12],[" ",17],["ParsingError",7]],"g":[["Index",0,0]],"d":"An error type that indicates the furthest-successful parse, and provides a \nstack trace detailing how the parser got there.\n\nNone of the structured parsers defined in ``/swift-grammar`` throw this error \ndirectly. Instead, the ``Grammar/DefaultDiagnostics`` engine computes it\nbased on the diagnostic engine’s internal state when encountering \ninvalid input.\n\nCustom ``ParsingRule`` implementations should not throw this error either."},{"p":["ParsingError","Frame"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["Frame",7]],"s":[["struct",12],[" ",17],["Frame",7]],"g":[["Index",0,0]],"d":"A diagnostic stack frame, corresponding to a structured ``ParsingRule`` invocation.\n\nOnly the ``Grammar/DefaultDiagnostics`` engine tracks call stack state."},{"p":["ParsingInput"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ParsingInput",7],["<",17],["Diagnostics",0],["> ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["struct",12],[" ",17],["ParsingInput",7]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]],"d":"A mutable interface for interacting with source input in a safe and \nstructured manner.\n\nThe [`Diagnostics`]() generic parameter provides a zero-cost abstraction \nfor configuring the debugging information emitted if parsing fails."},{"p":["Grammar","NoDiagnostics"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["NoDiagnostics",7],["<",17],["Source",0],["> ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,264]],"s":[["struct",12],[" ",17],["NoDiagnostics",7]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"d":"A performance-optimized diagnostic engine that maintains minimal internal \nstate, and emits no diagnostics.\n\nParsing with ``Grammar//NoDiagnostics`` is efficient, but does not provide \nuseful debugging information. The errors it emits may have little to do \nwith the intuitive reason why parsing failed.\n\nFor richer debugging information, use ``Grammar//DefaultDiagnostics`` instead."},{"p":["Grammar","ExpectedRegion"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["ExpectedRegion",7],["<",17],["Base",0],[", ",17],["Exclusion",0],[">",17]],"s":[["struct",12],[" ",17],["ExpectedRegion",7]],"g":[["Base",0,0],["Exclusion",1,0]]},{"p":["Grammar","DefaultDiagnostics"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["DefaultDiagnostics",7],["<",17],["Source",0],["> ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,264]],"s":[["struct",12],[" ",17],["DefaultDiagnostics",7]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"d":"A debuggability-optimized diagnostic engine that maintains an internal \ncall stack, and emits rich diagnostics.\n\nParsing with ``Grammar//DefaultDiagnostics`` less efficient than parsing with \n``Grammar//NoDiagnostics``. However, the errors it emits may be more useful for \nunderstanding the intuitive reason why parsing failed."},{"p":["Grammar","IntegerOverflowError"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["IntegerOverflowError",7],["<",17],["T",0],[">",17]],"s":[["struct",12],[" ",17],["IntegerOverflowError",7]],"g":[["T",0,0]]},{"p":["Grammar","Expected"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["Expected",7],["<",17],["T",0],[">",17]],"s":[["struct",12],[" ",17],["Expected",7]],"g":[["T",0,0]]},{"p":["ParsingError","init(at:because:trace:)"],"f":[["init",10],["(",17],["at",1],[" ",17],["index",2],[": ",17],["Index",18],[", ",17],["because",1],[" ",17],["problem",2],[": ",17],["Error",18,341],[", ",17],["trace",1],[": [",17],["ParsingError",18,74],["<",17],["Index",18],[">.",17],["Frame",18,75],["])",17]],"s":[["init",10],["(",17],["at",1],[": ",17],["Index",18],[", ",17],["because",1],[": ",17],["Error",18],[", ",17],["trace",1],[": [",17],["ParsingError",18],["<",17],["Index",18],[">.",17],["Frame",18],["])",17]],"g":[["Index",0,0]]},{"p":["ParsingError","Frame","init(index:rule:construction:)"],"f":[["init",10],["(",17],["index",1],[": ",17],["Index",18],[", ",17],["rule",1],[": ",17],["Any",12],[".Type, ",17],["construction",1],[": ",17],["Any",12],[".Type)",17]],"s":[["init",10],["(",17],["index",1],[": ",17],["Index",18],[", ",17],["rule",1],[": ",17],["Any",12],[".Type, ",17],["construction",1],[": ",17],["Any",12],[".Type)",17]],"g":[["Index",0,0]],"d":"Creates a stack frame.\n-   parameters:\n    - index: An index into an associated input source.\n    - rule: A metatype indicating the parsing rule associated with this stack frame.\n    - construction: A metatype indicating the expected parsing result of this stack frame."},{"p":["ParsingInput","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["source",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[")",17]],"s":[["init",10],["(",17],["Diagnostics",18],[".",17],["Source",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["ASCIITerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["UInt8",18,342],[")",17]],"s":[["init",10],["(",17],["UInt8",18],[")",17]]},{"p":["UTF16Terminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["UInt16",18,343],[")",17]],"s":[["init",10],["(",17],["UInt16",18],[")",17]]},{"p":["UnicodeTerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["Unicode",18,344],[".",17],["Scalar",18,345],[")",17]],"s":[["init",10],["(",17],["Unicode",18],[".",17],["Scalar",18],[")",17]]},{"p":["CharacterTerminal","init(_:)"],"f":[["init",10],["(",17],["_",1],[": ",17],["Character",18,236],[")",17]],"s":[["init",10],["(",17],["Character",18],[")",17]]},{"p":["ParsingDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["Grammar","NoDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":89},{"p":["Grammar","ExpectedRegion","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"g":[["Base",0,0],["Exclusion",1,0]]},{"p":["Grammar","DefaultDiagnostics","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":89},{"p":["Grammar","IntegerOverflowError","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"g":[["T",0,0]]},{"p":["Grammar","Expected","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"g":[["T",0,0]]},{"p":["ParsingInput","subscript(_:)"],"f":[["subscript",10],["<",17],["Indices",0],[">(",17],["range",2],[": ",17],["Indices",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18],[" ",17],["where",12],[" ",17],["Indices",18],[" : ",17],["RangeExpression",18,260],[", ",17],["Indices",18],[".",17],["Bound",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["<",17],["Indices",0],[">(",17],["Indices",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Indices",1,"RangeExpression",260],["Indices.Bound",2,"Diagnostics.Source.Index"]],"g":[["Diagnostics",0,0],["Indices",0,1]]},{"p":["ParsingInput","subscript(_:)"],"f":[["subscript",10],["(",17],["index",2],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[") -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["LiteralRule","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["Self",18],[".",17],["Literal",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["Self",18],[".",17],["Literal",18]]},{"p":["ParsingError","namespace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18]],"d":"Returns the string [`\"parsing error\"`]().","o":99},{"p":["TraceableError","namespace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["namespace",7],[": ",17],["String",18]]},{"p":["DigitRule","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Self",18],[".",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Self",18],[".",17],["Construction",18]]},{"p":["Grammar","DecimalDigit","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":100},{"p":["Grammar","HexDigitScalar","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]]},{"p":["Grammar","HexDigitScalar","Lowercase","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":100},{"p":["Grammar","DecimalDigitScalar","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]]},{"p":["Grammar","Encoding","AngleRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","BraceRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","BracketLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","BracketRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","StartOfHeader","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","CarriageReturn","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","ParenthesisLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","ParenthesisRight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","U","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","X","Lowercase","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","And","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","One","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Six","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Two","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Five","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Four","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Nine","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Plus","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Zero","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Colon","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Comma","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Eight","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Minus","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Quote","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Seven","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Slash","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Space","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Three","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Dollar","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Equals","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Period","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Percent","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Linefeed","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Question","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","AngleLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","Backslash","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","Encoding","BraceLeft","literal"],"f":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18,295],["<",17],["Terminal",18],["> { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["literal",7],[": ",17],["CollectionOfOne",18],["<",17],["Terminal",18],[">",17]],"o":97},{"p":["Grammar","HexDigit","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":100},{"p":["Grammar","HexDigit","Lowercase","radix"],"f":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["radix",7],[": ",17],["Construction",18]],"o":100},{"p":["ParsingError","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,341],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]],"o":155},{"p":["ParsingError","Frame","construction"],"f":[["let",12],[" ",17],["construction",7],[": ",17],["Any",12],[".Type",17]],"s":[["let",12],[" ",17],["construction",7],[": ",17],["Any",12],[".Type",17]],"d":"The ``ParsingRule//Construction`` type associated with \n``rule``, if ``rule`` is a ``ParsingRule``. If ``rule`` is a compound \n(tuple) rule, this property contains a tuple of the same arity, \ncontaining the ``ParsingRule//Construction`` types of each of its \nsubrules."},{"p":["ParsingError","Frame","rule"],"f":[["let",12],[" ",17],["rule",7],[": ",17],["Any",12],[".Type",17]],"s":[["let",12],[" ",17],["rule",7],[": ",17],["Any",12],[".Type",17]],"d":"The parsing rule associated with this stack frame. \n\nThis property is an [`Any`]() metatype, and not a \n``ParsingRule`` metatype, because this stack frame may have been \ngenerated by a compound (tuple) rule."},{"p":["ParsingError","Frame","index"],"f":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"s":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"d":"Indicates the position in the ``ParsingInput.source`` where \nthe parser started attempting to apply ``rule``."},{"p":["ParsingError","index"],"f":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"s":[["let",12],[" ",17],["index",7],[": ",17],["Index",18]],"d":"The index of the first invalid terminal in the input, or the ``Collection/.endIndex``\nof the input. \n\nIf the parser attempted to apply multiple rules via backtracking, this \nindex comes from the longest successful parse."},{"p":["ParsingError","trace"],"f":[["let",12],[" ",17],["trace",7],[": [",17],["ParsingError",18,74],["<",17],["Index",18],[">.",17],["Frame",18,75],["]",17]],"s":[["let",12],[" ",17],["trace",7],[": [",17],["ParsingError",18],["<",17],["Index",18],[">.",17],["Frame",18],["]",17]]},{"p":["ParsingError","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,252],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]],"o":156},{"p":["ParsingError","problem"],"f":[["let",12],[" ",17],["problem",7],[": ",17],["Error",18,341]],"s":[["let",12],[" ",17],["problem",7],[": ",17],["Error",18]],"d":"The underlying parsing error."},{"p":["ParsingInput","diagnostics"],"f":[["var",12],[" ",17],["diagnostics",7],[": ",17],["Diagnostics",18]],"s":[["var",12],[" ",17],["diagnostics",7],[": ",17],["Diagnostics",18]]},{"p":["ParsingInput","index"],"f":[["var",12],[" ",17],["index",7],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18]],"s":[["var",12],[" ",17],["index",7],[": ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18]]},{"p":["ParsingInput","source"],"f":[["let",12],[" ",17],["source",7],[": ",17],["Diagnostics",18],[".",17],["Source",18]],"s":[["let",12],[" ",17],["source",7],[": ",17],["Diagnostics",18],[".",17],["Source",18]]},{"p":["TraceableError","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,341],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]]},{"p":["TraceableError","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,252],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]]},{"p":["TraceableError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":336},{"p":["TraceableErrorRoot","message"],"f":[["var",12],[" ",17],["message",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["message",7],[": ",17],["String",18]]},{"p":["TraceableErrorRoot","next"],"f":[["var",12],[" ",17],["next",7],[": ",17],["Error",18,341],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["next",7],[": ",17],["Error",18],["?",17]]},{"p":["TraceableErrorRoot","context"],"f":[["var",12],[" ",17],["context",7],[": [",17],["String",18,252],["] { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["context",7],[": [",17],["String",18],["]",17]]},{"p":["Grammar","ExpectedRegion","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":336},{"p":["Grammar","DefaultDiagnostics","stack"],"f":[["var",12],[" ",17],["stack",7],[": [",17],["ParsingError",18,74],["<",17],["Source",18],[".",17],["Index",18],[">.",17],["Frame",18,75],["]",17]],"s":[["var",12],[" ",17],["stack",7],[": [",17],["ParsingError",18],["<",17],["Source",18],[".",17],["Index",18],[">.",17],["Frame",18],["]",17]]},{"p":["Grammar","DefaultDiagnostics","frontier"],"f":[["var",12],[" ",17],["frontier",7],[": ",17],["ParsingError",18,74],["<",17],["Source",18],[".",17],["Index",18],[">?",17]],"s":[["var",12],[" ",17],["frontier",7],[": ",17],["ParsingError",18],["<",17],["Source",18],[".",17],["Index",18],[">?",17]]},{"p":["Grammar","IntegerOverflowError","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":336},{"p":["Grammar","Expected","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,252],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"o":336},{"p":["LiteralRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"o":167},{"p":["ParsingRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"d":"Attempts to parse an instance of ``Construction`` from the given \nparsing input.\n\nThe implementation is not required to clean up the state of the `input`\nupon throwing an error; this is handled by the library.\n\nImplementations *should* interact with the given ``ParsingInput`` by \ncalling its methods and subscripts. Don’t overwrite the [`inout`]() binding or its \nmutable stored properties (``ParsingInput/.index`` and ``ParsingInput/.diagnostics``)\nunless you really know what you’re doing.\n\n>   Tip: \n    Mutating `input` does *not* invalidate its indices. You can always \n    store an ``ParsingInput/.index`` and dereference it later, as long \n    as you do not overwrite the [`inout`]() binding elsewhere."},{"p":["TerminalRule","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Self",18],[".",17],["Terminal",18],[") -> ",17],["Self",18],[".",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Self",18],[".",17],["Terminal",18],[") -> ",17],["Self",18],[".",17],["Construction",18],["?",17]]},{"p":["TerminalRule","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Self",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Self",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Self",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Self.Location",2,"Diagnostics.Source.Index"],["Self.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,1]],"o":167},{"p":["Grammar","DecimalDigit","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":168},{"p":["Grammar","HexDigitScalar","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,344],[".",17],["Scalar",18,345],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","HexDigitScalar","Lowercase","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,344],[".",17],["Scalar",18,345],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]],"o":168},{"p":["Grammar","DecimalDigitScalar","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18,344],[".",17],["Scalar",18,345],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Unicode",18],[".",17],["Scalar",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","UnsignedIntegerLiteral","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18]],"c":[["Rule",1,"DigitRule",11],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",1,"FixedWidthInteger",296],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","End","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[", ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Location",2,"Diagnostics.Source.Index"],["Terminal",2,"Diagnostics.Source.Element"],["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Location",0,0],["Terminal",1,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","Pad","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Padding",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Padding",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"],["Padding.Location",2,"Diagnostics.Source.Index"],["Padding.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Padding",1,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","Join","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Separator",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Separator",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"],["Separator.Location",2,"Diagnostics.Source.Index"],["Separator.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","parse(diagnosing:as:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["diagnosing",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,264],[", ",17],["Root",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Root",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Root",18],[".",17],["Location",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["diagnosing",1],[": ",17],["Source",18],[", ",17],["as",1],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18]],"c":[["Source",1,"Collection",264],["Root",1,"ParsingRule",1],["Source.Element",2,"Root.Terminal"],["Source.Index",2,"Root.Location"]],"g":[["Source",0,0],["Root",1,0]]},{"p":["Grammar","parse(_:as:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,264],[", ",17],["Root",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Root",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Root",18],[".",17],["Location",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Root",0],[">(",17],["Source",18],[", ",17],["as",1],[": ",17],["Root",18],[".Type) ",17],["throws",12],[" -> ",17],["Root",18],[".",17],["Construction",18]],"c":[["Source",1,"Collection",264],["Root",1,"ParsingRule",1],["Source.Element",2,"Root.Terminal"],["Source.Index",2,"Root.Location"]],"g":[["Source",0,0],["Root",1,0]]},{"p":["Grammar","parse(_:as:in:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["_",1],[" ",17],["source",2],[": ",17],["Source",18],[", ",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Vector",18],[".Type) ",17],["throws",12],[" -> ",17],["Vector",18],[" ",17],["where",12],[" ",17],["Source",18],[" : ",17],["Collection",18,264],[", ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Vector",18],[" : ",17],["RangeReplaceableCollection",18,265],[", ",17],["Source",18],[".",17],["Element",18],[" == ",17],["Rule",18],[".",17],["Terminal",18],[", ",17],["Source",18],[".",17],["Index",18],[" == ",17],["Rule",18],[".",17],["Location",18],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Vector",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Source",0],[", ",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["Source",18],[", ",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Vector",18],[".Type) ",17],["throws",12],[" -> ",17],["Vector",18]],"c":[["Source",1,"Collection",264],["Rule",1,"ParsingRule",1],["Vector",1,"RangeReplaceableCollection",265],["Source.Element",2,"Rule.Terminal"],["Source.Index",2,"Rule.Location"],["Rule.Construction",2,"Vector.Element"]],"g":[["Source",0,0],["Rule",1,0],["Vector",2,0]]},{"p":["Grammar","Reduce","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Construction",1,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","Collect","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) -> ",17],["Construction",18],[" ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> ",17],["Construction",18]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Construction",1,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","Discard","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">)",17]],"c":[["Rule",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Rule.Construction",2,"()"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Rule",0,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","Encoding","E","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18,340],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Void",18],["?",17]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":168},{"p":["Grammar","Encoding","Newline","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" ",17],["where",12],[" ",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],[", ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12]],"c":[["Location",2,"Diagnostics.Source.Index"],["Terminal",1,"ASCIITerminal",4],["Terminal",2,"Diagnostics.Source.Element"],["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Location",0,0],["Terminal",1,0],["Diagnostics",0,1]],"o":167},{"p":["Grammar","HexDigit","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":168},{"p":["Grammar","HexDigit","Lowercase","parse(terminal:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["terminal",1],[": ",17],["Terminal",18],[") -> ",17],["Construction",18],["?",17]],"c":[["Terminal",1,"BinaryInteger",269],["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Terminal",1,0],["Construction",2,0]],"o":168},{"p":["ParsingError","annotate(source:line:newline:)"],"f":[["func",12],[" ",17],["annotate",7],["<",17],["Background",0],[">(",17],["source",1],[" ",17],["background",2],[": ",17],["Background",18],[", ",17],["line",1],[": (",17],["Background",18],[".",17],["SubSequence",18],[") -> ",17],["String",18,252],[", ",17],["newline",1],[": (",17],["Background",18],[".",17],["Element",18],[") -> ",17],["Bool",18,262],[") -> ",17],["String",18,252],[" ",17],["where",12],[" ",17],["Index",18],[" == ",17],["Background",18],[".",17],["Index",18],[", ",17],["Background",18],[" : ",17],["BidirectionalCollection",18,237]],"s":[["func",12],[" ",17],["annotate",7],["<",17],["Background",0],[">(",17],["source",1],[": ",17],["Background",18],[", ",17],["line",1],[": (",17],["Background",18],[".",17],["SubSequence",18],[") -> ",17],["String",18],[", ",17],["newline",1],[": (",17],["Background",18],[".",17],["Element",18],[") -> ",17],["Bool",18],[") -> ",17],["String",18]],"c":[["Index",2,"Background.Index"],["Background",1,"BidirectionalCollection",237]],"g":[["Index",0,0],["Background",0,1]]},{"p":["ParsingInput","next()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["next",7],["() -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],["?",17]],"s":[["func",12],[" ",17],["next",7],["() -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18],["?",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["ParsingInput","group(_:_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["group",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["_",1],[": ",17],["Rule",18],[".Type, ",17],["_",1],[" ",17],["body",2],[": (",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[") ",17],["throws",12],[" -> ",17],["Construction",18]],"s":[["func",12],[" ",17],["group",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["Rule",18],[".Type, (",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) ",17],["throws",12],[" -> ",17],["Construction",18],[") ",17],["throws",12],[" -> ",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0],["Rule",0,1],["Construction",1,1]],"d":"Applies a parsing rule, or a group of parsing rules, appropriately \nhandling cleanup, backtracking, and diagnostic reporting if the parsing \nrule throws an error.\n\nThis API is used by other library methods that are emitted into the \nclient. Although it is safe to use, library users should rarely need \nto call it directly."},{"p":["ParsingInput","parse(as:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],["?.Type) -> ",17],["Rule",18],[".",17],["Construction",18],["? ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],["?.Type) -> ",17],["Rule",18],[".",17],["Construction",18],["?",17]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[", ",17],["T6",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[", ",17],["T6",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[", ",17],["T6",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T5",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T6",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["T5",18],[".",17],["Location",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["T5",18],[".",17],["Terminal",18],[", ",17],["T5",18],[".",17],["Location",18],[" == ",17],["T6",18],[".",17],["Location",18],[", ",17],["T5",18],[".",17],["Terminal",18],[" == ",17],["T6",18],[".",17],["Terminal",18],[", ",17],["T6",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T6",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[", ",17],["T6",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[", ",17],["T6",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[", ",17],["T6",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T5",1,"ParsingRule",1],["T6",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"T5.Location"],["T4.Terminal",2,"T5.Terminal"],["T5.Location",2,"T6.Location"],["T5.Terminal",2,"T6.Terminal"],["T6.Location",2,"Diagnostics.Source.Index"],["T6.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1],["T5",5,1],["T6",6,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T5",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["T5",18],[".",17],["Location",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["T5",18],[".",17],["Terminal",18],[", ",17],["T5",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T5",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[", ",17],["T5",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[", ",17],["T5",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[", ",17],["T5",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T5",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"T5.Location"],["T4.Terminal",2,"T5.Terminal"],["T5.Location",2,"Diagnostics.Source.Index"],["T5.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1],["T5",5,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T4",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["T4",18],[".",17],["Location",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["T4",18],[".",17],["Terminal",18],[", ",17],["T4",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T4",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[", ",17],["T4",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[", ",17],["T4",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[", ",17],["T4",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T4",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"T4.Location"],["T3.Terminal",2,"T4.Terminal"],["T4.Location",2,"Diagnostics.Source.Index"],["T4.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1],["T4",4,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T3",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["T3",18],[".",17],["Location",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["T3",18],[".",17],["Terminal",18],[", ",17],["T3",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T3",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[", ",17],["T3",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[", ",17],["T3",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[", ",17],["T3",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T3",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"T3.Location"],["T2.Terminal",2,"T3.Terminal"],["T3.Location",2,"Diagnostics.Source.Index"],["T3.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1],["T3",3,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T2",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["T2",18],[".",17],["Location",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["T2",18],[".",17],["Terminal",18],[", ",17],["T2",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T2",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[", ",17],["T2",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[", ",17],["T2",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[", ",17],["T2",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T2",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"T2.Location"],["T1.Terminal",2,"T2.Terminal"],["T2.Location",2,"Diagnostics.Source.Index"],["T2.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1],["T2",2,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[">(",17],["as",1],[" ",17],["_",2],[": (",17],["T0",18],[", ",17],["T1",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[") ",17],["where",12],[" ",17],["T0",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T1",18],[" : ",17],["ParsingRule",18,1],[", ",17],["T0",18],[".",17],["Location",18],[" == ",17],["T1",18],[".",17],["Location",18],[", ",17],["T0",18],[".",17],["Terminal",18],[" == ",17],["T1",18],[".",17],["Terminal",18],[", ",17],["T1",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["T1",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["T0",0],[", ",17],["T1",0],[">(",17],["as",1],[": (",17],["T0",18],[", ",17],["T1",18],[").Type) ",17],["throws",12],[" -> (",17],["T0",18],[".",17],["Construction",18],[", ",17],["T1",18],[".",17],["Construction",18],[")",17]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["T0",1,"ParsingRule",1],["T1",1,"ParsingRule",1],["T0.Location",2,"T1.Location"],["T0.Terminal",2,"T1.Terminal"],["T1.Location",2,"Diagnostics.Source.Index"],["T1.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["T0",0,1],["T1",1,1]]},{"p":["ParsingInput","parse(as:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18],[" ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type) ",17],["throws",12],[" -> ",17],["Rule",18],[".",17],["Construction",18]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Vector",18],[".Type) -> ",17],["Vector",18],[" ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Vector",18],[" : ",17],["RangeReplaceableCollection",18,265],[", ",17],["Rule",18],[".",17],["Construction",18],[" == ",17],["Vector",18],[".",17],["Element",18],[", ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[", ",17],["Vector",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Vector",18],[".Type) -> ",17],["Vector",18]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Vector",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Vector.Element"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1],["Vector",1,1]]},{"p":["ParsingInput","parse(as:in:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type, ",17],["in",1],[" ",17],["_",2],[": ",17],["Void",18,340],[".Type) ",17],["where",12],[" ",17],["Rule",18],[" : ",17],["ParsingRule",18,1],[", ",17],["Rule",18],[".",17],["Construction",18],[" == (), ",17],["Rule",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Rule",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["func",12],[" ",17],["parse",7],["<",17],["Rule",0],[">(",17],["as",1],[": ",17],["Rule",18],[".Type, ",17],["in",1],[": ",17],["Void",18],[".Type)",17]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9],["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"],["Rule.Location",2,"Diagnostics.Source.Index"],["Rule.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Diagnostics",0,0],["Rule",0,1]]},{"p":["ParsingInput","parse(prefix:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["parse",7],["(",17],["prefix",1],[" ",17],["count",2],[": ",17],["Int",18,263],[") ",17],["throws",12],[" -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"s":[["func",12],[" ",17],["parse",7],["(",17],["prefix",1],[": ",17],["Int",18],[") ",17],["throws",12],[" -> ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["SubSequence",18]],"e":[["Diagnostics",1,"ParsingDiagnostics",9]],"c":[["Diagnostics",1,"ParsingDiagnostics",9]],"g":[["Diagnostics",0,0]]},{"p":["ParsingDiagnostics","pop()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]]},{"p":["ParsingDiagnostics","push(index:for:by:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) -> ",17],["Self",18],[".",17],["Breadcrumb",18]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type) -> ",17],["Self",18],[".",17],["Breadcrumb",18]],"g":[["Rule",0,1],["Construction",1,1]]},{"p":["ParsingDiagnostics","reset(index:to:because:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Self",18],[".",17],["Breadcrumb",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18,341],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Self",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Self",18],[".",17],["Breadcrumb",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]]},{"p":["Grammar","NoDiagnostics","pop()"],"f":[["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":202},{"p":["Grammar","NoDiagnostics","push(index:for:by:)"],"f":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type) -> ",17],["Source",18],[".",17],["Index",18]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type) -> ",17],["Source",18],[".",17],["Index",18]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0],["Rule",0,1],["Construction",1,1]],"o":203},{"p":["Grammar","NoDiagnostics","reset(index:to:because:)"],"f":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[" ",17],["breadcrumb",2],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["because",1],[" ",17],["_",2],[": ",17],["inout",12],[" ",17],["Error",18,341],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":204},{"p":["Grammar","DefaultDiagnostics","pop()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["pop",7],["()",17]],"s":[["func",12],[" ",17],["pop",7],["()",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":202},{"p":["Grammar","DefaultDiagnostics","push(index:for:by:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[" ",17],["_",2],[": ",17],["Construction",18],[".Type, ",17],["by",1],[" ",17],["_",2],[": ",17],["Rule",18],[".Type)",17]],"s":[["func",12],[" ",17],["push",7],["<",17],["Rule",0],[", ",17],["Construction",0],[">(",17],["index",1],[": ",17],["Source",18],[".",17],["Index",18],[", ",17],["for",1],[": ",17],["Construction",18],[".Type, ",17],["by",1],[": ",17],["Rule",18],[".Type)",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0],["Rule",0,1],["Construction",1,1]],"o":203},{"p":["Grammar","DefaultDiagnostics","reset(index:to:because:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[" ",17],["_",2],[": ",17],["Void",18,340],[", ",17],["because",1],[" ",17],["error",2],[": ",17],["inout",12],[" ",17],["Error",18,341],[")",17]],"s":[["func",12],[" ",17],["reset",7],["(",17],["index",1],[": ",17],["inout",12],[" ",17],["Source",18],[".",17],["Index",18],[", ",17],["to",1],[": ",17],["Void",18],[", ",17],["because",1],[": ",17],["inout",12],[" ",17],["Error",18],[")",17]],"c":[["Source",1,"Collection",264]],"g":[["Source",0,0]],"o":204},{"p":["Grammar","TerminalClass"],"f":[["typealias",12],[" ",17],["TerminalClass",7],[" = ",17],["TerminalRule",18,2]],"s":[["typealias",12],[" ",17],["TerminalClass",7]],"a":{"a":{"d":true,"r":"TerminalRule"}}},{"p":["Grammar","HexDigitScalar","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,344],[".",17],["Scalar",18,345]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","HexDigitScalar","Lowercase","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,344],[".",17],["Scalar",18,345]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]],"o":15},{"p":["Grammar","TerminalSequence"],"f":[["typealias",12],[" ",17],["TerminalSequence",7],[" = ",17],["LiteralRule",18,0]],"s":[["typealias",12],[" ",17],["TerminalSequence",7]],"a":{"a":{"d":true,"r":"LiteralRule"}}},{"p":["Grammar","DecimalDigitScalar","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Unicode",18,344],[".",17],["Scalar",18,345]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Construction",1,"BinaryInteger",269]],"g":[["Location",0,0],["Construction",1,0]]},{"p":["Grammar","UnsignedIntegerLiteral","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"DigitRule",11],["Rule.Construction",1,"FixedWidthInteger",296]],"g":[["Rule",0,0]],"o":14},{"p":["Grammar","UnsignedIntegerLiteral","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"DigitRule",11],["Rule.Construction",1,"FixedWidthInteger",296]],"g":[["Rule",0,0]],"o":15},{"p":["Grammar","Pad","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]],"o":14},{"p":["Grammar","Pad","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Padding",1,"ParsingRule",1],["Rule.Location",2,"Padding.Location"],["Rule.Terminal",2,"Padding.Terminal"],["Padding.Construction",2,"()"]],"g":[["Rule",0,0],["Padding",1,0]],"o":15},{"p":["Grammar","Join","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]],"o":14},{"p":["Grammar","Join","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Separator",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"],["Rule.Location",2,"Separator.Location"],["Rule.Terminal",2,"Separator.Terminal"],["Separator.Construction",2,"()"]],"g":[["Rule",0,0],["Separator",1,0],["Construction",2,0]],"o":15},{"p":["Grammar","Reduce","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":14},{"p":["Grammar","Reduce","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":15},{"p":["Grammar","Collect","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":14},{"p":["Grammar","Collect","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Construction",1,"RangeReplaceableCollection",265],["Rule.Construction",2,"Construction.Element"]],"g":[["Rule",0,0],["Construction",1,0]],"o":15},{"p":["Grammar","Discard","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Rule",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]],"o":14},{"p":["Grammar","Discard","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Rule",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"c":[["Rule",1,"ParsingRule",1],["Rule.Construction",2,"()"]],"g":[["Rule",0,0]],"o":15},{"p":["Grammar","Encoding","E","Construction"],"f":[["typealias",12],[" ",17],["Construction",7],[" = ",17],["Void",18,340]],"s":[["typealias",12],[" ",17],["Construction",7]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]],"o":13},{"p":["Grammar","Encoding","Hyphen"],"f":[["typealias",12],[" ",17],["Hyphen",7],[" = ",17],["Grammar",18,18],[".",17],["Encoding",18,30],["<",17],["Location",18],[", ",17],["Terminal",18],[">.",17],["Minus",18,56]],"s":[["typealias",12],[" ",17],["Hyphen",7]],"e":[["Terminal",1,"ASCIITerminal",4]],"c":[["Terminal",1,"ASCIITerminal",4]],"g":[["Location",0,0],["Terminal",1,0]]},{"p":["Array","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) -> [",17],["Element",18],[".",17],["Construction",18],["] ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Element",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Element",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> [",17],["Element",18],[".",17],["Construction",18],["]",17]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Element.Location",2,"Diagnostics.Source.Index"],["Element.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Element",0,0],["Diagnostics",0,1]],"o":167},{"p":["Optional","parse(_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["_",1],[" ",17],["input",2],[": ",17],["inout",12],[" ",17],["ParsingInput",18,76],["<",17],["Diagnostics",18],[">) -> ",17],["Wrapped",18],[".",17],["Construction",18],["? ",17],["where",12],[" ",17],["Diagnostics",18],[" : ",17],["ParsingDiagnostics",18,9],[", ",17],["Wrapped",18],[".",17],["Location",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Index",18],[", ",17],["Wrapped",18],[".",17],["Terminal",18],[" == ",17],["Diagnostics",18],[".",17],["Source",18],[".",17],["Element",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["parse",7],["<",17],["Diagnostics",0],[">(",17],["inout",12],[" ",17],["ParsingInput",18],["<",17],["Diagnostics",18],[">) -> ",17],["Wrapped",18],[".",17],["Construction",18],["?",17]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1],["Diagnostics",1,"ParsingDiagnostics",9],["Wrapped.Location",2,"Diagnostics.Source.Index"],["Wrapped.Terminal",2,"Diagnostics.Source.Element"]],"g":[["Wrapped",0,0],["Diagnostics",0,1]],"o":167},{"p":["Array","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Element",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1]],"g":[["Element",0,0]],"o":14},{"p":["Array","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Element",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"e":[["Element",1,"ParsingRule",1]],"c":[["Element",1,"ParsingRule",1]],"g":[["Element",0,0]],"o":15},{"p":["Optional","Location"],"f":[["typealias",12],[" ",17],["Location",7],[" = ",17],["Wrapped",18],[".",17],["Location",18]],"s":[["typealias",12],[" ",17],["Location",7]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1]],"g":[["Wrapped",0,0]],"o":14},{"p":["Optional","Terminal"],"f":[["typealias",12],[" ",17],["Terminal",7],[" = ",17],["Wrapped",18],[".",17],["Terminal",18]],"s":[["typealias",12],[" ",17],["Terminal",7]],"e":[["Wrapped",1,"ParsingRule",1]],"c":[["Wrapped",1,"ParsingRule",1]],"g":[["Wrapped",0,0]],"o":15}],"edges":{"conformer":[0,1,[],2,1,[],3,4,[],3,250,[],4,250,[],5,4,[],5,250,[],6,335,[],6,341,[],6,346,[],7,4,[],7,250,[],8,4,[],8,7,[],8,250,[],10,6,[],10,335,[],10,341,[],10,346,[],11,1,[],11,2,[],19,1,[],19,2,[],19,11,[],21,1,[],21,2,[],21,11,[],23,1,[],24,1,[],25,1,[],26,1,[],27,1,[],28,1,[],29,1,[],31,0,[],31,1,[],32,0,[],32,1,[],33,0,[],33,1,[],34,0,[],34,1,[],35,0,[],35,1,[],36,0,[],36,1,[],37,0,[],37,1,[],38,0,[],38,1,[],39,1,[],39,2,[],41,0,[],41,1,[],43,0,[],43,1,[],44,0,[],44,1,[],45,0,[],45,1,[],46,0,[],46,1,[],47,0,[],47,1,[],48,0,[],48,1,[],49,0,[],49,1,[],50,0,[],50,1,[],51,0,[],51,1,[],52,0,[],52,1,[],53,0,[],53,1,[],54,0,[],54,1,[],55,0,[],55,1,[],56,0,[],56,1,[],57,0,[],57,1,[],58,0,[],58,1,[],59,0,[],59,1,[],60,0,[],60,1,[],61,0,[],61,1,[],62,0,[],62,1,[],63,0,[],63,1,[],64,0,[],64,1,[],65,1,[],66,0,[],66,1,[],67,0,[],67,1,[],68,0,[],68,1,[],69,0,[],69,1,[],70,0,[],70,1,[],71,0,[],71,1,[],72,1,[],72,2,[],72,11,[],73,1,[],73,2,[],73,11,[],74,6,[],74,335,[],74,341,[],74,346,[],77,9,[],77,346,[],78,335,[],78,341,[],78,346,[],79,9,[],80,335,[],80,341,[],80,346,[],81,335,[],81,341,[],81,346,[],261,1,[["Element",1,"ParsingRule",1]],266,1,[["Wrapped",1,"ParsingRule",1]],342,3,[],343,5,[],345,7,[]],"feature":[157,74,166,31,166,32,166,33,166,34,166,35,166,36,166,37,166,38,166,41,166,43,166,44,166,45,166,46,166,47,166,48,166,49,166,50,166,51,166,52,166,53,166,54,166,55,166,56,166,57,166,58,166,59,166,60,166,61,166,62,166,63,166,64,166,66,166,67,166,68,166,69,166,70,166,71,169,19,169,21,169,39,169,72,169,73,242,342,242,343,243,342,243,343,244,342,244,343,245,342,245,343,246,342,246,343,247,342,247,343,248,342,248,343,249,342,249,343,254,342,254,343,255,342,255,343,256,342,256,343,257,342,257,343,258,342,258,343,259,342,259,343,267,342,267,343,268,342,268,343,271,342,271,343,274,342,274,343,275,342,275,343,276,342,276,343,277,342,277,343,278,342,278,343,279,342,279,343,280,342,280,343,281,342,281,343,282,342,282,343,283,342,283,343,284,342,284,343,285,342,285,343,286,342,286,343,287,342,287,343,288,342,288,343,289,342,289,343,290,342,290,343,291,342,291,343,292,342,292,343,293,342,293,343,294,342,294,343,297,342,297,343,298,342,298,343,299,342,299,343,300,342,300,343,301,342,301,343,302,342,302,343,303,342,303,343,304,342,304,343,305,342,305,343,306,342,306,343,307,342,307,343,308,342,308,343,309,342,309,343,310,342,310,343,311,342,311,343,312,342,312,343,313,342,313,343,314,342,314,343,315,342,315,343,316,342,316,343,317,342,317,343,318,342,318,343,319,342,319,343,320,342,320,343,321,342,321,343,322,342,322,343,323,342,323,343,324,342,324,343,325,342,325,343,326,342,326,343,327,342,327,343,328,342,328,343,331,342,331,343,332,342,332,343,333,342,333,343,334,342,334,343,337,74,337,78,337,80,337,81,337,342,337,343,339,342,339,343],"member":[19,18,20,18,21,20,22,18,23,18,24,18,25,18,26,18,27,18,28,18,29,18,30,18,31,30,32,30,33,30,34,30,35,30,36,30,37,30,38,30,39,30,40,30,41,40,42,30,43,42,44,30,45,30,46,30,47,30,48,30,49,30,50,30,51,30,52,30,53,30,54,30,55,30,56,30,57,30,58,30,59,30,60,30,61,30,62,30,63,30,64,30,65,30,66,30,67,30,68,30,69,30,70,30,71,30,72,18,73,72,75,74,77,18,78,18,79,18,80,18,81,18,82,74,83,75,84,76,90,77,91,78,92,79,93,80,94,81,95,76,96,76,98,74,101,19,102,20,103,21,104,22,105,31,106,32,107,33,108,34,109,35,110,36,111,37,112,38,113,41,114,43,115,44,116,45,117,46,118,47,119,48,120,49,121,50,122,51,123,52,124,53,125,54,126,55,127,56,128,57,129,58,130,59,131,60,132,61,133,62,134,63,135,64,136,66,137,67,138,68,139,69,140,70,141,71,142,72,143,73,144,74,145,75,146,75,147,75,148,74,149,74,150,74,151,74,152,76,153,76,154,76,157,6,161,78,162,79,163,79,164,80,165,81,170,19,171,20,172,21,173,22,174,23,175,24,176,25,177,26,178,18,179,18,180,18,181,27,182,28,183,29,184,39,185,65,186,72,187,73,188,74,189,76,190,76,191,76,192,76,193,76,194,76,195,76,196,76,197,76,198,76,199,76,200,76,201,76,205,77,206,77,207,77,208,79,209,79,210,79,211,18,212,20,213,21,214,18,215,22,216,23,217,23,218,25,219,25,220,26,221,26,222,27,223,27,224,28,225,28,226,29,227,29,228,39,229,30,230,261,231,266,232,261,233,261,234,266,235,266],"requirement":[12,0,13,1,14,1,15,1,16,9,17,9,85,4,86,5,87,7,88,8,89,9,97,0,99,6,100,11,155,6,156,6,158,10,167,1,168,2,202,9,203,9,204,9],"defaultImplementation":[157,336,159,155,160,156,166,167,169,167]},"sourcemap":[{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/digit.swift","symbols":[1,9,11,4,8,100,13,9,19,17,12,101,22,13,170,33,9,72,37,12,142,42,13,186,54,13,73,57,16,143,62,17,187,77,9,22,80,18,215,83,12,104,88,13,173,107,9,20,110,18,212,113,12,102,118,13,171,134,13,21,137,22,213,140,16,103,145,17,172,164,11,80,169,8,93,173,12,164,179,9,23,183,18,216,185,18,217,188,13,174]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/error.swift","symbols":[1,9,6,4,8,99,8,8,155,12,8,156,18,9,10,20,8,158,28,8,160,32,8,159,64,8,157]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/grammar.swift","symbols":[10,7,74,16,11,75,21,12,147,28,12,146,35,12,145,42,8,83,51,8,98,57,8,151,64,8,148,66,8,149,69,4,82,76,8,150,91,8,144,136,9,188,164,9,1,178,19,14,180,19,15,187,19,13,205,9,167,212,9,9,214,19,17,215,19,16,217,4,89,220,9,203,223,9,202,225,9,204,229,5,18,240,11,77,243,8,90,250,13,206,257,13,205,262,13,207,274,11,79,277,12,162,278,12,163,280,8,92,286,13,209,291,13,208,296,13,210,328,7,76,331,8,154,333,8,153,335,8,152,337,4,84,344,4,96,349,4,95,356,9,189,377,9,190,396,9,198,404,9,197,419,9,196,436,9,195,455,9,194,476,9,193,499,9,192,527,9,191,533,9,200,542,9,199,555,9,201,574,14,234,576,14,235,579,9,231,591,14,232,593,14,233,596,9,230,609,9,30,616,11,81,619,8,94,623,12,165,629,11,78,632,8,91,636,12,161,642,9,24,645,13,175,657,9,178,667,9,179,677,9,180,692,14,214,696,14,211,703,9,29,707,18,226,709,18,227,711,13,183,720,9,28,725,18,224,727,18,225,729,13,182,738,9,27,743,18,222,745,18,223,747,13,181,762,9,26,771,18,221,773,18,220,775,13,177,793,9,25,800,18,219,802,18,218,804,13,176]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/literal.swift","symbols":[2,9,4,4,4,85,7,9,3,11,9,5,13,4,86,16,9,7,18,4,87,21,9,8,23,4,88,46,9,35,49,12,109,53,9,44,56,12,115,59,9,69,62,12,139,65,9,31,68,12,105,71,9,70,74,12,140,77,9,71,80,12,141,83,9,32,86,12,106,89,9,33,92,12,107,95,9,34,98,12,108,101,9,53,104,12,124,107,9,54,110,12,125,113,9,62,116,12,133,119,9,63,122,12,134,125,9,67,128,12,137,131,9,56,134,12,127,137,9,37,140,12,111,143,9,38,146,12,112,149,9,66,152,12,136,155,9,64,158,12,135,161,9,51,164,12,122,167,9,57,170,12,128,173,9,68,176,12,138,179,9,36,182,12,110,185,9,59,188,12,130,191,9,60,194,12,131,198,9,39,201,18,228,203,13,184,215,9,42,218,13,43,221,16,114,225,9,40,228,13,41,231,16,113,236,9,52,239,12,123,242,9,45,245,12,116,248,9,47,251,12,118,254,9,61,257,12,132,260,9,49,263,12,120,266,9,48,269,12,119,272,9,46,275,12,117,278,9,58,281,12,129,284,9,55,287,12,126,290,9,50,293,12,121,296,14,229,299,9,65,302,13,185]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/literalrule.swift","symbols":[1,9,0,4,19,12,6,8,97,14,9,166]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-grammar@0.1.4/.build/checkouts/swift-grammar/sources/terminalrule.swift","symbols":[1,9,2,4,9,168,9,9,169]}]}