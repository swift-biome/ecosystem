{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":3},"generator":"Swift version 5.8-dev (LLVM 0c2f2a534df576e, Swift 025a6fca804b570)"},"module":{"name":"NIOHTTP1","platform":{"architecture":"x86_64","environment":"gnu","vendor":"unknown","operatingSystem":{"name":"linux","minimumVersion":{"major":0,"minor":0,"patch":0}}}},"symbols":[{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategyAA15EventLoopFutureCyytGAC8PositionO_AD018RemoveAfterUpgradeL0OtF","interfaceLanguage":"swift"},"pathComponents":["ChannelPipeline","addHTTPClientHandlers(position:leftOverBytesStrategy:)"],"names":{"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"docComment":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","module":"NIOHTTP1","lines":[{"range":{"start":{"line":32,"character":8},"end":{"line":32,"character":63}},"text":"Configure a `ChannelPipeline` for use as a HTTP client."},{"range":{"start":{"line":33,"character":7},"end":{"line":33,"character":7}},"text":""},{"range":{"start":{"line":34,"character":8},"end":{"line":34,"character":21}},"text":"- parameters:"},{"range":{"start":{"line":35,"character":8},"end":{"line":35,"character":121}},"text":"    - position: The position in the `ChannelPipeline` where to add the HTTP client handlers. Defaults to `.last`."},{"range":{"start":{"line":36,"character":8},"end":{"line":36,"character":122}},"text":"    - leftOverBytesStrategy: The strategy to use when dealing with leftover bytes after removing the `HTTPDecoder`"},{"range":{"start":{"line":37,"character":8},"end":{"line":37,"character":34}},"text":"        from the pipeline."},{"range":{"start":{"line":38,"character":8},"end":{"line":38,"character":87}},"text":"- returns: An `EventLoopFuture` that will fire when the pipeline is configured."}]},"functionSignature":{"parameters":[{"name":"position","declarationFragments":[{"kind":"identifier","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"}]},{"name":"leftOverBytesStrategy","declarationFragments":[{"kind":"identifier","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"}]}],"returns":[{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"NIOCore"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":" = .last, "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":" = .dropBytes) -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","position":{"line":39,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategy17withClientUpgradeAA15EventLoopFutureCyytGAC8PositionO_AD011RemoveAfteroL0OSayAD29NIOHTTPClientProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionZ0tSgtF","interfaceLanguage":"swift"},"pathComponents":["ChannelPipeline","addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)"],"names":{"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withClientUpgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"docComment":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","module":"NIOHTTP1","lines":[{"range":{"start":{"line":46,"character":8},"end":{"line":46,"character":100}},"text":"Configure a `ChannelPipeline` for use as a HTTP client with a client upgrader configuration."},{"range":{"start":{"line":47,"character":7},"end":{"line":47,"character":7}},"text":""},{"range":{"start":{"line":48,"character":8},"end":{"line":48,"character":21}},"text":"- parameters:"},{"range":{"start":{"line":49,"character":8},"end":{"line":49,"character":121}},"text":"    - position: The position in the `ChannelPipeline` where to add the HTTP client handlers. Defaults to `.last`."},{"range":{"start":{"line":50,"character":8},"end":{"line":50,"character":122}},"text":"    - leftOverBytesStrategy: The strategy to use when dealing with leftover bytes after removing the `HTTPDecoder`"},{"range":{"start":{"line":51,"character":8},"end":{"line":51,"character":34}},"text":"        from the pipeline."},{"range":{"start":{"line":52,"character":8},"end":{"line":52,"character":87}},"text":"    - upgrade: Add a `HTTPClientUpgradeHandler` to the pipeline, configured for"},{"range":{"start":{"line":53,"character":8},"end":{"line":53,"character":95}},"text":"        HTTP upgrade. Should be a tuple of an array of `HTTPClientProtocolUpgrader` and"},{"range":{"start":{"line":54,"character":8},"end":{"line":54,"character":99}},"text":"        the upgrade completion handler. See the documentation on `HTTPClientUpgradeHandler`"},{"range":{"start":{"line":55,"character":8},"end":{"line":55,"character":33}},"text":"        for more details."},{"range":{"start":{"line":56,"character":8},"end":{"line":56,"character":87}},"text":"- returns: An `EventLoopFuture` that will fire when the pipeline is configured."}]},"functionSignature":{"parameters":[{"name":"position","declarationFragments":[{"kind":"identifier","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"}]},{"name":"leftOverBytesStrategy","declarationFragments":[{"kind":"identifier","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"}]},{"name":"withClientUpgrade","internalName":"upgrade","declarationFragments":[{"kind":"identifier","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"NIOCore"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":" = .last, "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":" = .dropBytes, "},{"kind":"externalParam","spelling":"withClientUpgrade"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"?) -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","position":{"line":57,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategy17withClientUpgradeyAC8PositionO_AF011RemoveAfterqN0OSayAF29NIOHTTPClientProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionY0tSgtKF","interfaceLanguage":"swift"},"pathComponents":["ChannelPipeline","SynchronousOperations","addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)"],"names":{"title":"addHTTPClientHandlers(position:leftOverBytesStrategy:withClientUpgrade:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withClientUpgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","module":"NIOHTTP1","lines":[{"range":{"start":{"line":133,"character":8},"end":{"line":133,"character":100}},"text":"Configure a `ChannelPipeline` for use as a HTTP client with a client upgrader configuration."},{"range":{"start":{"line":134,"character":7},"end":{"line":134,"character":7}},"text":""},{"range":{"start":{"line":135,"character":8},"end":{"line":135,"character":73}},"text":"- important: This **must** be called on the Channel's event loop."},{"range":{"start":{"line":136,"character":8},"end":{"line":136,"character":21}},"text":"- parameters:"},{"range":{"start":{"line":137,"character":8},"end":{"line":137,"character":121}},"text":"    - position: The position in the `ChannelPipeline` where to add the HTTP client handlers. Defaults to `.last`."},{"range":{"start":{"line":138,"character":8},"end":{"line":138,"character":122}},"text":"    - leftOverBytesStrategy: The strategy to use when dealing with leftover bytes after removing the `HTTPDecoder`"},{"range":{"start":{"line":139,"character":8},"end":{"line":139,"character":34}},"text":"        from the pipeline."},{"range":{"start":{"line":140,"character":8},"end":{"line":140,"character":87}},"text":"    - upgrade: Add a `HTTPClientUpgradeHandler` to the pipeline, configured for"},{"range":{"start":{"line":141,"character":8},"end":{"line":141,"character":95}},"text":"        HTTP upgrade. Should be a tuple of an array of `HTTPClientProtocolUpgrader` and"},{"range":{"start":{"line":142,"character":8},"end":{"line":142,"character":99}},"text":"        the upgrade completion handler. See the documentation on `HTTPClientUpgradeHandler`"},{"range":{"start":{"line":143,"character":8},"end":{"line":143,"character":33}},"text":"        for more details."},{"range":{"start":{"line":144,"character":8},"end":{"line":144,"character":58}},"text":"- throws: If the pipeline could not be configured."}]},"functionSignature":{"parameters":[{"name":"position","declarationFragments":[{"kind":"identifier","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"}]},{"name":"leftOverBytesStrategy","declarationFragments":[{"kind":"identifier","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"}]},{"name":"withClientUpgrade","internalName":"upgrade","declarationFragments":[{"kind":"identifier","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftExtension":{"extendedModule":"NIOCore"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"addHTTPClientHandlers"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":" = .last, "},{"kind":"externalParam","spelling":"leftOverBytesStrategy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"RemoveAfterUpgradeStrategy","preciseIdentifier":"s:8NIOHTTP126RemoveAfterUpgradeStrategyO"},{"kind":"text","spelling":" = .dropBytes, "},{"kind":"externalParam","spelling":"withClientUpgrade"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPClientUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPClientUpgradeConfigurationa"},{"kind":"text","spelling":"? = nil) "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","position":{"line":145,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV8NIOHTTP1E019configureHTTPServerC08position24withPipeliningAssistance0J13ServerUpgrade0J13ErrorHandlingyAC8PositionO_SbSayAF0H16ProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionU0tSgSbtKF","interfaceLanguage":"swift"},"pathComponents":["ChannelPipeline","SynchronousOperations","configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)"],"names":{"title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"configureHTTPServerPipeline"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withPipeliningAssistance"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withServerUpgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"withErrorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"}]},"docComment":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","module":"NIOHTTP1","lines":[{"range":{"start":{"line":186,"character":8},"end":{"line":186,"character":63}},"text":"Configure a `ChannelPipeline` for use as a HTTP server."},{"range":{"start":{"line":187,"character":7},"end":{"line":187,"character":7}},"text":""},{"range":{"start":{"line":188,"character":8},"end":{"line":188,"character":93}},"text":"This function knows how to set up all first-party HTTP channel handlers appropriately"},{"range":{"start":{"line":189,"character":8},"end":{"line":189,"character":59}},"text":"for server use. It supports the following features:"},{"range":{"start":{"line":190,"character":7},"end":{"line":190,"character":7}},"text":""},{"range":{"start":{"line":191,"character":8},"end":{"line":191,"character":87}},"text":"1. Providing assistance handling clients that pipeline HTTP requests, using the"},{"range":{"start":{"line":192,"character":8},"end":{"line":192,"character":40}},"text":"    `HTTPServerPipelineHandler`."},{"range":{"start":{"line":193,"character":8},"end":{"line":193,"character":73}},"text":"2. Supporting HTTP upgrade, using the `HTTPServerUpgradeHandler`."},{"range":{"start":{"line":194,"character":7},"end":{"line":194,"character":7}},"text":""},{"range":{"start":{"line":195,"character":8},"end":{"line":195,"character":93}},"text":"This method will likely be extended in future with more support for other first-party"},{"range":{"start":{"line":196,"character":8},"end":{"line":196,"character":17}},"text":"features."},{"range":{"start":{"line":197,"character":7},"end":{"line":197,"character":7}},"text":""},{"range":{"start":{"line":198,"character":8},"end":{"line":198,"character":73}},"text":"- important: This **must** be called on the Channel's event loop."},{"range":{"start":{"line":199,"character":8},"end":{"line":199,"character":21}},"text":"- parameters:"},{"range":{"start":{"line":200,"character":8},"end":{"line":200,"character":99}},"text":"    - position: Where in the pipeline to add the HTTP server handlers, defaults to `.last`."},{"range":{"start":{"line":201,"character":8},"end":{"line":201,"character":91}},"text":"    - pipelining: Whether to provide assistance handling HTTP clients that pipeline"},{"range":{"start":{"line":202,"character":8},"end":{"line":202,"character":89}},"text":"        their requests. Defaults to `true`. If `false`, users will need to handle"},{"range":{"start":{"line":203,"character":8},"end":{"line":203,"character":49}},"text":"        clients that pipeline themselves."},{"range":{"start":{"line":204,"character":8},"end":{"line":204,"character":98}},"text":"    - upgrade: Whether to add a `HTTPServerUpgradeHandler` to the pipeline, configured for"},{"range":{"start":{"line":205,"character":8},"end":{"line":205,"character":99}},"text":"        HTTP upgrade. Defaults to `nil`, which will not add the handler to the pipeline. If"},{"range":{"start":{"line":206,"character":8},"end":{"line":206,"character":102}},"text":"        provided should be a tuple of an array of `HTTPServerProtocolUpgrader` and the upgrade"},{"range":{"start":{"line":207,"character":8},"end":{"line":207,"character":96}},"text":"        completion handler. See the documentation on `HTTPServerUpgradeHandler` for more"},{"range":{"start":{"line":208,"character":8},"end":{"line":208,"character":24}},"text":"        details."},{"range":{"start":{"line":209,"character":8},"end":{"line":209,"character":89}},"text":"    - errorHandling: Whether to provide assistance handling protocol errors (e.g."},{"range":{"start":{"line":210,"character":8},"end":{"line":210,"character":93}},"text":"        failure to parse the HTTP request) by sending 400 errors. Defaults to `true`."},{"range":{"start":{"line":211,"character":8},"end":{"line":211,"character":58}},"text":"- throws: If the pipeline could not be configured."}]},"functionSignature":{"parameters":[{"name":"position","declarationFragments":[{"kind":"identifier","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"}]},{"name":"withPipeliningAssistance","internalName":"pipelining","declarationFragments":[{"kind":"identifier","spelling":"pipelining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},{"name":"withServerUpgrade","internalName":"upgrade","declarationFragments":[{"kind":"identifier","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"?"}]},{"name":"withErrorHandling","internalName":"errorHandling","declarationFragments":[{"kind":"identifier","spelling":"errorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftExtension":{"extendedModule":"NIOCore"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"configureHTTPServerPipeline"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":" = .last, "},{"kind":"externalParam","spelling":"withPipeliningAssistance"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"pipelining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true, "},{"kind":"externalParam","spelling":"withServerUpgrade"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"withErrorHandling"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"errorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true) "},{"kind":"keyword","spelling":"throws"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","position":{"line":212,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E019configureHTTPServerC08position24withPipeliningAssistance0H13ServerUpgrade0H13ErrorHandlingAA15EventLoopFutureCyytGAC8PositionO_SbSayAD0F16ProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionV0tSgSbtF","interfaceLanguage":"swift"},"pathComponents":["ChannelPipeline","configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)"],"names":{"title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"configureHTTPServerPipeline"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withPipeliningAssistance"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"withServerUpgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"?, "},{"kind":"externalParam","spelling":"withErrorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"docComment":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","module":"NIOHTTP1","lines":[{"range":{"start":{"line":80,"character":8},"end":{"line":80,"character":63}},"text":"Configure a `ChannelPipeline` for use as a HTTP server."},{"range":{"start":{"line":81,"character":7},"end":{"line":81,"character":7}},"text":""},{"range":{"start":{"line":82,"character":8},"end":{"line":82,"character":93}},"text":"This function knows how to set up all first-party HTTP channel handlers appropriately"},{"range":{"start":{"line":83,"character":8},"end":{"line":83,"character":59}},"text":"for server use. It supports the following features:"},{"range":{"start":{"line":84,"character":7},"end":{"line":84,"character":7}},"text":""},{"range":{"start":{"line":85,"character":8},"end":{"line":85,"character":87}},"text":"1. Providing assistance handling clients that pipeline HTTP requests, using the"},{"range":{"start":{"line":86,"character":8},"end":{"line":86,"character":40}},"text":"    `HTTPServerPipelineHandler`."},{"range":{"start":{"line":87,"character":8},"end":{"line":87,"character":73}},"text":"2. Supporting HTTP upgrade, using the `HTTPServerUpgradeHandler`."},{"range":{"start":{"line":88,"character":7},"end":{"line":88,"character":7}},"text":""},{"range":{"start":{"line":89,"character":8},"end":{"line":89,"character":93}},"text":"This method will likely be extended in future with more support for other first-party"},{"range":{"start":{"line":90,"character":8},"end":{"line":90,"character":17}},"text":"features."},{"range":{"start":{"line":91,"character":7},"end":{"line":91,"character":7}},"text":""},{"range":{"start":{"line":92,"character":8},"end":{"line":92,"character":21}},"text":"- parameters:"},{"range":{"start":{"line":93,"character":8},"end":{"line":93,"character":99}},"text":"    - position: Where in the pipeline to add the HTTP server handlers, defaults to `.last`."},{"range":{"start":{"line":94,"character":8},"end":{"line":94,"character":91}},"text":"    - pipelining: Whether to provide assistance handling HTTP clients that pipeline"},{"range":{"start":{"line":95,"character":8},"end":{"line":95,"character":89}},"text":"        their requests. Defaults to `true`. If `false`, users will need to handle"},{"range":{"start":{"line":96,"character":8},"end":{"line":96,"character":49}},"text":"        clients that pipeline themselves."},{"range":{"start":{"line":97,"character":8},"end":{"line":97,"character":98}},"text":"    - upgrade: Whether to add a `HTTPServerUpgradeHandler` to the pipeline, configured for"},{"range":{"start":{"line":98,"character":8},"end":{"line":98,"character":99}},"text":"        HTTP upgrade. Defaults to `nil`, which will not add the handler to the pipeline. If"},{"range":{"start":{"line":99,"character":8},"end":{"line":99,"character":102}},"text":"        provided should be a tuple of an array of `HTTPServerProtocolUpgrader` and the upgrade"},{"range":{"start":{"line":100,"character":8},"end":{"line":100,"character":96}},"text":"        completion handler. See the documentation on `HTTPServerUpgradeHandler` for more"},{"range":{"start":{"line":101,"character":8},"end":{"line":101,"character":24}},"text":"        details."},{"range":{"start":{"line":102,"character":8},"end":{"line":102,"character":89}},"text":"    - errorHandling: Whether to provide assistance handling protocol errors (e.g."},{"range":{"start":{"line":103,"character":8},"end":{"line":103,"character":93}},"text":"        failure to parse the HTTP request) by sending 400 errors. Defaults to `true`."},{"range":{"start":{"line":104,"character":8},"end":{"line":104,"character":87}},"text":"- returns: An `EventLoopFuture` that will fire when the pipeline is configured."}]},"functionSignature":{"parameters":[{"name":"position","declarationFragments":[{"kind":"identifier","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"}]},{"name":"withPipeliningAssistance","internalName":"pipelining","declarationFragments":[{"kind":"identifier","spelling":"pipelining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},{"name":"withServerUpgrade","internalName":"upgrade","declarationFragments":[{"kind":"identifier","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"?"}]},{"name":"withErrorHandling","internalName":"errorHandling","declarationFragments":[{"kind":"identifier","spelling":"errorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"NIOCore"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"configureHTTPServerPipeline"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"position"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO"},{"kind":"text","spelling":" = .last, "},{"kind":"externalParam","spelling":"withPipeliningAssistance"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"pipelining"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true, "},{"kind":"externalParam","spelling":"withServerUpgrade"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"upgrade"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa"},{"kind":"text","spelling":"? = nil, "},{"kind":"externalParam","spelling":"withErrorHandling"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"errorHandling"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true) -> "},{"kind":"typeIdentifier","spelling":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":">"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.40.0/.build/checkouts/swift-nio/Sources/NIOHTTP1/HTTPPipelineSetup.swift","position":{"line":105,"character":16}}}],"relationships":[{"kind":"memberOf","source":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategy17withClientUpgradeyAC8PositionO_AF011RemoveAfterqN0OSayAF29NIOHTTPClientProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionY0tSgtKF","target":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV","targetFallback":"NIOCore.ChannelPipeline.SynchronousOperations"},{"kind":"memberOf","source":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E019configureHTTPServerC08position24withPipeliningAssistance0H13ServerUpgrade0H13ErrorHandlingAA15EventLoopFutureCyytGAC8PositionO_SbSayAD0F16ProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionV0tSgSbtF","target":"s:7NIOCore15ChannelPipelineC","targetFallback":"NIOCore.ChannelPipeline"},{"kind":"memberOf","source":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategyAA15EventLoopFutureCyytGAC8PositionO_AD018RemoveAfterUpgradeL0OtF","target":"s:7NIOCore15ChannelPipelineC","targetFallback":"NIOCore.ChannelPipeline"},{"kind":"memberOf","source":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV8NIOHTTP1E019configureHTTPServerC08position24withPipeliningAssistance0J13ServerUpgrade0J13ErrorHandlingyAC8PositionO_SbSayAF0H16ProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionU0tSgSbtKF","target":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV","targetFallback":"NIOCore.ChannelPipeline.SynchronousOperations"},{"kind":"memberOf","source":"s:7NIOCore15ChannelPipelineC8NIOHTTP1E21addHTTPClientHandlers8position21leftOverBytesStrategy17withClientUpgradeAA15EventLoopFutureCyytGAC8PositionO_AD011RemoveAfteroL0OSayAD29NIOHTTPClientProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionZ0tSgtF","target":"s:7NIOCore15ChannelPipelineC","targetFallback":"NIOCore.ChannelPipeline"}]}