{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":3},"generator":"Swift version 5.8-dev (LLVM 396c6969ee90ef4, Swift 02efc3a2d28e348)"},"module":{"name":"_NIODataStructures","platform":{"architecture":"x86_64","environment":"gnu","vendor":"unknown","operatingSystem":{"name":"linux","minimumVersion":{"major":0,"minor":0,"patch":0}}}},"symbols":[{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSL7ElementRpzrlE3maxABSgyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","max()"],"names":{"title":"max()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the maximum element in the sequence."},{"text":""},{"text":"This example finds the largest value in an array of height measurements."},{"text":""},{"text":"    let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]"},{"text":"    let greatestHeight = heights.max()"},{"text":"    print(greatestHeight)"},{"text":"    // Prints \"Optional(67.5)\""},{"text":""},{"text":"- Returns: The sequence's maximum element. If the sequence has no"},{"text":"  elements, returns `nil`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueVACyxGycfc","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","init()"],"names":{"title":"init()","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":19,"character":11}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV12makeIteratorAC0F0Vyx_GyF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","makeIterator()"],"names":{"title":"makeIterator()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV8IteratorV"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV8IteratorV"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_NIODataStructures","constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeIterator"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">."},{"kind":"typeIdentifier","spelling":"Iterator","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV8IteratorV"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":85,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE8shuffledSay7ElementQzGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","shuffled()"],"names":{"title":"shuffled()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shuffled"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the elements of the sequence, shuffled."},{"text":""},{"text":"For example, you can shuffle the numbers between `0` and `9` by calling"},{"text":"the `shuffled()` method on that range:"},{"text":""},{"text":"    let numbers = 0...9"},{"text":"    let shuffledNumbers = numbers.shuffled()"},{"text":"    // shuffledNumbers == [1, 7, 6, 2, 8, 9, 4, 3, 5, 0]"},{"text":""},{"text":"This method is equivalent to calling `shuffled(using:)`, passing in the"},{"text":"system's default random generator."},{"text":""},{"text":"- Returns: A shuffled array of this sequence's elements."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shuffled"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}],"accessLevel":"public","availability":[{"domain":"Swift","deprecated":{"major":4,"minor":1},"message":"Please use compactMap(_:) for the case where closure returns an optional value","renamed":"compactMap(_:)"}]},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue"],"names":{"title":"PriorityQueue","navigator":[{"kind":"identifier","spelling":"PriorityQueue"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"PriorityQueue"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"PriorityQueue"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Element"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Comparable","preciseIdentifier":"s:SL"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":14,"character":14}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV3popxSgyF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","pop()"],"names":{"title":"pop()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"pop"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"pop"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":50,"character":25}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","min(by:)"],"names":{"title":"min(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the minimum element in the sequence, using the given predicate as"},{"text":"the comparison between elements."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"This example shows how to use the `min(by:)` method on a"},{"text":"dictionary to find the key-value pair with the lowest value."},{"text":""},{"text":"    let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]"},{"text":"    let leastHue = hues.min { a, b in a.value < b.value }"},{"text":"    print(leastHue)"},{"text":"    // Prints \"Optional((key: \"Coral\", value: 16))\""},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true`"},{"text":"  if its first argument should be ordered before its second"},{"text":"  argument; otherwise, `false`."},{"text":"- Returns: The sequence's minimum element, according to"},{"text":"  `areInIncreasingOrder`. If the sequence has no elements, returns"},{"text":"  `nil`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV8IteratorV4nextxSgyF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","Iterator","next()"],"names":{"title":"next()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"next"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":79,"character":29}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSQ7ElementRpzrlE8containsySbABF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","contains(_:)"],"names":{"title":"contains(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the sequence contains the"},{"text":"given element."},{"text":""},{"text":"This example checks to see whether a favorite actor is in an array"},{"text":"storing a movie's cast."},{"text":""},{"text":"    let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]"},{"text":"    print(cast.contains(\"Marlon\"))"},{"text":"    // Prints \"true\""},{"text":"    print(cast.contains(\"James\"))"},{"text":"    // Prints \"false\""},{"text":""},{"text":"- Parameter element: The element to find in the sequence."},{"text":"- Returns: `true` if the element was found in the sequence; otherwise,"},{"text":"  `false`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"element","declarationFragments":[{"kind":"identifier","spelling":"element"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"element"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","joined()"],"names":{"title":"joined()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"FlattenSequence","preciseIdentifier":"s:s15FlattenSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the elements of this sequence of sequences, concatenated."},{"text":""},{"text":"In this example, an array of three ranges is flattened so that the"},{"text":"elements of each range can be iterated in turn."},{"text":""},{"text":"    let ranges = [0..<3, 8..<10, 15..<17]"},{"text":""},{"text":"    // A for-in loop over 'ranges' accesses each range:"},{"text":"    for range in ranges {"},{"text":"      print(range)"},{"text":"    }"},{"text":"    // Prints \"0..<3\""},{"text":"    // Prints \"8..<10\""},{"text":"    // Prints \"15..<17\""},{"text":""},{"text":"    // Use 'joined()' to access each element of each range:"},{"text":"    for index in ranges.joined() {"},{"text":"        print(index, terminator: \" \")"},{"text":"    }"},{"text":"    // Prints: \"0 1 2 8 9 15 16\""},{"text":""},{"text":"- Returns: A flattened view of the elements of this"},{"text":"  sequence of sequences."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"FlattenSequence","preciseIdentifier":"s:s15FlattenSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"FlattenSequence","preciseIdentifier":"s:s15FlattenSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:STsE4lazys12LazySequenceVyxGvp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","lazy"],"names":{"title":"lazy","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lazy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"LazySequence","preciseIdentifier":"s:s12LazySequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"A sequence containing the same elements as this sequence,"},{"text":"but on which some operations, such as `map` and `filter`, are"},{"text":"implemented lazily."}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lazy"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"LazySequence","preciseIdentifier":"s:s12LazySequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"> { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","reduce(into:_:)"],"names":{"title":"reduce(into:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> ()) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the result of combining the elements of the sequence using the"},{"text":"given closure."},{"text":""},{"text":"Use the `reduce(into:_:)` method to produce a single value from the"},{"text":"elements of an entire sequence. For example, you can use this method on an"},{"text":"array of integers to filter adjacent equal entries or count frequencies."},{"text":""},{"text":"This method is preferred over `reduce(_:_:)` for efficiency when the"},{"text":"result is a copy-on-write type, for example an Array or a Dictionary."},{"text":""},{"text":"The `updateAccumulatingResult` closure is called sequentially with a"},{"text":"mutable accumulating value initialized to `initialResult` and each element"},{"text":"of the sequence. This example shows how to build a dictionary of letter"},{"text":"frequencies of a string."},{"text":""},{"text":"    let letters = \"abracadabra\""},{"text":"    let letterCount = letters.reduce(into: [:]) { counts, letter in"},{"text":"        counts[letter, default: 0] += 1"},{"text":"    }"},{"text":"    // letterCount == [\"a\": 5, \"b\": 2, \"r\": 2, \"c\": 1, \"d\": 1]"},{"text":""},{"text":"When `letters.reduce(into:_:)` is called, the following steps occur:"},{"text":""},{"text":"1. The `updateAccumulatingResult` closure is called with the initial"},{"text":"   accumulating value---`[:]` in this case---and the first character of"},{"text":"   `letters`, modifying the accumulating value by setting `1` for the key"},{"text":"   `\"a\"`."},{"text":"2. The closure is called again repeatedly with the updated accumulating"},{"text":"   value and each element of the sequence."},{"text":"3. When the sequence is exhausted, the accumulating value is returned to"},{"text":"   the caller."},{"text":""},{"text":"If the sequence has no elements, `updateAccumulatingResult` is never"},{"text":"executed and `initialResult` is the result of the call to"},{"text":"`reduce(into:_:)`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"  - updateAccumulatingResult: A closure that updates the accumulating"},{"text":"    value with an element of the sequence."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"into","internalName":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"updateAccumulatingResult","declarationFragments":[{"kind":"identifier","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> ()"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"into"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"updateAccumulatingResult"},{"kind":"text","spelling":": ("},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> ()) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE5first5where7ElementQzSgSbADKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","first(where:)"],"names":{"title":"first(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the first element of the sequence that satisfies the given"},{"text":"predicate."},{"text":""},{"text":"The following example uses the `first(where:)` method to find the first"},{"text":"negative number in an array of integers:"},{"text":""},{"text":"    let numbers = [3, 7, 4, -2, 9, -6, 10, 1]"},{"text":"    if let firstNegative = numbers.first(where: { $0 < 0 }) {"},{"text":"        print(\"The first negative number is \\(firstNegative).\")"},{"text":"    }"},{"text":"    // Prints \"The first negative number is -2.\""},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the sequence as"},{"text":"  its argument and returns a Boolean value indicating whether the"},{"text":"  element is a match."},{"text":"- Returns: The first element of the sequence that satisfies `predicate`,"},{"text":"  or `nil` if there is no element that satisfies `predicate`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"first"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSL7ElementRpzrlE3minABSgyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","min()"],"names":{"title":"min()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the minimum element in the sequence."},{"text":""},{"text":"This example finds the smallest value in an array of height measurements."},{"text":""},{"text":"    let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]"},{"text":"    let lowestHeight = heights.min()"},{"text":"    print(lowestHeight)"},{"text":"    // Prints \"Optional(58.5)\""},{"text":""},{"text":"- Returns: The sequence's minimum element. If the sequence has no"},{"text":"  elements, returns `nil`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"min"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ST12_RegexParserE3anyyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","any(_:)"],"names":{"title":"any(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"any"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"f","declarationFragments":[{"kind":"identifier","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"any"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV4pushyyxF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","push(_:)"],"names":{"title":"push(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"push"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"key","declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"push"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":34,"character":25}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSays10ArraySliceVy7ElementQzGGSi_S2bAHKXEtKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","split(maxSplits:omittingEmptySubsequences:whereSeparator:)"],"names":{"title":"split(maxSplits:omittingEmptySubsequences:whereSeparator:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"split"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"whereSeparator"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the longest possible subsequences of the sequence, in order, that"},{"text":"don't contain elements satisfying the given predicate. Elements that are"},{"text":"used to split the sequence are not returned as part of any subsequence."},{"text":""},{"text":"The following examples show the effects of the `maxSplits` and"},{"text":"`omittingEmptySubsequences` parameters when splitting a string using a"},{"text":"closure that matches spaces. The first use of `split` returns each word"},{"text":"that was originally separated by one or more spaces."},{"text":""},{"text":"    let line = \"BLANCHE:   I don't want realism. I want magic!\""},{"text":"    print(line.split(whereSeparator: { $0 == \" \" })"},{"text":"              .map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""},{"text":""},{"text":"The second example passes `1` for the `maxSplits` parameter, so the"},{"text":"original string is split just once, into two new strings."},{"text":""},{"text":"    print("},{"text":"       line.split(maxSplits: 1, whereSeparator: { $0 == \" \" })"},{"text":"                      .map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"  I don\\'t want realism. I want magic!\"]\""},{"text":""},{"text":"The final example passes `true` for the `allowEmptySlices` parameter, so"},{"text":"the returned array contains empty strings where spaces were repeated."},{"text":""},{"text":"    print("},{"text":"        line.split("},{"text":"            omittingEmptySubsequences: false,"},{"text":"            whereSeparator: { $0 == \" \" }"},{"text":"        ).map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"\", \"\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""},{"text":""},{"text":"- Parameters:"},{"text":"  - maxSplits: The maximum number of times to split the sequence, or one"},{"text":"    less than the number of subsequences to return. If `maxSplits + 1`"},{"text":"    subsequences are returned, the last one is a suffix of the original"},{"text":"    sequence containing the remaining elements. `maxSplits` must be"},{"text":"    greater than or equal to zero. The default value is `Int.max`."},{"text":"  - omittingEmptySubsequences: If `false`, an empty subsequence is"},{"text":"    returned in the result for each pair of consecutive elements"},{"text":"    satisfying the `isSeparator` predicate and for each element at the"},{"text":"    start or end of the sequence satisfying the `isSeparator` predicate."},{"text":"    If `true`, only nonempty subsequences are returned. The default"},{"text":"    value is `true`."},{"text":"  - isSeparator: A closure that returns `true` if its argument should be"},{"text":"    used to split the sequence; otherwise, `false`."},{"text":"- Returns: An array of subsequences, split from this sequence's elements."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"maxSplits","declarationFragments":[{"kind":"identifier","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]},{"name":"omittingEmptySubsequences","declarationFragments":[{"kind":"identifier","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},{"name":"whereSeparator","internalName":"isSeparator","declarationFragments":[{"kind":"identifier","spelling":"isSeparator"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"split"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = Int.max, "},{"kind":"externalParam","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true, "},{"kind":"externalParam","spelling":"whereSeparator"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isSeparator"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","max(by:)"],"names":{"title":"max(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the maximum element in the sequence, using the given predicate"},{"text":"as the comparison between elements."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"This example shows how to use the `max(by:)` method on a"},{"text":"dictionary to find the key-value pair with the highest value."},{"text":""},{"text":"    let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]"},{"text":"    let greatestHue = hues.max { a, b in a.value < b.value }"},{"text":"    print(greatestHue)"},{"text":"    // Prints \"Optional((key: \"Heliotrope\", value: 296))\""},{"text":""},{"text":"- Parameter areInIncreasingOrder:  A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument;"},{"text":"  otherwise, `false`."},{"text":"- Returns: The sequence's maximum element if the sequence is not empty;"},{"text":"  otherwise, `nil`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"attribute","spelling":"@warn_unqualified_access"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"max"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","drop(while:)"],"names":{"title":"drop(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence by skipping the initial, consecutive elements that"},{"text":"satisfy the given predicate."},{"text":""},{"text":"The following example uses the `drop(while:)` method to skip over the"},{"text":"positive numbers at the beginning of the `numbers` array. The result"},{"text":"begins with the first element of `numbers` that does not satisfy"},{"text":"`predicate`."},{"text":""},{"text":"    let numbers = [3, 7, 4, -2, 9, -6, 10, 1]"},{"text":"    let startingWithNegative = numbers.drop(while: { $0 > 0 })"},{"text":"    // startingWithNegative == [-2, 9, -6, 10, 1]"},{"text":""},{"text":"If `predicate` matches every element in the sequence, the result is an"},{"text":"empty sequence."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the sequence as"},{"text":"  its argument and returns a Boolean value indicating whether the"},{"text":"  element should be included in the result."},{"text":"- Returns: A sequence starting after the initial, consecutive elements"},{"text":"  that satisfy `predicate`."},{"text":""},{"text":"- Complexity: O(*k*), where *k* is the number of elements to drop from"},{"text":"  the beginning of the sequence."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"drop"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"DropWhileSequence","preciseIdentifier":"s:s17DropWhileSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","sorted()"],"names":{"title":"sorted()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sorted"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the elements of the sequence, sorted."},{"text":""},{"text":"You can sort any sequence of elements that conform to the `Comparable`"},{"text":"protocol by calling this method. Elements are sorted in ascending order."},{"text":""},{"text":"Here's an example of sorting a list of students' names. Strings in Swift"},{"text":"conform to the `Comparable` protocol, so the names are sorted in"},{"text":"ascending order according to the less-than operator (`<`)."},{"text":""},{"text":"    let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]"},{"text":"    let sortedStudents = students.sorted()"},{"text":"    print(sortedStudents)"},{"text":"    // Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""},{"text":""},{"text":"To sort the elements of your sequence in descending order, pass the"},{"text":"greater-than operator (`>`) to the `sorted(by:)` method."},{"text":""},{"text":"    let descendingStudents = students.sorted(by: >)"},{"text":"    print(descendingStudents)"},{"text":"    // Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""},{"text":""},{"text":"The sorting algorithm is not guaranteed to be stable. A stable sort"},{"text":"preserves the relative order of elements that compare equal."},{"text":""},{"text":"- Returns: A sorted array of the sequence's elements."},{"text":""},{"text":"- Complexity: O(*n* log *n*), where *n* is the length of the sequence."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sorted"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.init","displayName":"Initializer"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV8IteratorV5queueAEyx_GACyxG_tcfc","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","Iterator","init(queue:)"],"names":{"title":"init(queue:)","subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"queue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">)"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"queue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">)"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":74,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","dropFirst(_:)"],"names":{"title":"dropFirst(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence containing all but the given number of initial"},{"text":"elements."},{"text":""},{"text":"If the number of elements to drop exceeds the number of elements in"},{"text":"the sequence, the result is an empty sequence."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4, 5]"},{"text":"    print(numbers.dropFirst(2))"},{"text":"    // Prints \"[3, 4, 5]\""},{"text":"    print(numbers.dropFirst(10))"},{"text":"    // Prints \"[]\""},{"text":""},{"text":"- Parameter k: The number of elements to drop from the beginning of"},{"text":"  the sequence. `k` must be greater than or equal to zero."},{"text":"- Returns: A sequence starting after the specified number of"},{"text":"  elements."},{"text":""},{"text":"- Complexity: O(1), with O(*k*) deferred to each iteration of the result,"},{"text":"  where *k* is the number of elements to drop from the beginning of"},{"text":"  the sequence."}]},"functionSignature":{"parameters":[{"name":"k","declarationFragments":[{"kind":"identifier","spelling":"k"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"k"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> "},{"kind":"typeIdentifier","spelling":"DropFirstSequence","preciseIdentifier":"s:s17DropFirstSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.struct","displayName":"Structure"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV8IteratorV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","Iterator"],"names":{"title":"PriorityQueue.Iterator","navigator":[{"kind":"identifier","spelling":"Iterator"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_NIODataStructures","constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Iterator"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":68,"character":18}}},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV5countSivp","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","count"],"names":{"title":"count","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]},"swiftExtension":{"extendedModule":"_NIODataStructures","constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"count"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":92,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","elementsEqual(_:)"],"names":{"title":"elementsEqual(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"elementsEqual"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether this sequence and another"},{"text":"sequence contain the same elements in the same order."},{"text":""},{"text":"At least one of the sequences must be finite."},{"text":""},{"text":"This example tests whether one countable range shares the same elements"},{"text":"as another countable range and an array."},{"text":""},{"text":"    let a = 1...3"},{"text":"    let b = 1...10"},{"text":""},{"text":"    print(a.elementsEqual(b))"},{"text":"    // Prints \"false\""},{"text":"    print(a.elementsEqual([1, 2, 3]))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameter other: A sequence to compare to this sequence."},{"text":"- Returns: `true` if this sequence and `other` contain the same elements"},{"text":"  in the same order."},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `other`."}]},"functionSignature":{"parameters":[{"name":"other","declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"OtherSequence","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"},{"kind":"sameType","lhs":"Self.Element","rhs":"OtherSequence.Element"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"elementsEqual"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV5clearyyF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","clear()"],"names":{"title":"clear()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"clear"},{"kind":"text","spelling":"()"}]},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"clear"},{"kind":"text","spelling":"()"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":55,"character":25}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","contains(where:)"],"names":{"title":"contains(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the sequence contains an"},{"text":"element that satisfies the given predicate."},{"text":""},{"text":"You can use the predicate to check for an element of a type that"},{"text":"doesn't conform to the `Equatable` protocol, such as the"},{"text":"`HTTPResponse` enumeration in this example."},{"text":""},{"text":"    enum HTTPResponse {"},{"text":"        case ok"},{"text":"        case error(Int)"},{"text":"    }"},{"text":""},{"text":"    let lastThreeResponses: [HTTPResponse] = [.ok, .ok, .error(404)]"},{"text":"    let hadError = lastThreeResponses.contains { element in"},{"text":"        if case .error = element {"},{"text":"            return true"},{"text":"        } else {"},{"text":"            return false"},{"text":"        }"},{"text":"    }"},{"text":"    // 'hadError' == true"},{"text":""},{"text":"Alternatively, a predicate can be satisfied by a range of `Equatable`"},{"text":"elements or a general condition. This example shows how you can check an"},{"text":"array for an expense greater than $100."},{"text":""},{"text":"    let expenses = [21.37, 55.21, 9.32, 10.18, 388.77, 11.41]"},{"text":"    let hasBigPurchase = expenses.contains { $0 > 100 }"},{"text":"    // 'hasBigPurchase' == true"},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the sequence"},{"text":"  as its argument and returns a Boolean value that indicates whether"},{"text":"  the passed element represents a match."},{"text":"- Returns: `true` if the sequence contains an element that satisfies"},{"text":"  `predicate`; otherwise, `false`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"where","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"contains"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:STsE19underestimatedCountSivp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","underestimatedCount"],"names":{"title":"underestimatedCount","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"underestimatedCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]},"docComment":{"module":"Swift","lines":[{"text":"A value less than or equal to the number of elements in the sequence,"},{"text":"calculated nondestructively."},{"text":""},{"text":"The default implementation returns 0. If you provide your own"},{"text":"implementation, make sure to compute the value nondestructively."},{"text":""},{"text":"- Complexity: O(1), except if the sequence also conforms to `Collection`."},{"text":"  In this case, see the documentation of `Collection.underestimatedCount`."}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"underestimatedCount"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","compactMap(_:)"],"names":{"title":"compactMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns an array containing the non-`nil` results of calling the given"},{"text":"transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive an array of non-optional values when your"},{"text":"transformation produces an optional value."},{"text":""},{"text":"In this example, note the difference in the result of using `map` and"},{"text":"`compactMap` with a transformation that returns an optional `Int` value."},{"text":""},{"text":"    let possibleNumbers = [\"1\", \"2\", \"three\", \"///4///\", \"5\"]"},{"text":""},{"text":"    let mapped: [Int?] = possibleNumbers.map { str in Int(str) }"},{"text":"    // [1, 2, nil, nil, 5]"},{"text":""},{"text":"    let compactMapped: [Int] = possibleNumbers.compactMap { str in Int(str) }"},{"text":"    // [1, 2, 5]"},{"text":""},{"text":"- Parameter transform: A closure that accepts an element of this"},{"text":"  sequence as its argument and returns an optional value."},{"text":"- Returns: An array of the non-`nil` results of calling `transform`"},{"text":"  with each element of the sequence."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of this sequence."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"parameters":[{"name":"ElementOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compactMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"ElementOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"?) "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"ElementOfResult"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE8reversedSay7ElementQzGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","reversed()"],"names":{"title":"reversed()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reversed"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns an array containing the elements of this sequence in reverse"},{"text":"order."},{"text":""},{"text":"The sequence must be finite."},{"text":""},{"text":"- Returns: An array containing the elements of this sequence in"},{"text":"  reverse order."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reversed"},{"kind":"text","spelling":"() -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","joined(separator:)"],"names":{"title":"joined(separator:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a new string by concatenating the elements of the sequence,"},{"text":"adding the given separator between each element."},{"text":""},{"text":"The following example shows how an array of strings can be joined to a"},{"text":"single, comma-separated string:"},{"text":""},{"text":"    let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]"},{"text":"    let list = cast.joined(separator: \", \")"},{"text":"    print(list)"},{"text":"    // Prints \"Vivien, Marlon, Kim, Karl\""},{"text":""},{"text":"- Parameter separator: A string to insert between each of the elements"},{"text":"  in this sequence. The default separator is an empty string."},{"text":"- Returns: A single, concatenated string."}]},"functionSignature":{"parameters":[{"name":"separator","declarationFragments":[{"kind":"identifier","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]}],"returns":[{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"StringProtocol","rhsPrecise":"s:Sy"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"StringProtocol","rhsPrecise":"s:Sy"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" = \"\") -> "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSays10ArraySliceVyABGGAB_SiSbtF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","split(separator:maxSplits:omittingEmptySubsequences:)"],"names":{"title":"split(separator:maxSplits:omittingEmptySubsequences:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"split"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the longest possible subsequences of the sequence, in order,"},{"text":"around elements equal to the given element."},{"text":""},{"text":"The resulting array consists of at most `maxSplits + 1` subsequences."},{"text":"Elements that are used to split the sequence are not returned as part of"},{"text":"any subsequence."},{"text":""},{"text":"The following examples show the effects of the `maxSplits` and"},{"text":"`omittingEmptySubsequences` parameters when splitting a string at each"},{"text":"space character (\" \"). The first use of `split` returns each word that"},{"text":"was originally separated by one or more spaces."},{"text":""},{"text":"    let line = \"BLANCHE:   I don't want realism. I want magic!\""},{"text":"    print(line.split(separator: \" \")"},{"text":"              .map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""},{"text":""},{"text":"The second example passes `1` for the `maxSplits` parameter, so the"},{"text":"original string is split just once, into two new strings."},{"text":""},{"text":"    print(line.split(separator: \" \", maxSplits: 1)"},{"text":"              .map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"  I don\\'t want realism. I want magic!\"]\""},{"text":""},{"text":"The final example passes `false` for the `omittingEmptySubsequences`"},{"text":"parameter, so the returned array contains empty strings where spaces"},{"text":"were repeated."},{"text":""},{"text":"    print(line.split(separator: \" \", omittingEmptySubsequences: false)"},{"text":"              .map(String.init))"},{"text":"    // Prints \"[\"BLANCHE:\", \"\", \"\", \"I\", \"don\\'t\", \"want\", \"realism.\", \"I\", \"want\", \"magic!\"]\""},{"text":""},{"text":"- Parameters:"},{"text":"  - separator: The element that should be split upon."},{"text":"  - maxSplits: The maximum number of times to split the sequence, or one"},{"text":"    less than the number of subsequences to return. If `maxSplits + 1`"},{"text":"    subsequences are returned, the last one is a suffix of the original"},{"text":"    sequence containing the remaining elements. `maxSplits` must be"},{"text":"    greater than or equal to zero. The default value is `Int.max`."},{"text":"  - omittingEmptySubsequences: If `false`, an empty subsequence is"},{"text":"    returned in the result for each consecutive pair of `separator`"},{"text":"    elements in the sequence and for each instance of `separator` at the"},{"text":"    start or end of the sequence. If `true`, only nonempty subsequences"},{"text":"    are returned. The default value is `true`."},{"text":"- Returns: An array of subsequences, split from this sequence's elements."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"separator","declarationFragments":[{"kind":"identifier","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}]},{"name":"maxSplits","declarationFragments":[{"kind":"identifier","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]},{"name":"omittingEmptySubsequences","declarationFragments":[{"kind":"identifier","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}]},"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"split"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"maxSplits"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = Int.max, "},{"kind":"externalParam","spelling":"omittingEmptySubsequences"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" = true) -> ["},{"kind":"typeIdentifier","spelling":"ArraySlice","preciseIdentifier":"s:s10ArraySliceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","prefix(while:)"],"names":{"title":"prefix(while:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence containing the initial, consecutive elements that"},{"text":"satisfy the given predicate."},{"text":""},{"text":"The following example uses the `prefix(while:)` method to find the"},{"text":"positive numbers at the beginning of the `numbers` array. Every element"},{"text":"of `numbers` up to, but not including, the first negative value is"},{"text":"included in the result."},{"text":""},{"text":"    let numbers = [3, 7, 4, -2, 9, -6, 10, 1]"},{"text":"    let positivePrefix = numbers.prefix(while: { $0 > 0 })"},{"text":"    // positivePrefix == [3, 7, 4]"},{"text":""},{"text":"If `predicate` matches every element in the sequence, the resulting"},{"text":"sequence contains every element of the sequence."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the sequence as"},{"text":"  its argument and returns a Boolean value indicating whether the"},{"text":"  element should be included in the result."},{"text":"- Returns: A sequence of the initial, consecutive elements that"},{"text":"  satisfy `predicate`."},{"text":""},{"text":"- Complexity: O(*k*), where *k* is the length of the result."}]},"functionSignature":{"parameters":[{"name":"while","internalName":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"while"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","joined(separator:)"],"names":{"title":"joined(separator:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Separator"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Separator"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"JoinedSequence","preciseIdentifier":"s:s14JoinedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the concatenated elements of this sequence of sequences,"},{"text":"inserting the given separator between each element."},{"text":""},{"text":"This example shows how an array of `[Int]` instances can be joined, using"},{"text":"another `[Int]` instance as the separator:"},{"text":""},{"text":"    let nestedNumbers = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]"},{"text":"    let joined = nestedNumbers.joined(separator: [-1, -2])"},{"text":"    print(Array(joined))"},{"text":"    // Prints \"[1, 2, 3, -1, -2, 4, 5, 6, -1, -2, 7, 8, 9]\""},{"text":""},{"text":"- Parameter separator: A sequence to insert between each of this"},{"text":"  sequence's elements."},{"text":"- Returns: The joined sequence of elements."}]},"functionSignature":{"parameters":[{"name":"separator","declarationFragments":[{"kind":"identifier","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Separator"}]}],"returns":[{"kind":"typeIdentifier","spelling":"JoinedSequence","preciseIdentifier":"s:s14JoinedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftGenerics":{"parameters":[{"name":"Separator","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"Separator.Element","rhs":"Self.Element.Element"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"joined"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Separator"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"separator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Separator"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"JoinedSequence","preciseIdentifier":"s:s14JoinedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"Separator"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Separator"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public"},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV2eeoiySbACyxG_AEtFZ","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","==(_:_:)"],"names":{"title":"==(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"swiftExtension":{"extendedModule":"_NIODataStructures","constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"=="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">, "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PriorityQueue","preciseIdentifier":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":62,"character":23}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE10allSatisfyyS2b7ElementQzKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","allSatisfy(_:)"],"names":{"title":"allSatisfy(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether every element of a sequence"},{"text":"satisfies a given predicate."},{"text":""},{"text":"The following code uses this method to test whether all the names in an"},{"text":"array have at least five characters:"},{"text":""},{"text":"    let names = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]"},{"text":"    let allHaveAtLeastFive = names.allSatisfy({ $0.count >= 5 })"},{"text":"    // allHaveAtLeastFive == true"},{"text":""},{"text":"If the sequence is empty, this method returns `true`."},{"text":""},{"text":"- Parameter predicate: A closure that takes an element of the sequence"},{"text":"  as its argument and returns a Boolean value that indicates whether"},{"text":"  the passed element satisfies a condition."},{"text":"- Returns: `true` if the sequence contains only elements that satisfy"},{"text":"  `predicate`; otherwise, `false`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"predicate","declarationFragments":[{"kind":"identifier","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"allSatisfy"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"predicate"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV11removeFirst5whereySbxKXE_tKF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","removeFirst(where:)"],"names":{"title":"removeFirst(where:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"removeFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}]},"functionSignature":{"parameters":[{"name":"where","internalName":"shouldBeRemoved","declarationFragments":[{"kind":"identifier","spelling":"shouldBeRemoved"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"removeFirst"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"shouldBeRemoved"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":29,"character":25}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV4peekxSgyF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","peek()"],"names":{"title":"peek()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"peek"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"peek"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"?"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":39,"character":16}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","forEach(_:)"],"names":{"title":"forEach(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"forEach"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}]},"docComment":{"module":"Swift","lines":[{"text":"Calls the given closure on each element in the sequence in the same order"},{"text":"as a `for`-`in` loop."},{"text":""},{"text":"The two loops in the following example produce the same output:"},{"text":""},{"text":"    let numberWords = [\"one\", \"two\", \"three\"]"},{"text":"    for word in numberWords {"},{"text":"        print(word)"},{"text":"    }"},{"text":"    // Prints \"one\""},{"text":"    // Prints \"two\""},{"text":"    // Prints \"three\""},{"text":""},{"text":"    numberWords.forEach { word in"},{"text":"        print(word)"},{"text":"    }"},{"text":"    // Same as above"},{"text":""},{"text":"Using the `forEach` method is distinct from a `for`-`in` loop in two"},{"text":"important ways:"},{"text":""},{"text":"1. You cannot use a `break` or `continue` statement to exit the current"},{"text":"   call of the `body` closure or skip subsequent calls."},{"text":"2. Using the `return` statement in the `body` closure will exit only from"},{"text":"   the current call to `body`, not from any outer scope, and won't skip"},{"text":"   subsequent calls."},{"text":""},{"text":"- Parameter body: A closure that takes an element of the sequence as a"},{"text":"  parameter."}]},"functionSignature":{"parameters":[{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"forEach"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","lexicographicallyPrecedes(_:)"],"names":{"title":"lexicographicallyPrecedes(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lexicographicallyPrecedes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":"sequence in a lexicographical (dictionary) ordering, using the"},{"text":"less-than operator (`<`) to compare elements."},{"text":""},{"text":"This example uses the `lexicographicallyPrecedes` method to test which"},{"text":"array of integers comes first in a lexicographical ordering."},{"text":""},{"text":"    let a = [1, 2, 2, 2]"},{"text":"    let b = [1, 2, 3, 4]"},{"text":""},{"text":"    print(a.lexicographicallyPrecedes(b))"},{"text":"    // Prints \"true\""},{"text":"    print(b.lexicographicallyPrecedes(b))"},{"text":"    // Prints \"false\""},{"text":""},{"text":"- Parameter other: A sequence to compare to this sequence."},{"text":"- Returns: `true` if this sequence precedes `other` in a dictionary"},{"text":"  ordering; otherwise, `false`."},{"text":""},{"text":"- Note: This method implements the mathematical notion of lexicographical"},{"text":"  ordering, which has no connection to Unicode.  If you are sorting"},{"text":"  strings to present to the end user, use `String` APIs that"},{"text":"  perform localized comparison."},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `other`."}]},"functionSignature":{"parameters":[{"name":"other","declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"OtherSequence","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"},{"kind":"sameType","lhs":"Self.Element","rhs":"OtherSequence.Element"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lexicographicallyPrecedes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ST12_RegexParserE3allyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","all(_:)"],"names":{"title":"all(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"all"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"f","declarationFragments":[{"kind":"identifier","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"all"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","withContiguousStorageIfAvailable(_:)"],"names":{"title":"withContiguousStorageIfAvailable(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withContiguousStorageIfAvailable"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"?"}]},"functionSignature":{"parameters":[{"name":"body","declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"}]}],"returns":[{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"?"}]},"swiftGenerics":{"parameters":[{"name":"R","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withContiguousStorageIfAvailable"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"R"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"UnsafeBufferPointer","preciseIdentifier":"s:SR"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":">) "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"R"},{"kind":"text","spelling":"?"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","starts(with:by:)"],"names":{"title":"starts(with:by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"starts"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"PossiblePrefix"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":"sequence are equivalent to the elements in another sequence, using"},{"text":"the given predicate as the equivalence test."},{"text":""},{"text":"The predicate must be a *equivalence relation* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areEquivalent(a, a)` is always `true`. (Reflexivity)"},{"text":"- `areEquivalent(a, b)` implies `areEquivalent(b, a)`. (Symmetry)"},{"text":"- If `areEquivalent(a, b)` and `areEquivalent(b, c)` are both `true`, then"},{"text":"  `areEquivalent(a, c)` is also `true`. (Transitivity)"},{"text":""},{"text":"- Parameters:"},{"text":"  - possiblePrefix: A sequence to compare to this sequence."},{"text":"  - areEquivalent: A predicate that returns `true` if its two arguments"},{"text":"    are equivalent; otherwise, `false`."},{"text":"- Returns: `true` if the initial elements of the sequence are equivalent"},{"text":"  to the elements of `possiblePrefix`; otherwise, `false`. If"},{"text":"  `possiblePrefix` has no elements, the return value is `true`."},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `possiblePrefix`."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"possiblePrefix","declarationFragments":[{"kind":"identifier","spelling":"possiblePrefix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"}]},{"name":"by","internalName":"areEquivalent","declarationFragments":[{"kind":"identifier","spelling":"areEquivalent"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"PossiblePrefix","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"starts"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"PossiblePrefix"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"possiblePrefix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areEquivalent"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV11descriptionSSvp","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","description"],"names":{"title":"description","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},"swiftExtension":{"extendedModule":"_NIODataStructures","constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"description"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":99,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","elementsEqual(_:by:)"],"names":{"title":"elementsEqual(_:by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"elementsEqual"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether this sequence and another"},{"text":"sequence contain equivalent elements in the same order, using the given"},{"text":"predicate as the equivalence test."},{"text":""},{"text":"At least one of the sequences must be finite."},{"text":""},{"text":"The predicate must be a *equivalence relation* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areEquivalent(a, a)` is always `true`. (Reflexivity)"},{"text":"- `areEquivalent(a, b)` implies `areEquivalent(b, a)`. (Symmetry)"},{"text":"- If `areEquivalent(a, b)` and `areEquivalent(b, c)` are both `true`, then"},{"text":"  `areEquivalent(a, c)` is also `true`. (Transitivity)"},{"text":""},{"text":"- Parameters:"},{"text":"  - other: A sequence to compare to this sequence."},{"text":"  - areEquivalent: A predicate that returns `true` if its two arguments"},{"text":"    are equivalent; otherwise, `false`."},{"text":"- Returns: `true` if this sequence and `other` contain equivalent items,"},{"text":"  using `areEquivalent` as the equivalence test; otherwise, `false.`"},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `other`."}]},"functionSignature":{"parameters":[{"name":"other","declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"}]},{"name":"by","internalName":"areEquivalent","declarationFragments":[{"kind":"identifier","spelling":"areEquivalent"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"OtherSequence","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"elementsEqual"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areEquivalent"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6prefixys14PrefixSequenceVyxGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","prefix(_:)"],"names":{"title":"prefix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PrefixSequence","preciseIdentifier":"s:s14PrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence, up to the specified maximum length, containing the"},{"text":"initial elements of the sequence."},{"text":""},{"text":"If the maximum length exceeds the number of elements in the sequence,"},{"text":"the result contains all the elements in the sequence."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4, 5]"},{"text":"    print(numbers.prefix(2))"},{"text":"    // Prints \"[1, 2]\""},{"text":"    print(numbers.prefix(10))"},{"text":"    // Prints \"[1, 2, 3, 4, 5]\""},{"text":""},{"text":"- Parameter maxLength: The maximum number of elements to return. The"},{"text":"  value of `maxLength` must be greater than or equal to zero."},{"text":"- Returns: A sequence starting at the beginning of this sequence"},{"text":"  with at most `maxLength` elements."},{"text":""},{"text":"- Complexity: O(1)"}]},"functionSignature":{"parameters":[{"name":"maxLength","declarationFragments":[{"kind":"identifier","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"typeIdentifier","spelling":"PrefixSequence","preciseIdentifier":"s:s14PrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"prefix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"PrefixSequence","preciseIdentifier":"s:s14PrefixSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","reduce(_:_:)"],"names":{"title":"reduce(_:_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the result of combining the elements of the sequence using the"},{"text":"given closure."},{"text":""},{"text":"Use the `reduce(_:_:)` method to produce a single value from the elements"},{"text":"of an entire sequence. For example, you can use this method on an array"},{"text":"of numbers to find their sum or product."},{"text":""},{"text":"The `nextPartialResult` closure is called sequentially with an"},{"text":"accumulating value initialized to `initialResult` and each element of"},{"text":"the sequence. This example shows how to find the sum of an array of"},{"text":"numbers."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4]"},{"text":"    let numberSum = numbers.reduce(0, { x, y in"},{"text":"        x + y"},{"text":"    })"},{"text":"    // numberSum == 10"},{"text":""},{"text":"When `numbers.reduce(_:_:)` is called, the following steps occur:"},{"text":""},{"text":"1. The `nextPartialResult` closure is called with `initialResult`---`0`"},{"text":"   in this case---and the first element of `numbers`, returning the sum:"},{"text":"   `1`."},{"text":"2. The closure is called again repeatedly with the previous call's return"},{"text":"   value and each element of the sequence."},{"text":"3. When the sequence is exhausted, the last value returned from the"},{"text":"   closure is returned to the caller."},{"text":""},{"text":"If the sequence has no elements, `nextPartialResult` is never executed"},{"text":"and `initialResult` is the result of the call to `reduce(_:_:)`."},{"text":""},{"text":"- Parameters:"},{"text":"  - initialResult: The value to use as the initial accumulating value."},{"text":"    `initialResult` is passed to `nextPartialResult` the first time the"},{"text":"    closure is executed."},{"text":"  - nextPartialResult: A closure that combines an accumulating value and"},{"text":"    an element of the sequence into a new accumulating value, to be used"},{"text":"    in the next call of the `nextPartialResult` closure or returned to"},{"text":"    the caller."},{"text":"- Returns: The final accumulated value. If the sequence has no elements,"},{"text":"  the result is `initialResult`."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"initialResult","declarationFragments":[{"kind":"identifier","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"}]},{"name":"nextPartialResult","declarationFragments":[{"kind":"identifier","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Result"}]},"swiftGenerics":{"parameters":[{"name":"Result","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"reduce"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"Result"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"initialResult"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"nextPartialResult"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Result"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:s23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","halfWidthCornerQuoted"],"names":{"title":"halfWidthCornerQuoted","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"halfWidthCornerQuoted"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"halfWidthCornerQuoted"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"String","preciseIdentifier":"s:SS"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6suffixySay7ElementQzGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","suffix(_:)"],"names":{"title":"suffix(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"suffix"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a subsequence, up to the given maximum length, containing the"},{"text":"final elements of the sequence."},{"text":""},{"text":"The sequence must be finite. If the maximum length exceeds the number of"},{"text":"elements in the sequence, the result contains all the elements in the"},{"text":"sequence."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4, 5]"},{"text":"    print(numbers.suffix(2))"},{"text":"    // Prints \"[4, 5]\""},{"text":"    print(numbers.suffix(10))"},{"text":"    // Prints \"[1, 2, 3, 4, 5]\""},{"text":""},{"text":"- Parameter maxLength: The maximum number of elements to return. The"},{"text":"  value of `maxLength` must be greater than or equal to zero."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"maxLength","declarationFragments":[{"kind":"identifier","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"suffix"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"maxLength"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6filterySay7ElementQzGSbACKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","filter(_:)"],"names":{"title":"filter(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns an array containing, in order, the elements of the sequence"},{"text":"that satisfy the given predicate."},{"text":""},{"text":"In this example, `filter(_:)` is used to include only names shorter than"},{"text":"five characters."},{"text":""},{"text":"    let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]"},{"text":"    let shortNames = cast.filter { $0.count < 5 }"},{"text":"    print(shortNames)"},{"text":"    // Prints \"[\"Kim\", \"Karl\"]\""},{"text":""},{"text":"- Parameter isIncluded: A closure that takes an element of the"},{"text":"  sequence as its argument and returns a Boolean value indicating"},{"text":"  whether the element should be included in the returned array."},{"text":"- Returns: An array of the elements that `isIncluded` allowed."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"isIncluded","declarationFragments":[{"kind":"identifier","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"filter"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"isIncluded"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","lexicographicallyPrecedes(_:by:)"],"names":{"title":"lexicographicallyPrecedes(_:by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lexicographicallyPrecedes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the sequence precedes another"},{"text":"sequence in a lexicographical (dictionary) ordering, using the given"},{"text":"predicate to compare elements."},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also"},{"text":"  `true`. (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"- Parameters:"},{"text":"  - other: A sequence to compare to this sequence."},{"text":"  - areInIncreasingOrder:  A predicate that returns `true` if its first"},{"text":"    argument should be ordered before its second argument; otherwise,"},{"text":"    `false`."},{"text":"- Returns: `true` if this sequence precedes `other` in a dictionary"},{"text":"  ordering as ordered by `areInIncreasingOrder`; otherwise, `false`."},{"text":""},{"text":"- Note: This method implements the mathematical notion of lexicographical"},{"text":"  ordering, which has no connection to Unicode.  If you are sorting"},{"text":"  strings to present to the end user, use `String` APIs that perform"},{"text":"  localized comparison instead."},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `other`."}]},"functionSignature":{"parameters":[{"name":"other","declarationFragments":[{"kind":"identifier","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"}]},{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"OtherSequence","index":0,"depth":1}],"constraints":[{"kind":"sameType","lhs":"Self.Element","rhs":"OtherSequence.Element"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lexicographicallyPrecedes"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"OtherSequence"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"other"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"OtherSequence"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","enumerated()"],"names":{"title":"enumerated()","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerated"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence of pairs (*n*, *x*), where *n* represents a"},{"text":"consecutive integer starting at zero and *x* represents an element of"},{"text":"the sequence."},{"text":""},{"text":"This example enumerates the characters of the string \"Swift\" and prints"},{"text":"each character along with its place in the string."},{"text":""},{"text":"    for (n, c) in \"Swift\".enumerated() {"},{"text":"        print(\"\\(n): '\\(c)'\")"},{"text":"    }"},{"text":"    // Prints \"0: 'S'\""},{"text":"    // Prints \"1: 'w'\""},{"text":"    // Prints \"2: 'i'\""},{"text":"    // Prints \"3: 'f'\""},{"text":"    // Prints \"4: 't'\""},{"text":""},{"text":"When you enumerate a collection, the integer part of each pair is a counter"},{"text":"for the enumeration, but is not necessarily the index of the paired value."},{"text":"These counters can be used as indices only in instances of zero-based,"},{"text":"integer-indexed collections, such as `Array` and `ContiguousArray`. For"},{"text":"other collections the counters may be out of range or of the wrong type"},{"text":"to use as an index. To iterate over the elements of a collection with its"},{"text":"indices, use the `zip(_:_:)` function."},{"text":""},{"text":"This example iterates over the indices and elements of a set, building a"},{"text":"list consisting of indices of names with five or fewer letters."},{"text":""},{"text":"    let names: Set = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"Nicolás\"]"},{"text":"    var shorterIndices: [Set<String>.Index] = []"},{"text":"    for (i, name) in zip(names.indices, names) {"},{"text":"        if name.count <= 5 {"},{"text":"            shorterIndices.append(i)"},{"text":"        }"},{"text":"    }"},{"text":""},{"text":"Now that the `shorterIndices` array holds the indices of the shorter"},{"text":"names in the `names` set, you can use those indices to access elements in"},{"text":"the set."},{"text":""},{"text":"    for i in shorterIndices {"},{"text":"        print(names[i])"},{"text":"    }"},{"text":"    // Prints \"Sofia\""},{"text":"    // Prints \"Mateo\""},{"text":""},{"text":"- Returns: A sequence of pairs enumerating the sequence."},{"text":""},{"text":"- Complexity: O(1)"}]},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"enumerated"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"EnumeratedSequence","preciseIdentifier":"s:s18EnumeratedSequenceV"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":">"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE3mapySayqd__Gqd__7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","map(_:)"],"names":{"title":"map(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns an array containing the results of mapping the given closure"},{"text":"over the sequence's elements."},{"text":""},{"text":"In this example, `map` is used first to convert the names in the array"},{"text":"to lowercase strings and then to count their characters."},{"text":""},{"text":"    let cast = [\"Vivien\", \"Marlon\", \"Kim\", \"Karl\"]"},{"text":"    let lowercaseNames = cast.map { $0.lowercased() }"},{"text":"    // 'lowercaseNames' == [\"vivien\", \"marlon\", \"kim\", \"karl\"]"},{"text":"    let letterCounts = cast.map { $0.count }"},{"text":"    // 'letterCounts' == [6, 6, 3, 4]"},{"text":""},{"text":"- Parameter transform: A mapping closure. `transform` accepts an"},{"text":"  element of this sequence as its parameter and returns a transformed"},{"text":"  value of the same or of a different type."},{"text":"- Returns: An array containing the transformed elements of this"},{"text":"  sequence."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"map"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV6removeyyxF","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","remove(_:)"],"names":{"title":"remove(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"remove"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}]},"functionSignature":{"parameters":[{"name":"key","declarationFragments":[{"kind":"identifier","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"}]}],"returns":[{"kind":"text","spelling":"()"}]},"swiftGenerics":{"parameters":[{"name":"Element","index":0,"depth":0}],"constraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},"declarationFragments":[{"kind":"keyword","spelling":"mutating"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"remove"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"key"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":")"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":24,"character":25}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","sorted(by:)"],"names":{"title":"sorted(by:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sorted"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the elements of the sequence, sorted using the given predicate as"},{"text":"the comparison between elements."},{"text":""},{"text":"When you want to sort a sequence of elements that don't conform to the"},{"text":"`Comparable` protocol, pass a predicate to this method that returns"},{"text":"`true` when the first element should be ordered before the second. The"},{"text":"elements of the resulting array are ordered according to the given"},{"text":"predicate."},{"text":""},{"text":"In the following example, the predicate provides an ordering for an array"},{"text":"of a custom `HTTPResponse` type. The predicate orders errors before"},{"text":"successes and sorts the error responses by their error code."},{"text":""},{"text":"    enum HTTPResponse {"},{"text":"        case ok"},{"text":"        case error(Int)"},{"text":"    }"},{"text":""},{"text":"    let responses: [HTTPResponse] = [.error(500), .ok, .ok, .error(404), .error(403)]"},{"text":"    let sortedResponses = responses.sorted {"},{"text":"        switch ($0, $1) {"},{"text":"        // Order errors by code"},{"text":"        case let (.error(aCode), .error(bCode)):"},{"text":"            return aCode < bCode"},{"text":""},{"text":"        // All successes are equivalent, so none is before any other"},{"text":"        case (.ok, .ok): return false"},{"text":""},{"text":"        // Order errors before successes"},{"text":"        case (.error, .ok): return true"},{"text":"        case (.ok, .error): return false"},{"text":"        }"},{"text":"    }"},{"text":"    print(sortedResponses)"},{"text":"    // Prints \"[.error(403), .error(404), .error(500), .ok, .ok]\""},{"text":""},{"text":"You also use this method to sort elements that conform to the"},{"text":"`Comparable` protocol in descending order. To sort your sequence in"},{"text":"descending order, pass the greater-than operator (`>`) as the"},{"text":"`areInIncreasingOrder` parameter."},{"text":""},{"text":"    let students: Set = [\"Kofi\", \"Abena\", \"Peter\", \"Kweku\", \"Akosua\"]"},{"text":"    let descendingStudents = students.sorted(by: >)"},{"text":"    print(descendingStudents)"},{"text":"    // Prints \"[\"Peter\", \"Kweku\", \"Kofi\", \"Akosua\", \"Abena\"]\""},{"text":""},{"text":"Calling the related `sorted()` method is equivalent to calling this"},{"text":"method and passing the less-than operator (`<`) as the predicate."},{"text":""},{"text":"    print(students.sorted())"},{"text":"    // Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""},{"text":"    print(students.sorted(by: <))"},{"text":"    // Prints \"[\"Abena\", \"Akosua\", \"Kofi\", \"Kweku\", \"Peter\"]\""},{"text":""},{"text":"The predicate must be a *strict weak ordering* over the elements. That"},{"text":"is, for any elements `a`, `b`, and `c`, the following conditions must"},{"text":"hold:"},{"text":""},{"text":"- `areInIncreasingOrder(a, a)` is always `false`. (Irreflexivity)"},{"text":"- If `areInIncreasingOrder(a, b)` and `areInIncreasingOrder(b, c)` are"},{"text":"  both `true`, then `areInIncreasingOrder(a, c)` is also `true`."},{"text":"  (Transitive comparability)"},{"text":"- Two elements are *incomparable* if neither is ordered before the other"},{"text":"  according to the predicate. If `a` and `b` are incomparable, and `b`"},{"text":"  and `c` are incomparable, then `a` and `c` are also incomparable."},{"text":"  (Transitive incomparability)"},{"text":""},{"text":"The sorting algorithm is not guaranteed to be stable. A stable sort"},{"text":"preserves the relative order of elements for which"},{"text":"`areInIncreasingOrder` does not establish an order."},{"text":""},{"text":"- Parameter areInIncreasingOrder: A predicate that returns `true` if its"},{"text":"  first argument should be ordered before its second argument;"},{"text":"  otherwise, `false`."},{"text":"- Returns: A sorted array of the sequence's elements."},{"text":""},{"text":"- Complexity: O(*n* log *n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"by","internalName":"areInIncreasingOrder","declarationFragments":[{"kind":"identifier","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sorted"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"by"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"areInIncreasingOrder"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","shuffled(using:)"],"names":{"title":"shuffled(using:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shuffled"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns the elements of the sequence, shuffled using the given generator"},{"text":"as a source for randomness."},{"text":""},{"text":"You use this method to randomize the elements of a sequence when you are"},{"text":"using a custom random number generator. For example, you can shuffle the"},{"text":"numbers between `0` and `9` by calling the `shuffled(using:)` method on"},{"text":"that range:"},{"text":""},{"text":"    let numbers = 0...9"},{"text":"    let shuffledNumbers = numbers.shuffled(using: &myGenerator)"},{"text":"    // shuffledNumbers == [8, 9, 4, 3, 2, 6, 7, 0, 5, 1]"},{"text":""},{"text":"- Parameter generator: The random number generator to use when shuffling"},{"text":"  the sequence."},{"text":"- Returns: An array of this sequence's elements in a shuffled order."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."},{"text":"- Note: The algorithm used to shuffle a sequence may change in a future"},{"text":"  version of Swift. If you're passing a generator that results in the"},{"text":"  same shuffled order each time you run your program, that sequence may"},{"text":"  change when your program is compiled using a different version of"},{"text":"  Swift."}]},"functionSignature":{"parameters":[{"name":"using","internalName":"generator","declarationFragments":[{"kind":"identifier","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"parameters":[{"name":"T","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"T","rhs":"RandomNumberGenerator","rhsPrecise":"s:SG"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"shuffled"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"using"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"generator"},{"kind":"text","spelling":": "},{"kind":"keyword","spelling":"inout"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"] "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"RandomNumberGenerator","preciseIdentifier":"s:SG"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE8dropLastySay7ElementQzGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","dropLast(_:)"],"names":{"title":"dropLast(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropLast"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":") -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a sequence containing all but the given number of final"},{"text":"elements."},{"text":""},{"text":"The sequence must be finite. If the number of elements to drop exceeds"},{"text":"the number of elements in the sequence, the result is an empty"},{"text":"sequence."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4, 5]"},{"text":"    print(numbers.dropLast(2))"},{"text":"    // Prints \"[1, 2, 3]\""},{"text":"    print(numbers.dropLast(10))"},{"text":"    // Prints \"[]\""},{"text":""},{"text":"- Parameter n: The number of elements to drop off the end of the"},{"text":"  sequence. `n` must be greater than or equal to zero."},{"text":"- Returns: A sequence leaving off the specified number of elements."},{"text":""},{"text":"- Complexity: O(*n*), where *n* is the length of the sequence."}]},"functionSignature":{"parameters":[{"name":"k","declarationFragments":[{"kind":"identifier","spelling":"k"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"dropLast"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"k"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Int","preciseIdentifier":"s:Si"},{"kind":"text","spelling":" = 1) -> ["},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}],"accessLevel":"public"},{"kind":{"identifier":"swift.property","displayName":"Instance Property"},"identifier":{"precise":"s:18_NIODataStructures13PriorityQueueV7isEmptySbvp","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","isEmpty"],"names":{"title":"isEmpty","subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"isEmpty"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"accessLevel":"public","location":{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.38.0/.build/checkouts/swift-nio/Sources/_NIODataStructures/PriorityQueue.swift","position":{"line":44,"character":15}}},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","flatMap(_:)"],"names":{"title":"flatMap(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns an array containing the concatenated results of calling the"},{"text":"given transformation with each element of this sequence."},{"text":""},{"text":"Use this method to receive a single-level collection when your"},{"text":"transformation produces a sequence or collection for each element."},{"text":""},{"text":"In this example, note the difference in the result of using `map` and"},{"text":"`flatMap` with a transformation that returns an array."},{"text":""},{"text":"    let numbers = [1, 2, 3, 4]"},{"text":""},{"text":"    let mapped = numbers.map { Array(repeating: $0, count: $0) }"},{"text":"    // [[1], [2, 2], [3, 3, 3], [4, 4, 4, 4]]"},{"text":""},{"text":"    let flatMapped = numbers.flatMap { Array(repeating: $0, count: $0) }"},{"text":"    // [1, 2, 2, 3, 3, 3, 4, 4, 4, 4]"},{"text":""},{"text":"In fact, `s.flatMap(transform)`  is equivalent to"},{"text":"`Array(s.map(transform).joined())`."},{"text":""},{"text":"- Parameter transform: A closure that accepts an element of this"},{"text":"  sequence as its argument and returns a sequence or collection."},{"text":"- Returns: The resulting flattened array."},{"text":""},{"text":"- Complexity: O(*m* + *n*), where *n* is the length of this sequence"},{"text":"  and *m* is the length of the result."}]},"functionSignature":{"parameters":[{"name":"transform","declarationFragments":[{"kind":"identifier","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"}]}],"returns":[{"kind":"text","spelling":"["},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"]"}]},"swiftGenerics":{"parameters":[{"name":"SegmentOfResult","index":0,"depth":1}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"flatMap"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"SegmentOfResult"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"transform"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> ["},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":"] "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"SegmentOfResult"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:ST12_RegexParserE4noneyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","none(_:)"],"names":{"title":"none(_:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"none"},{"kind":"text","spelling":"(("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"f","declarationFragments":[{"kind":"identifier","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"none"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"f"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.func.op","displayName":"Operator"},"identifier":{"precise":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","!=(_:_:)"],"names":{"title":"!=(_:_:)","subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"functionSignature":{"parameters":[{"name":"lhs","declarationFragments":[{"kind":"identifier","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]},{"name":"rhs","declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftExtension":{"extendedModule":"Swift"},"declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"!="},{"kind":"text","spelling":" "},{"kind":"text","spelling":"("},{"kind":"internalParam","spelling":"lhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}],"accessLevel":"public"},{"kind":{"identifier":"swift.method","displayName":"Instance Method"},"identifier":{"precise":"s:STsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","interfaceLanguage":"swift"},"pathComponents":["PriorityQueue","starts(with:)"],"names":{"title":"starts(with:)","subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"starts"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"PossiblePrefix"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"docComment":{"module":"Swift","lines":[{"text":"Returns a Boolean value indicating whether the initial elements of the"},{"text":"sequence are the same as the elements in another sequence."},{"text":""},{"text":"This example tests whether one countable range begins with the elements"},{"text":"of another countable range."},{"text":""},{"text":"    let a = 1...3"},{"text":"    let b = 1...10"},{"text":""},{"text":"    print(b.starts(with: a))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"Passing a sequence with no elements or an empty collection as"},{"text":"`possiblePrefix` always results in `true`."},{"text":""},{"text":"    print(b.starts(with: []))"},{"text":"    // Prints \"true\""},{"text":""},{"text":"- Parameter possiblePrefix: A sequence to compare to this sequence."},{"text":"- Returns: `true` if the initial elements of the sequence are the same as"},{"text":"  the elements of `possiblePrefix`; otherwise, `false`. If"},{"text":"  `possiblePrefix` has no elements, the return value is `true`."},{"text":""},{"text":"- Complexity: O(*m*), where *m* is the lesser of the length of the"},{"text":"  sequence and the length of `possiblePrefix`."}]},"functionSignature":{"parameters":[{"name":"with","internalName":"possiblePrefix","declarationFragments":[{"kind":"identifier","spelling":"possiblePrefix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"}]}],"returns":[{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"}]},"swiftGenerics":{"parameters":[{"name":"PossiblePrefix","index":0,"depth":1}],"constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"},{"kind":"sameType","lhs":"Self.Element","rhs":"PossiblePrefix.Element"}]},"swiftExtension":{"extendedModule":"Swift","constraints":[{"kind":"conformance","lhs":"Self.Element","rhs":"Equatable","rhsPrecise":"s:SQ"}]},"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"starts"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"PossiblePrefix"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"possiblePrefix"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","spelling":"Sequence","preciseIdentifier":"s:ST"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"},{"kind":"text","spelling":" == "},{"kind":"typeIdentifier","spelling":"PossiblePrefix"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"Element"}],"accessLevel":"public"}],"relationships":[{"kind":"memberOf","source":"s:STsE3mapySayqd__Gqd__7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE3mapySayqd__Gqd__7ElementQzKXEKlF","displayName":"Sequence.map(_:)"}},{"kind":"memberOf","source":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF","displayName":"Sequence.lexicographicallyPrecedes(_:by:)"}},{"kind":"memberOf","source":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE10enumerateds18EnumeratedSequenceVyxGyF","displayName":"Sequence.enumerated()"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV6removeyyxF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE6filterySay7ElementQzGSbACKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6filterySay7ElementQzGSbACKXEKF","displayName":"Sequence.filter(_:)"}},{"kind":"memberOf","source":"s:s23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:s23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","displayName":"CustomStringConvertible.halfWidthCornerQuoted"}},{"kind":"memberOf","source":"s:STsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF","displayName":"Sequence.shuffled(using:)"}},{"kind":"memberOf","source":"s:STsE8dropLastySay7ElementQzGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE8dropLastySay7ElementQzGSiF","displayName":"Sequence.dropLast(_:)"}},{"kind":"memberOf","source":"s:STsE6suffixySay7ElementQzGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6suffixySay7ElementQzGSiF","displayName":"Sequence.suffix(_:)"}},{"kind":"memberOf","source":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF","displayName":"Sequence.sorted(by:)"}},{"kind":"memberOf","source":"s:STsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF","displayName":"Sequence.starts(with:)"}},{"kind":"conformsTo","source":"s:18_NIODataStructures13PriorityQueueV","target":"s:SQ","targetFallback":"Swift.Equatable","swiftConstraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},{"kind":"memberOf","source":"s:SQsE2neoiySbx_xtFZ::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:SQsE2neoiySbx_xtFZ","displayName":"Equatable.!=(_:_:)"}},{"kind":"memberOf","source":"s:ST12_RegexParserE4noneyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST12_RegexParserE4noneyS2b7ElementQzXEF","displayName":"Sequence.none(_:)"}},{"kind":"memberOf","source":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF","displayName":"Sequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV7isEmptySbvp","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE10allSatisfyyS2b7ElementQzKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE10allSatisfyyS2b7ElementQzKXEKF","displayName":"Sequence.allSatisfy(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV11removeFirst5whereySbxKXE_tKF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsST7ElementRpzrlE6joined9separators14JoinedSequenceVyxGqd___tSTRd__AA_AAQZAARtd__lF","displayName":"Sequence.joined(separator:)"}},{"kind":"memberOf","source":"s:STsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSays10ArraySliceVyABGGAB_SiSbtF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSays10ArraySliceVyABGGAB_SiSbtF","displayName":"Sequence.split(separator:maxSplits:omittingEmptySubsequences:)"}},{"kind":"memberOf","source":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6prefix5whileSay7ElementQzGSbADKXE_tKF","displayName":"Sequence.prefix(while:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV2eeoiySbACyxG_AEtFZ","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:SQ2eeoiySbx_xtFZ","displayName":"Equatable.==(_:_:)"}},{"kind":"memberOf","source":"s:STsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","displayName":"Sequence.withContiguousStorageIfAvailable(_:)"}},{"kind":"memberOf","source":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF","displayName":"Sequence.starts(with:by:)"}},{"kind":"memberOf","source":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSL7ElementRpzrlE25lexicographicallyPrecedesySbqd__STRd__AAQyd__ABRSlF","displayName":"Sequence.lexicographicallyPrecedes(_:)"}},{"kind":"memberOf","source":"s:ST12_RegexParserE3allyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST12_RegexParserE3allyS2b7ElementQzXEF","displayName":"Sequence.all(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV4peekxSgyF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE7forEachyyy7ElementQzKXEKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE7forEachyyy7ElementQzKXEKF","displayName":"Sequence.forEach(_:)"}},{"kind":"memberOf","source":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF","displayName":"Sequence.reduce(_:_:)"}},{"kind":"memberOf","source":"s:STsE6prefixys14PrefixSequenceVyxGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6prefixys14PrefixSequenceVyxGSiF","displayName":"Sequence.prefix(_:)"}},{"kind":"conformsTo","source":"s:18_NIODataStructures13PriorityQueueV8IteratorV","target":"s:St","targetFallback":"Swift.IteratorProtocol","sourceOrigin":{"identifier":"s:ST8IteratorQa","displayName":"Sequence.Iterator"}},{"kind":"memberOf","source":"s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF","displayName":"Sequence.elementsEqual(_:by:)"}},{"kind":"memberOf","source":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE4drop5whiles17DropWhileSequenceVyxGSb7ElementQzKXE_tKF","displayName":"Sequence.drop(while:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV4pushyyxF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSays10ArraySliceVy7ElementQzGGSi_S2bAHKXEtKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSays10ArraySliceVy7ElementQzGGSi_S2bAHKXEtKF","displayName":"Sequence.split(maxSplits:omittingEmptySubsequences:whereSeparator:)"}},{"kind":"memberOf","source":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE3max2by7ElementQzSgSbAD_ADtKXE_tKF","displayName":"Sequence.max(by:)"}},{"kind":"memberOf","source":"s:STsSL7ElementRpzrlE6sortedSayABGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSL7ElementRpzrlE6sortedSayABGyF","displayName":"Sequence.sorted()"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV8IteratorV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST8IteratorQa","displayName":"Sequence.Iterator"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV8IteratorV4nextxSgyF","target":"s:18_NIODataStructures13PriorityQueueV8IteratorV","sourceOrigin":{"identifier":"s:St4next7ElementQzSgyF","displayName":"IteratorProtocol.next()"}},{"kind":"memberOf","source":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE9dropFirstys04DropB8SequenceVyxGSiF","displayName":"Sequence.dropFirst(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV5countSivp","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSy7ElementRpzrlE6joined9separatorS2S_tF","displayName":"Sequence.joined(separator:)"}},{"kind":"memberOf","source":"s:STsE8reversedSay7ElementQzGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE8reversedSay7ElementQzGyF","displayName":"Sequence.reversed()"}},{"kind":"memberOf","source":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF","displayName":"Sequence.compactMap(_:)"}},{"kind":"memberOf","source":"s:STsE19underestimatedCountSivp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE19underestimatedCountSivp","displayName":"Sequence.underestimatedCount"}},{"kind":"memberOf","source":"s:STsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF","displayName":"Sequence.elementsEqual(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV5clearyyF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE8contains5whereS2b7ElementQzKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE8contains5whereS2b7ElementQzKXE_tKF","displayName":"Sequence.contains(where:)"}},{"kind":"conformsTo","source":"s:18_NIODataStructures13PriorityQueueV","target":"s:s23CustomStringConvertibleP","targetFallback":"Swift.CustomStringConvertible","swiftConstraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueVACyxGycfc","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV12makeIteratorAC0F0Vyx_GyF","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST12makeIterator0B0QzyF","displayName":"Sequence.makeIterator()"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV11descriptionSSvp","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:s23CustomStringConvertibleP11descriptionSSvp","displayName":"CustomStringConvertible.description"}},{"kind":"memberOf","source":"s:STsSL7ElementRpzrlE3maxABSgyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSL7ElementRpzrlE3maxABSgyF","displayName":"Sequence.max()"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV3popxSgyF","target":"s:18_NIODataStructures13PriorityQueueV"},{"kind":"memberOf","source":"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE3min2by7ElementQzSgSbAD_ADtKXE_tKF","displayName":"Sequence.min(by:)"}},{"kind":"memberOf","source":"s:STsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF","displayName":"Sequence.flatMap(_:)"}},{"kind":"memberOf","source":"s:18_NIODataStructures13PriorityQueueV8IteratorV5queueAEyx_GACyxG_tcfc","target":"s:18_NIODataStructures13PriorityQueueV8IteratorV"},{"kind":"memberOf","source":"s:STsE8shuffledSay7ElementQzGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE8shuffledSay7ElementQzGyF","displayName":"Sequence.shuffled()"}},{"kind":"memberOf","source":"s:STsE4lazys12LazySequenceVyxGvp::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE4lazys12LazySequenceVyxGvp","displayName":"Sequence.lazy"}},{"kind":"memberOf","source":"s:STsSQ7ElementRpzrlE8containsySbABF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSQ7ElementRpzrlE8containsySbABF","displayName":"Sequence.contains(_:)"}},{"kind":"memberOf","source":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsST7ElementRpzrlE6joineds15FlattenSequenceVyxGyF","displayName":"Sequence.joined()"}},{"kind":"memberOf","source":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF","displayName":"Sequence.reduce(into:_:)"}},{"kind":"memberOf","source":"s:ST12_RegexParserE3anyyS2b7ElementQzXEF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:ST12_RegexParserE3anyyS2b7ElementQzXEF","displayName":"Sequence.any(_:)"}},{"kind":"conformsTo","source":"s:18_NIODataStructures13PriorityQueueV","target":"s:ST","targetFallback":"Swift.Sequence","swiftConstraints":[{"kind":"conformance","lhs":"Element","rhs":"Comparable","rhsPrecise":"s:SL"}]},{"kind":"memberOf","source":"s:STsE5first5where7ElementQzSgSbADKXE_tKF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsE5first5where7ElementQzSgSbADKXE_tKF","displayName":"Sequence.first(where:)"}},{"kind":"memberOf","source":"s:STsSL7ElementRpzrlE3minABSgyF::SYNTHESIZED::s:18_NIODataStructures13PriorityQueueV","target":"s:18_NIODataStructures13PriorityQueueV","sourceOrigin":{"identifier":"s:STsSL7ElementRpzrlE3minABSgyF","displayName":"Sequence.min()"}}]}