{"culture":"Metrics","dependencies":[{"package":"swift-metrics","modules":["CoreMetrics"]}],"extensions":[],"partitions":[{"namespace":"CoreMetrics","communities":[{"community":"type.method","startIndex":0,"endIndex":1},{"community":"method","startIndex":1,"endIndex":4}]},{"namespace":"Metrics","communities":[]}],"identifiers":["s11CoreMetrics5TimerC0B0E7measure5label10dimensions4bodyxSS_SaySS_SStGxyKctKlFZ","s11CoreMetrics5TimerC0B0E14recordInterval5since3endy8Dispatch0H4TimeV_AJtF","s11CoreMetrics5TimerC0B0E6recordyy8Dispatch0E12TimeIntervalOF","s11CoreMetrics5TimerC0B0E6recordyySdF","s10Foundation12TimeIntervala","s11CoreMetrics5TimerC","s8Dispatch0A12TimeIntervalO","s8Dispatch0A4TimeV","sSS"],"vertices":[{"p":["Timer","measure(label:dimensions:body:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["measure",7],["<",17],["T",0],[">(",17],["label",1],[": ",17],["String",18,8],[", ",17],["dimensions",1],[": [(",17],["String",18,8],[", ",17],["String",18,8],[")] = [], ",17],["body",1],[": ",17],["@escaping",12],[" () ",17],["throws",12],[" -> ",17],["T",18],[") ",17],["rethrows",12],[" -> ",17],["T",18]],"s":[["static",12],[" ",17],["func",12],[" ",17],["measure",7],["<",17],["T",0],[">(",17],["label",1],[": ",17],["String",18],[", ",17],["dimensions",1],[": [(",17],["String",18],[", ",17],["String",18],[")], ",17],["body",1],[": () ",17],["throws",12],[" -> ",17],["T",18],[") ",17],["rethrows",12],[" -> ",17],["T",18]],"g":[["T",0,0]],"d":"Convenience for measuring duration of a closure.\n\n- parameters:\n    - label: The label for the Timer.\n    - dimensions: The dimensions for the Timer.\n    - body: Closure to run & record."},{"p":["Timer","recordInterval(since:end:)"],"f":[["func",12],[" ",17],["recordInterval",7],["(",17],["since",1],[": ",17],["DispatchTime",18,7],[", ",17],["end",1],[": ",17],["DispatchTime",18,7],[" = .now())",17]],"s":[["func",12],[" ",17],["recordInterval",7],["(",17],["since",1],[": ",17],["DispatchTime",18],[", ",17],["end",1],[": ",17],["DispatchTime",18],[")",17]],"d":"Record the time interval (with nanosecond precision) between the passed `since` dispatch time and `end` dispatch time.\n\n- parameters:\n  - since: Start of the interval as `DispatchTime`.\n  - end: End of the interval, defaulting to `.now()`."},{"p":["Timer","record(_:)"],"f":[["func",12],[" ",17],["record",7],["(",17],["_",1],[" ",17],["duration",2],[": ",17],["DispatchTimeInterval",18,6],[")",17]],"s":[["func",12],[" ",17],["record",7],["(",17],["DispatchTimeInterval",18],[")",17]],"d":"Convenience for recording a duration based on DispatchTimeInterval.\n\n- parameters:\n    - duration: The duration to record."},{"p":["Timer","record(_:)"],"f":[["func",12],[" ",17],["record",7],["(",17],["_",1],[" ",17],["duration",2],[": ",17],["TimeInterval",18,4],[")",17]],"s":[["func",12],[" ",17],["record",7],["(",17],["TimeInterval",18],[")",17]],"d":"Convenience for recording a duration based on TimeInterval.\n\n- parameters:\n    - duration: The duration to record."}],"edges":{"member":[0,5,1,5,2,5,3,5]},"hints":[],"sourcemap":[{"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-metrics@2.3.1/.build/checkouts/swift-metrics/Sources/Metrics/Metrics.swift","symbols":[26,16,0,41,9,1,52,9,3,61,9,2]}]}