{"metadata":{"formatVersion":{"major":0,"minor":5,"patch":3},"generator":"Swift version 5.8-dev (LLVM 0c2f2a534df576e, Swift 025a6fca804b570)"},"module":{"name":"NIOConcurrencyHelpers","platform":{"architecture":"x86_64","environment":"gnu","operatingSystem":{"minimumVersion":{"major":0,"minor":0,"patch":0},"name":"linux"},"vendor":"unknown"}},"relationships":[{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP19nio_atomic_exchangeyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3subyxxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_addyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP11atomic_loadyxs13OpaquePointerVcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC5valuexvp","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP39nio_atomic_create_with_existing_storageyySpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC4loadxyF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC3addyxxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP13atomic_createys13OpaquePointerVxcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValue14timeoutSecondsSbx_SdtF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC5storeyyxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC6unlockyyF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC3subyxxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_addyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC6unlockyyF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP15atomic_exchangeyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC04withC0yxxyKXEKlF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lockyyF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC5storeyyxF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC3addyxxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV4loadxyF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP27atomic_compare_and_exchangeySbs13OpaquePointerV_xxtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC4lockyyF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockC04withC4VoidyyyyKXEKF","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC5storeyyxF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC10makeAtomic5valueACyxGx_tFZ","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5storeyyxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC3subyxxF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP31nio_atomic_compare_and_exchangeySbSpy13AtomicWrapperQzG_xxtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP15nio_atomic_loadyxSpy13AtomicWrapperQzGcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_subyxSpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP12atomic_storeyys13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC4loadxyF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9AtomicBoxC5valueACyxGx_tcfc","target":"s:21NIOConcurrencyHelpers9AtomicBoxC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_subyxs13OpaquePointerV_xtcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers4LockCACycfc","target":"s:21NIOConcurrencyHelpers4LockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP16nio_atomic_storeyySpy13AtomicWrapperQzG_xtcvpZ","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValueyx_tF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP14atomic_destroyyys13OpaquePointerVcvpZ","target":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3addyxxF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers6AtomicC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC8exchange4withxx_tF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"},{"kind":"requirementOf","source":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP13AtomicWrapperQa","target":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV7destroyyyF","target":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers13ConditionLockC6unlock9withValueyx_tF","target":"s:21NIOConcurrencyHelpers13ConditionLockC"},{"kind":"memberOf","source":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","target":"s:21NIOConcurrencyHelpers9NIOAtomicC"}],"symbols":[{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicPrimitive"}],"docComment":{"lines":[{"range":{"end":{"character":72,"line":276},"start":{"character":4,"line":276}},"text":"The protocol that all types that can be made atomic must conform to."},{"range":{"end":{"character":3,"line":277},"start":{"character":3,"line":277}},"text":""},{"range":{"end":{"character":87,"line":278},"start":{"character":4,"line":278}},"text":"**Do not add conformance to this protocol for arbitrary types**. Only a small range"},{"range":{"end":{"character":85,"line":279},"start":{"character":4,"line":279}},"text":"of types have appropriate atomic operations supported by the CPU, and those types"},{"range":{"end":{"character":42,"line":280},"start":{"character":4,"line":280}},"text":"already have conformances implemented."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"},"kind":{"displayName":"Protocol","identifier":"swift.protocol"},"location":{"position":{"character":16,"line":281},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"AtomicPrimitive"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicPrimitive"}],"title":"AtomicPrimitive"},"pathComponents":["AtomicPrimitive"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLockVoid"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockC04withC4VoidyyyyKXEKF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":111},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLockVoid"},{"kind":"text","spelling":"(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"}],"title":"withLockVoid(_:)"},"pathComponents":["Lock","withLockVoid(_:)"],"swiftExtension":{"extendedModule":"NIOConcurrencyHelpers"}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":66,"line":259},"start":{"character":8,"line":259}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"end":{"character":7,"line":260},"start":{"character":7,"line":260}},"text":""},{"range":{"end":{"character":85,"line":261},"start":{"character":8,"line":261}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":262},"start":{"character":8,"line":262}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":263},"start":{"character":8,"line":263}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":264},"start":{"character":7,"line":264}},"text":""},{"range":{"end":{"character":62,"line":265},"start":{"character":8,"line":265}},"text":"- Parameter value: The new value to set the object to."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"value"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC5storeyyxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":267},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"store(_:)"},"pathComponents":["Atomic","store(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":66,"line":571},"start":{"character":8,"line":571}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"end":{"character":7,"line":572},"start":{"character":7,"line":572}},"text":""},{"range":{"end":{"character":85,"line":573},"start":{"character":8,"line":573}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":574},"start":{"character":8,"line":574}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":575},"start":{"character":8,"line":575}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":576},"start":{"character":7,"line":576}},"text":""},{"range":{"end":{"character":117,"line":577},"start":{"character":8,"line":577}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"end":{"character":33,"line":578},"start":{"character":8,"line":578}},"text":"           100% CPU load."},{"range":{"end":{"character":7,"line":579},"start":{"character":7,"line":579}},"text":""},{"range":{"end":{"character":62,"line":580},"start":{"character":8,"line":580}},"text":"- Parameter value: The new value to set the object to."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"value"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC5storeyyxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":581},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"store(_:)"},"pathComponents":["AtomicBox","store(_:)"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP27atomic_compare_and_exchangeySbs13OpaquePointerV_xxtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":284},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"atomic_compare_and_exchange"},"pathComponents":["AtomicPrimitive","atomic_compare_and_exchange"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ConditionLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SQ","spelling":"Equatable"}],"docComment":{"lines":[{"range":{"end":{"character":44,"line":116},"start":{"character":4,"line":116}},"text":"A `Lock` with a built-in state variable."},{"range":{"end":{"character":3,"line":117},"start":{"character":3,"line":117}},"text":""},{"range":{"end":{"character":89,"line":118},"start":{"character":4,"line":118}},"text":"This class provides a convenience addition to `Lock`: it provides the ability to wait"},{"range":{"end":{"character":76,"line":119},"start":{"character":4,"line":119}},"text":"until the state variable is set to a specific value to acquire the lock."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC"},"kind":{"displayName":"Class","identifier":"swift.class"},"location":{"position":{"character":19,"line":120},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"ConditionLock"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"ConditionLock"}],"title":"ConditionLock"},"pathComponents":["ConditionLock"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomicPrimitive"}],"docComment":{"lines":[{"range":{"end":{"character":72,"line":16},"start":{"character":4,"line":16}},"text":"The protocol that all types that can be made atomic must conform to."},{"range":{"end":{"character":3,"line":17},"start":{"character":3,"line":17}},"text":""},{"range":{"end":{"character":87,"line":18},"start":{"character":4,"line":18}},"text":"**Do not add conformance to this protocol for arbitrary types**. Only a small range"},{"range":{"end":{"character":85,"line":19},"start":{"character":4,"line":19}},"text":"of types have appropriate atomic operations supported by the CPU, and those types"},{"range":{"end":{"character":42,"line":20},"start":{"character":4,"line":20}},"text":"already have conformances implemented."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"},"kind":{"displayName":"Protocol","identifier":"swift.protocol"},"location":{"position":{"character":16,"line":21},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"NIOAtomicPrimitive"}],"subHeading":[{"kind":"keyword","spelling":"protocol"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomicPrimitive"}],"title":"NIOAtomicPrimitive"},"pathComponents":["NIOAtomicPrimitive"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":45,"line":57},"start":{"character":8,"line":57}},"text":"Create an atomic object with `value`."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5valueACyxGx_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"location":{"position":{"character":11,"line":59},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(value:)"},"pathComponents":["UnsafeEmbeddedAtomic","init(value:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":74,"line":111},"start":{"character":8,"line":111}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"end":{"character":7,"line":112},"start":{"character":7,"line":112}},"text":""},{"range":{"end":{"character":85,"line":113},"start":{"character":8,"line":113}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":114},"start":{"character":8,"line":114}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":115},"start":{"character":8,"line":115}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":116},"start":{"character":7,"line":116}},"text":""},{"range":{"end":{"character":63,"line":117},"start":{"character":8,"line":117}},"text":"- Parameter value: The new value to set this object to."},{"range":{"end":{"character":60,"line":118},"start":{"character":8,"line":118}},"text":"- Returns: The value previously held by this object."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"value","name":"with"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV8exchange4withxx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":120},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"exchange(with:)"},"pathComponents":["UnsafeEmbeddedAtomic","exchange(with:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"wantedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":75,"line":178},"start":{"character":8,"line":178}},"text":"Acquire the lock when the state variable is equal to `wantedValue`."},{"range":{"end":{"character":7,"line":179},"start":{"character":7,"line":179}},"text":""},{"range":{"end":{"character":73,"line":180},"start":{"character":8,"line":180}},"text":"- Parameter wantedValue: The value to wait for the state variable"},{"range":{"end":{"character":46,"line":181},"start":{"character":8,"line":181}},"text":"    to have before acquiring the lock."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"wantedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"wantedValue","name":"whenValue"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValueyx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":182},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"lock(whenValue:)"},"pathComponents":["ConditionLock","lock(whenValue:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":45,"line":231},"start":{"character":8,"line":231}},"text":"Atomically adds `rhs` to this object."},{"range":{"end":{"character":7,"line":232},"start":{"character":7,"line":232}},"text":""},{"range":{"end":{"character":85,"line":233},"start":{"character":8,"line":233}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":234},"start":{"character":8,"line":234}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":235},"start":{"character":8,"line":235}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":236},"start":{"character":7,"line":236}},"text":""},{"range":{"end":{"character":57,"line":237},"start":{"character":8,"line":237}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"end":{"character":83,"line":238},"start":{"character":8,"line":238}},"text":"- Returns: The previous value of this object, before the addition occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC3addyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":241},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"add(_:)"},"pathComponents":["NIOAtomic","add(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":62,"line":536},"start":{"character":8,"line":536}},"text":"Atomically loads and returns the value of this object."},{"range":{"end":{"character":7,"line":537},"start":{"character":7,"line":537}},"text":""},{"range":{"end":{"character":85,"line":538},"start":{"character":8,"line":538}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":539},"start":{"character":8,"line":539}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":540},"start":{"character":8,"line":540}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":541},"start":{"character":7,"line":541}},"text":""},{"range":{"end":{"character":117,"line":542},"start":{"character":8,"line":542}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"end":{"character":33,"line":543},"start":{"character":8,"line":543}},"text":"           100% CPU load."},{"range":{"end":{"character":7,"line":544},"start":{"character":7,"line":544}},"text":""},{"range":{"end":{"character":43,"line":545},"start":{"character":8,"line":545}},"text":"- Returns: The value of this object"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":546},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"load()"},"pathComponents":["AtomicBox","load()"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":66,"line":292},"start":{"character":8,"line":292}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"end":{"character":7,"line":293},"start":{"character":7,"line":293}},"text":""},{"range":{"end":{"character":85,"line":294},"start":{"character":8,"line":294}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":295},"start":{"character":8,"line":295}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":296},"start":{"character":8,"line":296}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":297},"start":{"character":7,"line":297}},"text":""},{"range":{"end":{"character":62,"line":298},"start":{"character":8,"line":298}},"text":"- Parameter value: The new value to set the object to."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"value"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC5storeyyxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":300},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"store(_:)"},"pathComponents":["NIOAtomic","store(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP31nio_atomic_compare_and_exchangeySbSpy13AtomicWrapperQzG_xxtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":24},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_compare_and_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"nio_atomic_compare_and_exchange"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_compare_and_exchange"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP15nio_atomic_loadyxSpy13AtomicWrapperQzGcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":28},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">) -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"nio_atomic_load"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_load"]},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":45,"line":206},"start":{"character":8,"line":206}},"text":"Atomically adds `rhs` to this object."},{"range":{"end":{"character":7,"line":207},"start":{"character":7,"line":207}},"text":""},{"range":{"end":{"character":85,"line":208},"start":{"character":8,"line":208}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":209},"start":{"character":8,"line":209}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":210},"start":{"character":8,"line":210}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":211},"start":{"character":7,"line":211}},"text":""},{"range":{"end":{"character":57,"line":212},"start":{"character":8,"line":212}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"end":{"character":83,"line":213},"start":{"character":8,"line":213}},"text":"- Returns: The previous value of this object, before the addition occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC3addyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":216},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"add(_:)"},"pathComponents":["Atomic","add(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":25,"line":64},"start":{"character":8,"line":64}},"text":"Acquire the lock."},{"range":{"end":{"character":7,"line":65},"start":{"character":7,"line":65}},"text":""},{"range":{"end":{"character":79,"line":66},"start":{"character":8,"line":66}},"text":"Whenever possible, consider using `withLock` instead of this method and"},{"range":{"end":{"character":44,"line":67},"start":{"character":8,"line":67}},"text":"`unlock`, to simplify lock handling."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockC4lockyyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":68},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"title":"lock()"},"pathComponents":["Lock","lock()"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"newValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":67,"line":263},"start":{"character":8,"line":263}},"text":"Release the lock, setting the state variable to `newValue`."},{"range":{"end":{"character":7,"line":264},"start":{"character":7,"line":264}},"text":""},{"range":{"end":{"character":77,"line":265},"start":{"character":8,"line":265}},"text":"- Parameter newValue: The value to give to the state variable when we"},{"range":{"end":{"character":29,"line":266},"start":{"character":8,"line":266}},"text":"    release the lock."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"newValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"newValue","name":"withValue"}],"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC6unlock9withValueyx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":267},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"withValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"unlock(withValue:)"},"pathComponents":["ConditionLock","unlock(withValue:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_subyxSpy13AtomicWrapperQzG_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":26},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"nio_atomic_sub"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_sub"]},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"range":{"end":{"character":80,"line":186},"start":{"character":8,"line":186}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"end":{"character":42,"line":187},"start":{"character":8,"line":187}},"text":"replaces the value with `desired`."},{"range":{"end":{"character":7,"line":188},"start":{"character":7,"line":188}},"text":""},{"range":{"end":{"character":84,"line":189},"start":{"character":8,"line":189}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"end":{"character":85,"line":190},"start":{"character":8,"line":190}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"end":{"character":83,"line":191},"start":{"character":8,"line":191}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"end":{"character":74,"line":192},"start":{"character":8,"line":192}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"end":{"character":22,"line":193},"start":{"character":8,"line":193}},"text":"`stdatomic.h`."},{"range":{"end":{"character":7,"line":194},"start":{"character":7,"line":194}},"text":""},{"range":{"end":{"character":84,"line":195},"start":{"character":8,"line":195}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"end":{"character":40,"line":196},"start":{"character":8,"line":196}},"text":"    compare-and-swap to succeed."},{"range":{"end":{"character":84,"line":197},"start":{"character":8,"line":197}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"end":{"character":21,"line":198},"start":{"character":8,"line":198}},"text":"    succeeds."},{"range":{"end":{"character":84,"line":199},"start":{"character":8,"line":199}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"end":{"character":64,"line":200},"start":{"character":8,"line":200}},"text":"    match the current value and so no exchange occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"expected"},{"declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"desired"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC18compareAndExchange8expected7desiredSbx_xtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":202},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"compareAndExchange(expected:desired:)"},"pathComponents":["Atomic","compareAndExchange(expected:desired:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP12atomic_storeyys13OpaquePointerV_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":289},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"title":"atomic_store"},"pathComponents":["AtomicPrimitive","atomic_store"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP16nio_atomic_storeyySpy13AtomicWrapperQzG_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":29},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_store"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"title":"nio_atomic_store"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_store"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_subyxs13OpaquePointerV_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":286},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_sub"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"atomic_sub"},"pathComponents":["AtomicPrimitive","atomic_sub"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":62,"line":278},"start":{"character":8,"line":278}},"text":"Atomically loads and returns the value of this object."},{"range":{"end":{"character":7,"line":279},"start":{"character":7,"line":279}},"text":""},{"range":{"end":{"character":85,"line":280},"start":{"character":8,"line":280}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":281},"start":{"character":8,"line":281}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":282},"start":{"character":8,"line":282}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":283},"start":{"character":7,"line":283}},"text":""},{"range":{"end":{"character":43,"line":284},"start":{"character":8,"line":284}},"text":"- Returns: The value of this object"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC4loadxyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":286},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"load()"},"pathComponents":["NIOAtomic","load()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":52,"line":97},"start":{"character":8,"line":97}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"end":{"character":7,"line":98},"start":{"character":7,"line":98}},"text":""},{"range":{"end":{"character":85,"line":99},"start":{"character":8,"line":99}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":100},"start":{"character":8,"line":100}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":101},"start":{"character":8,"line":101}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":102},"start":{"character":7,"line":102}},"text":""},{"range":{"end":{"character":64,"line":103},"start":{"character":8,"line":103}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"end":{"character":86,"line":104},"start":{"character":8,"line":104}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3subyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":107},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"sub(_:)"},"pathComponents":["UnsafeEmbeddedAtomic","sub(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":62,"line":247},"start":{"character":8,"line":247}},"text":"Atomically loads and returns the value of this object."},{"range":{"end":{"character":7,"line":248},"start":{"character":7,"line":248}},"text":""},{"range":{"end":{"character":85,"line":249},"start":{"character":8,"line":249}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":250},"start":{"character":8,"line":250}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":251},"start":{"character":8,"line":251}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":252},"start":{"character":7,"line":252}},"text":""},{"range":{"end":{"character":43,"line":253},"start":{"character":8,"line":253}},"text":"- Returns: The value of this object"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC4loadxyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":255},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"load()"},"pathComponents":["Atomic","load()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"range":{"end":{"character":80,"line":456},"start":{"character":8,"line":456}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"end":{"character":42,"line":457},"start":{"character":8,"line":457}},"text":"replaces the value with `desired`."},{"range":{"end":{"character":7,"line":458},"start":{"character":7,"line":458}},"text":""},{"range":{"end":{"character":84,"line":459},"start":{"character":8,"line":459}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"end":{"character":85,"line":460},"start":{"character":8,"line":460}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"end":{"character":83,"line":461},"start":{"character":8,"line":461}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"end":{"character":74,"line":462},"start":{"character":8,"line":462}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"end":{"character":22,"line":463},"start":{"character":8,"line":463}},"text":"`stdatomic.h`."},{"range":{"end":{"character":7,"line":464},"start":{"character":7,"line":464}},"text":""},{"range":{"end":{"character":7,"line":465},"start":{"character":7,"line":465}},"text":""},{"range":{"end":{"character":117,"line":466},"start":{"character":8,"line":466}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"end":{"character":33,"line":467},"start":{"character":8,"line":467}},"text":"           100% CPU load."},{"range":{"end":{"character":7,"line":468},"start":{"character":7,"line":468}},"text":""},{"range":{"end":{"character":84,"line":469},"start":{"character":8,"line":469}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"end":{"character":40,"line":470},"start":{"character":8,"line":470}},"text":"    compare-and-swap to succeed."},{"range":{"end":{"character":84,"line":471},"start":{"character":8,"line":471}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"end":{"character":21,"line":472},"start":{"character":8,"line":472}},"text":"    succeeds."},{"range":{"end":{"character":84,"line":473},"start":{"character":8,"line":473}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"end":{"character":64,"line":474},"start":{"character":8,"line":474}},"text":"    match the current value and so no exchange occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"expected"},{"declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"desired"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC18compareAndExchange8expected7desiredSbx_xtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":475},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"compareAndExchange(expected:desired:)"},"pathComponents":["AtomicBox","compareAndExchange(expected:desired:)"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":70,"line":131},"start":{"character":8,"line":131}},"text":"Create the lock, and initialize the state variable to `value`."},{"range":{"end":{"character":7,"line":132},"start":{"character":7,"line":132}},"text":""},{"range":{"end":{"character":72,"line":133},"start":{"character":8,"line":133}},"text":"- Parameter value: The initial value to give the state variable."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC5valueACyxGx_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"location":{"position":{"character":11,"line":134},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(value:)"},"pathComponents":["ConditionLock","init(value:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Lock"}],"docComment":{"lines":[{"range":{"end":{"character":68,"line":23},"start":{"character":4,"line":23}},"text":"A threading lock based on `libpthread` instead of `libdispatch`."},{"range":{"end":{"character":3,"line":24},"start":{"character":3,"line":24}},"text":""},{"range":{"end":{"character":79,"line":25},"start":{"character":4,"line":25}},"text":"This object provides a lock on top of a single `pthread_mutex_t`. This kind"},{"range":{"end":{"character":80,"line":26},"start":{"character":4,"line":26}},"text":"of lock is safe to use with `libpthread`-based threading models, such as the"},{"range":{"end":{"character":79,"line":27},"start":{"character":4,"line":27}},"text":"one used by NIO. On Windows, the lock is based on the substantially similar"},{"range":{"end":{"character":19,"line":28},"start":{"character":4,"line":28}},"text":"`SRWLOCK` type."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockC"},"kind":{"displayName":"Class","identifier":"swift.class"},"location":{"position":{"character":19,"line":29},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"Lock"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Lock"}],"title":"Lock"},"pathComponents":["Lock"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicWrapper"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP13AtomicWrapperQa"},"kind":{"displayName":"Associated Type","identifier":"swift.associatedtype"},"location":{"position":{"character":19,"line":22},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"associatedtype"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicWrapper"}],"title":"AtomicWrapper"},"pathComponents":["NIOAtomicPrimitive","AtomicWrapper"]},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Atomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","spelling":"AtomicPrimitive"}],"docComment":{"lines":[{"range":{"end":{"character":51,"line":157},"start":{"character":4,"line":157}},"text":"An encapsulation of an atomic primitive object."},{"range":{"end":{"character":3,"line":158},"start":{"character":3,"line":158}},"text":""},{"range":{"end":{"character":61,"line":159},"start":{"character":4,"line":159}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"end":{"character":3,"line":160},"start":{"character":3,"line":160}},"text":""},{"range":{"end":{"character":22,"line":161},"start":{"character":4,"line":161}},"text":"- Compare and swap"},{"range":{"end":{"character":9,"line":162},"start":{"character":4,"line":162}},"text":"- Add"},{"range":{"end":{"character":14,"line":163},"start":{"character":4,"line":163}},"text":"- Subtract"},{"range":{"end":{"character":14,"line":164},"start":{"character":4,"line":164}},"text":"- Exchange"},{"range":{"end":{"character":24,"line":165},"start":{"character":4,"line":165}},"text":"- Load current value"},{"range":{"end":{"character":25,"line":166},"start":{"character":4,"line":166}},"text":"- Store current value"},{"range":{"end":{"character":3,"line":167},"start":{"character":3,"line":167}},"text":""},{"range":{"end":{"character":70,"line":168},"start":{"character":4,"line":168}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"end":{"character":68,"line":169},"start":{"character":4,"line":169}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"end":{"character":77,"line":170},"start":{"character":4,"line":170}},"text":"SwiftNIO this usually involves communicating across multiple event loops."},{"range":{"end":{"character":3,"line":171},"start":{"character":3,"line":171}},"text":""},{"range":{"end":{"character":74,"line":172},"start":{"character":4,"line":172}},"text":"By necessity, all atomic values are references: after all, it makes no"},{"range":{"end":{"character":77,"line":173},"start":{"character":4,"line":173}},"text":"sense to talk about managing an atomic value when each time it's modified"},{"range":{"end":{"character":50,"line":174},"start":{"character":4,"line":174}},"text":"the thread that modified it gets a local copy!"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC"},"kind":{"displayName":"Class","identifier":"swift.class"},"location":{"position":{"character":19,"line":176},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"Atomic"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"Atomic"}],"title":"Atomic"},"pathComponents":["Atomic"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_destroy"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP14atomic_destroyyys13OpaquePointerVcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":283},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_destroy"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"title":"atomic_destroy"},"pathComponents":["AtomicPrimitive","atomic_destroy"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":26,"line":38},"start":{"character":8,"line":38}},"text":"Create a new lock."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockCACycfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"location":{"position":{"character":11,"line":39},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"()"}],"title":"init()"},"pathComponents":["Lock","init()"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP19nio_atomic_exchangeyxSpy13AtomicWrapperQzG_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":27},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"nio_atomic_exchange"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_exchange"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"wantedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","spelling":"Double"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"range":{"end":{"character":75,"line":198},"start":{"character":8,"line":198}},"text":"Acquire the lock when the state variable is equal to `wantedValue`,"},{"range":{"end":{"character":54,"line":199},"start":{"character":8,"line":199}},"text":"waiting no more than `timeoutSeconds` seconds."},{"range":{"end":{"character":7,"line":200},"start":{"character":7,"line":200}},"text":""},{"range":{"end":{"character":73,"line":201},"start":{"character":8,"line":201}},"text":"- Parameter wantedValue: The value to wait for the state variable"},{"range":{"end":{"character":46,"line":202},"start":{"character":8,"line":202}},"text":"    to have before acquiring the lock."},{"range":{"end":{"character":76,"line":203},"start":{"character":8,"line":203}},"text":"- Parameter timeoutSeconds: The number of seconds to wait to acquire"},{"range":{"end":{"character":38,"line":204},"start":{"character":8,"line":204}},"text":"    the lock before giving up."},{"range":{"end":{"character":82,"line":205},"start":{"character":8,"line":205}},"text":"- Returns: `true` if the lock was acquired, `false` if the wait timed out."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"wantedValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"wantedValue","name":"whenValue"},{"declarationFragments":[{"kind":"identifier","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","spelling":"Double"}],"name":"timeoutSeconds"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lock9whenValue14timeoutSecondsSbx_SdtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":206},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"whenValue"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"timeoutSeconds"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","spelling":"Double"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"lock(whenValue:timeoutSeconds:)"},"pathComponents":["ConditionLock","lock(whenValue:timeoutSeconds:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","spelling":"AtomicPrimitive"}],"docComment":{"lines":[{"range":{"end":{"character":31,"line":34},"start":{"character":4,"line":34}},"text":"An atomic primitive object."},{"range":{"end":{"character":3,"line":35},"start":{"character":3,"line":35}},"text":""},{"range":{"end":{"character":107,"line":36},"start":{"character":4,"line":36}},"text":"Before using `UnsafeEmbeddedAtomic`, please consider whether your needs can be met by `Atomic` instead."},{"range":{"end":{"character":100,"line":37},"start":{"character":4,"line":37}},"text":"`UnsafeEmbeddedAtomic` is a value type, but atomics are heap-allocated. Thus, it is only safe to"},{"range":{"end":{"character":121,"line":38},"start":{"character":4,"line":38}},"text":"use `UnsafeEmbeddedAtomic` in situations where the atomic can be guaranteed to be cleaned up (via calling `destroy`)."},{"range":{"end":{"character":90,"line":39},"start":{"character":4,"line":39}},"text":"If you cannot make these guarantees, use `Atomic` instead, which manages this for you."},{"range":{"end":{"character":3,"line":40},"start":{"character":3,"line":40}},"text":""},{"range":{"end":{"character":61,"line":41},"start":{"character":4,"line":41}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"end":{"character":3,"line":42},"start":{"character":3,"line":42}},"text":""},{"range":{"end":{"character":22,"line":43},"start":{"character":4,"line":43}},"text":"- Compare and swap"},{"range":{"end":{"character":9,"line":44},"start":{"character":4,"line":44}},"text":"- Add"},{"range":{"end":{"character":14,"line":45},"start":{"character":4,"line":45}},"text":"- Subtract"},{"range":{"end":{"character":14,"line":46},"start":{"character":4,"line":46}},"text":"- Exchange"},{"range":{"end":{"character":24,"line":47},"start":{"character":4,"line":47}},"text":"- Load current value"},{"range":{"end":{"character":25,"line":48},"start":{"character":4,"line":48}},"text":"- Store current value"},{"range":{"end":{"character":3,"line":49},"start":{"character":3,"line":49}},"text":""},{"range":{"end":{"character":70,"line":50},"start":{"character":4,"line":50}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"end":{"character":68,"line":51},"start":{"character":4,"line":51}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"end":{"character":77,"line":52},"start":{"character":4,"line":52}},"text":"SwiftNIO this usually involves communicating across multiple event loops."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV"},"kind":{"displayName":"Structure","identifier":"swift.struct"},"location":{"position":{"character":14,"line":53},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"}],"subHeading":[{"kind":"keyword","spelling":"struct"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"UnsafeEmbeddedAtomic"}],"title":"UnsafeEmbeddedAtomic"},"pathComponents":["UnsafeEmbeddedAtomic"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":74,"line":263},"start":{"character":8,"line":263}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"end":{"character":7,"line":264},"start":{"character":7,"line":264}},"text":""},{"range":{"end":{"character":85,"line":265},"start":{"character":8,"line":265}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":266},"start":{"character":8,"line":266}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":267},"start":{"character":8,"line":267}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":268},"start":{"character":7,"line":268}},"text":""},{"range":{"end":{"character":63,"line":269},"start":{"character":8,"line":269}},"text":"- Parameter value: The new value to set this object to."},{"range":{"end":{"character":60,"line":270},"start":{"character":8,"line":270}},"text":"- Returns: The value previously held by this object."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"value","name":"with"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC8exchange4withxx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":272},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"exchange(with:)"},"pathComponents":["NIOAtomic","exchange(with:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"range":{"end":{"character":80,"line":209},"start":{"character":8,"line":209}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"end":{"character":42,"line":210},"start":{"character":8,"line":210}},"text":"replaces the value with `desired`."},{"range":{"end":{"character":7,"line":211},"start":{"character":7,"line":211}},"text":""},{"range":{"end":{"character":84,"line":212},"start":{"character":8,"line":212}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"end":{"character":85,"line":213},"start":{"character":8,"line":213}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"end":{"character":83,"line":214},"start":{"character":8,"line":214}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"end":{"character":74,"line":215},"start":{"character":8,"line":215}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"end":{"character":22,"line":216},"start":{"character":8,"line":216}},"text":"`stdatomic.h`."},{"range":{"end":{"character":7,"line":217},"start":{"character":7,"line":217}},"text":""},{"range":{"end":{"character":84,"line":218},"start":{"character":8,"line":218}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"end":{"character":40,"line":219},"start":{"character":8,"line":219}},"text":"    compare-and-swap to succeed."},{"range":{"end":{"character":84,"line":220},"start":{"character":8,"line":220}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"end":{"character":21,"line":221},"start":{"character":8,"line":221}},"text":"    succeeds."},{"range":{"end":{"character":84,"line":222},"start":{"character":8,"line":222}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"end":{"character":64,"line":223},"start":{"character":8,"line":223}},"text":"    match the current value and so no exchange occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"expected"},{"declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"desired"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":225},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"compareAndExchange(expected:desired:)"},"pathComponents":["NIOAtomic","compareAndExchange(expected:desired:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":72,"line":160},"start":{"character":8,"line":160}},"text":"Release the lock, regardless of the value of the state variable."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC6unlockyyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":161},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"title":"unlock()"},"pathComponents":["ConditionLock","unlock()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":45,"line":83},"start":{"character":8,"line":83}},"text":"Atomically adds `rhs` to this object."},{"range":{"end":{"character":7,"line":84},"start":{"character":7,"line":84}},"text":""},{"range":{"end":{"character":85,"line":85},"start":{"character":8,"line":85}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":86},"start":{"character":8,"line":86}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":87},"start":{"character":8,"line":87}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":88},"start":{"character":7,"line":88}},"text":""},{"range":{"end":{"character":57,"line":89},"start":{"character":8,"line":89}},"text":"- Parameter rhs: The value to add to this object."},{"range":{"end":{"character":83,"line":90},"start":{"character":8,"line":90}},"text":"- Returns: The previous value of this object, before the addition occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV3addyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":93},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"add"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"add(_:)"},"pathComponents":["UnsafeEmbeddedAtomic","add(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":74,"line":234},"start":{"character":8,"line":234}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"end":{"character":7,"line":235},"start":{"character":7,"line":235}},"text":""},{"range":{"end":{"character":85,"line":236},"start":{"character":8,"line":236}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":237},"start":{"character":8,"line":237}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":238},"start":{"character":8,"line":238}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":239},"start":{"character":7,"line":239}},"text":""},{"range":{"end":{"character":63,"line":240},"start":{"character":8,"line":240}},"text":"- Parameter value: The new value to set this object to."},{"range":{"end":{"character":60,"line":241},"start":{"character":8,"line":241}},"text":"- Returns: The value previously held by this object."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"value","name":"with"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC8exchange4withxx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":243},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"exchange(with:)"},"pathComponents":["Atomic","exchange(with:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicBox"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : AnyObject"}],"docComment":{"lines":[{"range":{"end":{"character":102,"line":437},"start":{"character":4,"line":437}},"text":"`AtomicBox` is a heap-allocated box which allows lock-free access to an instance of a Swift class."},{"range":{"end":{"character":3,"line":438},"start":{"character":3,"line":438}},"text":""},{"range":{"end":{"character":108,"line":439},"start":{"character":4,"line":439}},"text":"- warning: The use of `AtomicBox` should be avoided because it requires an implementation of a spin-lock"},{"range":{"end":{"character":64,"line":440},"start":{"character":4,"line":440}},"text":"           (more precisely a CAS loop) to operate correctly."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC"},"kind":{"displayName":"Class","identifier":"swift.class"},"location":{"position":{"character":19,"line":442},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"AtomicBox"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"AtomicBox"}],"title":"AtomicBox"},"pathComponents":["AtomicBox"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP11atomic_loadyxs13OpaquePointerVcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":288},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_load"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"atomic_load"},"pathComponents":["AtomicPrimitive","atomic_load"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_create_with_existing_storage"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP39nio_atomic_create_with_existing_storageyySpy13AtomicWrapperQzG_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":23},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_create_with_existing_storage"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}],"title":"nio_atomic_create_with_existing_storage"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_create_with_existing_storage"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"destroy"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":33,"line":148},"start":{"character":8,"line":148}},"text":"Destroy the atomic value."},{"range":{"end":{"character":7,"line":149},"start":{"character":7,"line":149}},"text":""},{"range":{"end":{"character":125,"line":150},"start":{"character":8,"line":150}},"text":"This method is the source of the unsafety of this structure. This *must* be called, or you will leak memory with each"},{"range":{"end":{"character":15,"line":151},"start":{"character":8,"line":151}},"text":"atomic."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV7destroyyyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":152},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"destroy"},{"kind":"text","spelling":"()"}],"title":"destroy()"},"pathComponents":["UnsafeEmbeddedAtomic","destroy()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"final"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomic"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":"> "},{"kind":"keyword","spelling":"where"},{"kind":"text","spelling":" "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP","spelling":"NIOAtomicPrimitive"}],"docComment":{"lines":[{"range":{"end":{"character":51,"line":177},"start":{"character":4,"line":177}},"text":"An encapsulation of an atomic primitive object."},{"range":{"end":{"character":3,"line":178},"start":{"character":3,"line":178}},"text":""},{"range":{"end":{"character":61,"line":179},"start":{"character":4,"line":179}},"text":"Atomic objects support a wide range of atomic operations:"},{"range":{"end":{"character":3,"line":180},"start":{"character":3,"line":180}},"text":""},{"range":{"end":{"character":22,"line":181},"start":{"character":4,"line":181}},"text":"- Compare and swap"},{"range":{"end":{"character":9,"line":182},"start":{"character":4,"line":182}},"text":"- Add"},{"range":{"end":{"character":14,"line":183},"start":{"character":4,"line":183}},"text":"- Subtract"},{"range":{"end":{"character":14,"line":184},"start":{"character":4,"line":184}},"text":"- Exchange"},{"range":{"end":{"character":24,"line":185},"start":{"character":4,"line":185}},"text":"- Load current value"},{"range":{"end":{"character":25,"line":186},"start":{"character":4,"line":186}},"text":"- Store current value"},{"range":{"end":{"character":3,"line":187},"start":{"character":3,"line":187}},"text":""},{"range":{"end":{"character":70,"line":188},"start":{"character":4,"line":188}},"text":"Atomic primitives are useful when building constructs that need to"},{"range":{"end":{"character":68,"line":189},"start":{"character":4,"line":189}},"text":"communicate or cooperate across multiple threads. In the case of"},{"range":{"end":{"character":77,"line":190},"start":{"character":4,"line":190}},"text":"SwiftNIO this usually involves communicating across multiple event loops."},{"range":{"end":{"character":3,"line":191},"start":{"character":3,"line":191}},"text":""},{"range":{"end":{"character":74,"line":192},"start":{"character":4,"line":192}},"text":"By necessity, all atomic values are references: after all, it makes no"},{"range":{"end":{"character":77,"line":193},"start":{"character":4,"line":193}},"text":"sense to talk about managing an atomic value when each time it's modified"},{"range":{"end":{"character":50,"line":194},"start":{"character":4,"line":194}},"text":"the thread that modified it gets a local copy!"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC"},"kind":{"displayName":"Class","identifier":"swift.class"},"location":{"position":{"character":19,"line":195},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"navigator":[{"kind":"identifier","spelling":"NIOAtomic"}],"subHeading":[{"kind":"keyword","spelling":"class"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"NIOAtomic"}],"title":"NIOAtomic"},"pathComponents":["NIOAtomic"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP10atomic_addyxs13OpaquePointerV_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":285},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"atomic_add"},"pathComponents":["AtomicPrimitive","atomic_add"]},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC5valueACyxGx_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"location":{"position":{"character":11,"line":445},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(value:)"},"pathComponents":["AtomicBox","init(value:)"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":45,"line":180},"start":{"character":8,"line":180}},"text":"Create an atomic object with `value`."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC5valueACyxGx_tcfc"},"kind":{"displayName":"Initializer","identifier":"swift.init"},"location":{"position":{"character":11,"line":182},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"init"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"init(value:)"},"pathComponents":["Atomic","init(value:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":72,"line":155},"start":{"character":8,"line":155}},"text":"Acquire the lock, regardless of the value of the state variable."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC4lockyyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":156},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"lock"},{"kind":"text","spelling":"()"}],"title":"lock()"},"pathComponents":["ConditionLock","lock()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"Equatable","rhsPrecise":"s:SQ"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":61,"line":92},"start":{"character":8,"line":92}},"text":"Acquire the lock for the duration of the given block."},{"range":{"end":{"character":7,"line":93},"start":{"character":7,"line":93}},"text":""},{"range":{"end":{"character":77,"line":94},"start":{"character":8,"line":94}},"text":"This convenience method should be preferred to `lock` and `unlock` in"},{"range":{"end":{"character":80,"line":95},"start":{"character":8,"line":95}},"text":"most situations, as it ensures that the lock will be released regardless"},{"range":{"end":{"character":28,"line":96},"start":{"character":8,"line":96}},"text":"of how `body` exits."},{"range":{"end":{"character":7,"line":97},"start":{"character":7,"line":97}},"text":""},{"range":{"end":{"character":70,"line":98},"start":{"character":8,"line":98}},"text":"- Parameter body: The block to execute while holding the lock."},{"range":{"end":{"character":51,"line":99},"start":{"character":8,"line":99}},"text":"- Returns: The value returned by the block."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"body"},{"kind":"text","spelling":": () "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"name":"body"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockC04withC0yxxyKXEKlF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":101},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"withLock"},{"kind":"text","spelling":"<"},{"kind":"genericParameter","spelling":"T"},{"kind":"text","spelling":">(() "},{"kind":"keyword","spelling":"throws"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") "},{"kind":"keyword","spelling":"rethrows"},{"kind":"text","spelling":" -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"withLock(_:)"},"pathComponents":["Lock","withLock(_:)"],"swiftExtension":{"extendedModule":"NIOConcurrencyHelpers"},"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":62,"line":124},"start":{"character":8,"line":124}},"text":"Atomically loads and returns the value of this object."},{"range":{"end":{"character":7,"line":125},"start":{"character":7,"line":125}},"text":""},{"range":{"end":{"character":85,"line":126},"start":{"character":8,"line":126}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":127},"start":{"character":8,"line":127}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":128},"start":{"character":8,"line":128}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":129},"start":{"character":7,"line":129}},"text":""},{"range":{"end":{"character":43,"line":130},"start":{"character":8,"line":130}},"text":"- Returns: The value of this object"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV4loadxyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":132},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"load"},{"kind":"text","spelling":"() -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"load()"},"pathComponents":["UnsafeEmbeddedAtomic","load()"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAtomic"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC","spelling":"NIOAtomic"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":">"}],"docComment":{"lines":[{"range":{"end":{"character":44,"line":199},"start":{"character":8,"line":199}},"text":"Create an atomic object with `value`"}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"value"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC","spelling":"NIOAtomic"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":">"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC10makeAtomic5valueACyxGx_tFZ"},"kind":{"displayName":"Type Method","identifier":"swift.type.method"},"location":{"position":{"character":23,"line":201},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"makeAtomic"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers9NIOAtomicC","spelling":"NIOAtomic"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":">"}],"title":"makeAtomic(value:)"},"pathComponents":["NIOAtomic","makeAtomic(value:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"docComment":{"lines":[{"range":{"end":{"character":80,"line":63},"start":{"character":8,"line":63}},"text":"Atomically compares the value against `expected` and, if they are equal,"},{"range":{"end":{"character":42,"line":64},"start":{"character":8,"line":64}},"text":"replaces the value with `desired`."},{"range":{"end":{"character":7,"line":65},"start":{"character":7,"line":65}},"text":""},{"range":{"end":{"character":84,"line":66},"start":{"character":8,"line":66}},"text":"This implementation conforms to C11's `atomic_compare_exchange_strong`. This"},{"range":{"end":{"character":85,"line":67},"start":{"character":8,"line":67}},"text":"means that the compare-and-swap will always succeed if `expected` is equal to"},{"range":{"end":{"character":83,"line":68},"start":{"character":8,"line":68}},"text":"value. Additionally, it uses a *sequentially consistent ordering*. For more"},{"range":{"end":{"character":74,"line":69},"start":{"character":8,"line":69}},"text":"details on atomic memory models, check the documentation for C11's"},{"range":{"end":{"character":22,"line":70},"start":{"character":8,"line":70}},"text":"`stdatomic.h`."},{"range":{"end":{"character":7,"line":71},"start":{"character":7,"line":71}},"text":""},{"range":{"end":{"character":84,"line":72},"start":{"character":8,"line":72}},"text":"- Parameter expected: The value that this object must currently hold for the"},{"range":{"end":{"character":40,"line":73},"start":{"character":8,"line":73}},"text":"    compare-and-swap to succeed."},{"range":{"end":{"character":84,"line":74},"start":{"character":8,"line":74}},"text":"- Parameter desired: The new value that this object will hold if the compare"},{"range":{"end":{"character":21,"line":75},"start":{"character":8,"line":75}},"text":"    succeeds."},{"range":{"end":{"character":84,"line":76},"start":{"character":8,"line":76}},"text":"- Returns: `True` if the exchange occurred, or `False` if `expected` did not"},{"range":{"end":{"character":64,"line":77},"start":{"character":8,"line":77}},"text":"    match the current value and so no exchange occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"expected"},{"declarationFragments":[{"kind":"identifier","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"desired"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV18compareAndExchange8expected7desiredSbx_xtF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":79},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"compareAndExchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"expected"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":", "},{"kind":"externalParam","spelling":"desired"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","spelling":"Bool"}],"title":"compareAndExchange(expected:desired:)"},"pathComponents":["UnsafeEmbeddedAtomic","compareAndExchange(expected:desired:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP14nio_atomic_addyxSpy13AtomicWrapperQzG_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":25},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"nio_atomic_add"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","spelling":"UnsafeMutablePointer"},{"kind":"text","spelling":"<"},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":"."},{"kind":"typeIdentifier","spelling":"AtomicWrapper"},{"kind":"text","spelling":">, "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"nio_atomic_add"},"pathComponents":["NIOAtomicPrimitive","nio_atomic_add"]},{"accessLevel":"public","declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":52,"line":247},"start":{"character":8,"line":247}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"end":{"character":7,"line":248},"start":{"character":7,"line":248}},"text":""},{"range":{"end":{"character":85,"line":249},"start":{"character":8,"line":249}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":250},"start":{"character":8,"line":250}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":251},"start":{"character":8,"line":251}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":252},"start":{"character":7,"line":252}},"text":""},{"range":{"end":{"character":64,"line":253},"start":{"character":8,"line":253}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"end":{"character":86,"line":254},"start":{"character":8,"line":254}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9NIOAtomicC3subyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":257},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/NIOAtomic.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"sub(_:)"},"pathComponents":["NIOAtomic","sub(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"NIOAtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers18NIOAtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_create"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP13atomic_createys13OpaquePointerVxcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":282},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_create"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"}],"title":"atomic_create"},"pathComponents":["AtomicPrimitive","atomic_create"]},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":74,"line":502},"start":{"character":8,"line":502}},"text":"Atomically exchanges `value` for the current value of this object."},{"range":{"end":{"character":7,"line":503},"start":{"character":7,"line":503}},"text":""},{"range":{"end":{"character":85,"line":504},"start":{"character":8,"line":504}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":505},"start":{"character":8,"line":505}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":506},"start":{"character":8,"line":506}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":507},"start":{"character":7,"line":507}},"text":""},{"range":{"end":{"character":117,"line":508},"start":{"character":8,"line":508}},"text":"- warning: The implementation of `exchange` contains a _Compare and Exchange loop_, ie. it may busy wait with"},{"range":{"end":{"character":33,"line":509},"start":{"character":8,"line":509}},"text":"           100% CPU load."},{"range":{"end":{"character":7,"line":510},"start":{"character":7,"line":510}},"text":""},{"range":{"end":{"character":63,"line":511},"start":{"character":8,"line":511}},"text":"- Parameter value: The new value to set this object to."},{"range":{"end":{"character":60,"line":512},"start":{"character":8,"line":512}},"text":"- Returns: The value previously held by this object."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"internalName":"value","name":"with"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers9AtomicBoxC8exchange4withxx_tF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":513},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"exchange"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"with"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"exchange(with:)"},"pathComponents":["AtomicBox","exchange(with:)"],"swiftGenerics":{"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","availability":[{"domain":"*","isUnconditionallyDeprecated":true,"message":"please use NIOAtomic instead"}],"declarationFragments":[{"kind":"attribute","spelling":"@discardableResult"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"docComment":{"lines":[{"range":{"end":{"character":52,"line":220},"start":{"character":8,"line":220}},"text":"Atomically subtracts `rhs` from this object."},{"range":{"end":{"character":7,"line":221},"start":{"character":7,"line":221}},"text":""},{"range":{"end":{"character":85,"line":222},"start":{"character":8,"line":222}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":223},"start":{"character":8,"line":223}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":224},"start":{"character":8,"line":224}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":225},"start":{"character":7,"line":225}},"text":""},{"range":{"end":{"character":64,"line":226},"start":{"character":8,"line":226}},"text":"- Parameter rhs: The value to subtract from this object."},{"range":{"end":{"character":86,"line":227},"start":{"character":8,"line":227}},"text":"- Returns: The previous value of this object, before the subtraction occurred."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"rhs"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"rhs"}],"returns":[{"kind":"typeIdentifier","spelling":"T"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers6AtomicC3subyxxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":230},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"sub"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"T"}],"title":"sub(_:)"},"pathComponents":["Atomic","sub(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"externalParam","spelling":"_"},{"kind":"text","spelling":" "},{"kind":"internalParam","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"docComment":{"lines":[{"range":{"end":{"character":66,"line":136},"start":{"character":8,"line":136}},"text":"Atomically replaces the value of this object with `value`."},{"range":{"end":{"character":7,"line":137},"start":{"character":7,"line":137}},"text":""},{"range":{"end":{"character":85,"line":138},"start":{"character":8,"line":138}},"text":"This implementation uses a *relaxed* memory ordering. This guarantees nothing"},{"range":{"end":{"character":85,"line":139},"start":{"character":8,"line":139}},"text":"more than that this operation is atomic: there is no guarantee that any other"},{"range":{"end":{"character":55,"line":140},"start":{"character":8,"line":140}},"text":"event will be ordered before or after this one."},{"range":{"end":{"character":7,"line":141},"start":{"character":7,"line":141}},"text":""},{"range":{"end":{"character":62,"line":142},"start":{"character":8,"line":142}},"text":"- Parameter value: The new value to set the object to."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"functionSignature":{"parameters":[{"declarationFragments":[{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"name":"value"}],"returns":[{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","spelling":"Void"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV5storeyyxF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":144},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"store"},{"kind":"text","spelling":"("},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":")"}],"title":"store(_:)"},"pathComponents":["UnsafeEmbeddedAtomic","store(_:)"],"swiftGenerics":{"constraints":[{"kind":"conformance","lhs":"T","rhs":"AtomicPrimitive","rhsPrecise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP"}],"parameters":[{"depth":0,"index":0,"name":"T"}]}},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"docComment":{"lines":[{"range":{"end":{"character":25,"line":77},"start":{"character":8,"line":77}},"text":"Release the lock."},{"range":{"end":{"character":7,"line":78},"start":{"character":7,"line":78}},"text":""},{"range":{"end":{"character":79,"line":79},"start":{"character":8,"line":79}},"text":"Whenever possible, consider using `withLock` instead of this method and"},{"range":{"end":{"character":42,"line":80},"start":{"character":8,"line":80}},"text":"`lock`, to simplify lock handling."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"functionSignature":{"returns":[{"kind":"text","spelling":"()"}]},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers4LockC6unlockyyF"},"kind":{"displayName":"Instance Method","identifier":"swift.method"},"location":{"position":{"character":16,"line":81},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"func"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"unlock"},{"kind":"text","spelling":"()"}],"title":"unlock()"},"pathComponents":["Lock","unlock()"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"docComment":{"lines":[{"range":{"end":{"character":40,"line":165},"start":{"character":8,"line":165}},"text":"The value of the state variable."},{"range":{"end":{"character":7,"line":166},"start":{"character":7,"line":166}},"text":""},{"range":{"end":{"character":78,"line":167},"start":{"character":8,"line":167}},"text":"Obtaining the value of the state variable requires acquiring the lock."},{"range":{"end":{"character":80,"line":168},"start":{"character":8,"line":168}},"text":"This means that it is not safe to access this property while holding the"},{"range":{"end":{"character":60,"line":169},"start":{"character":8,"line":169}},"text":"lock: it is only safe to use it when not holding it."}],"module":"NIOConcurrencyHelpers","uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers13ConditionLockC5valuexvp"},"kind":{"displayName":"Instance Property","identifier":"swift.property"},"location":{"position":{"character":15,"line":170},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/lock.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"value"},{"kind":"text","spelling":": "},{"kind":"typeIdentifier","spelling":"T"}],"title":"value"},"pathComponents":["ConditionLock","value"]},{"accessLevel":"public","declarationFragments":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":" { "},{"kind":"keyword","spelling":"get"},{"kind":"text","spelling":" }"}],"identifier":{"interfaceLanguage":"swift","precise":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP15atomic_exchangeyxs13OpaquePointerV_xtcvpZ"},"kind":{"displayName":"Type Property","identifier":"swift.type.property"},"location":{"position":{"character":15,"line":287},"uri":"file:///home/klossy/swiftinit.org/ecosystem/packages/.builds/swift-nio@2.39.0/.build/checkouts/swift-nio/Sources/NIOConcurrencyHelpers/atomics.swift"},"names":{"subHeading":[{"kind":"keyword","spelling":"static"},{"kind":"text","spelling":" "},{"kind":"keyword","spelling":"var"},{"kind":"text","spelling":" "},{"kind":"identifier","spelling":"atomic_exchange"},{"kind":"text","spelling":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13OpaquePointerV","spelling":"OpaquePointer"},{"kind":"text","spelling":", "},{"kind":"typeIdentifier","spelling":"Self"},{"kind":"text","spelling":") -> "},{"kind":"typeIdentifier","spelling":"Self"}],"title":"atomic_exchange"},"pathComponents":["AtomicPrimitive","atomic_exchange"]}]}
