{"culture":"SystemPackage","dependencies":[],"extensions":[],"partitions":[{"namespace":"Swift","communities":[{"community":"init","startIndex":0,"endIndex":10},{"community":"method","startIndex":10,"endIndex":11}]},{"namespace":"SystemPackage","communities":[{"community":"enum","startIndex":11,"endIndex":13},{"community":"struct","startIndex":13,"endIndex":24},{"community":"enum.case","startIndex":24,"endIndex":27},{"community":"init","startIndex":27,"endIndex":52},{"community":"subscript","startIndex":52,"endIndex":53},{"community":"type.property","startIndex":53,"endIndex":183},{"community":"property","startIndex":183,"endIndex":223},{"community":"type.method","startIndex":223,"endIndex":226},{"community":"method","startIndex":226,"endIndex":262},{"community":"type.op","startIndex":262,"endIndex":264},{"community":"typealias","startIndex":264,"endIndex":270}]}],"identifiers":["sSS13SystemPackageE10validatingSSSgAA8FilePathV4RootV_tcfc","sSS13SystemPackageE10validatingSSSgAA8FilePathV9ComponentV_tcfc","sSS13SystemPackageE10validatingSSSgAA8FilePathV_tcfc","sSS13SystemPackageE14platformStringSSSPys4Int8VG_tcfc","sSS13SystemPackageE14validatingUTF8SSSgAA8FilePathV_tcfc","sSS13SystemPackageE24validatingPlatformStringSSSgSPys4Int8VG_tcfc","sSS13SystemPackageE8decodingSSAA8FilePathV4RootV_tcfc","sSS13SystemPackageE8decodingSSAA8FilePathV9ComponentV_tcfc","sSS13SystemPackageE8decodingSSAA8FilePathV_tcfc","sSS13SystemPackageEySSAA8FilePathVcfc","sSS13SystemPackageE18withPlatformStringyxxSPys4Int8VGKXEKlF","s13SystemPackage8CInteropO","s13SystemPackage8FilePathV9ComponentV4KindO","s13SystemPackage14FileDescriptorV","s13SystemPackage14FileDescriptorV10AccessModeV","s13SystemPackage14FileDescriptorV10SeekOriginV","s13SystemPackage14FileDescriptorV11OpenOptionsV","s13SystemPackage15FilePermissionsV","s13SystemPackage5ErrnoV","s13SystemPackage8FilePathV","s13SystemPackage8FilePathV13ComponentViewV","s13SystemPackage8FilePathV13ComponentViewV5IndexV","s13SystemPackage8FilePathV4RootV","s13SystemPackage8FilePathV9ComponentV","s13SystemPackage8FilePathV9ComponentV4KindO15parentDirectoryyA2GmF","s13SystemPackage8FilePathV9ComponentV4KindO16currentDirectoryyA2GmF","s13SystemPackage8FilePathV9ComponentV4KindO7regularyA2GmF","s13SystemPackage14FileDescriptorV10AccessModeV8rawValueAEs5Int32V_tcfc","s13SystemPackage14FileDescriptorV10SeekOriginV8rawValueAEs5Int32V_tcfc","s13SystemPackage14FileDescriptorV11OpenOptionsV8rawValueAEs5Int32V_tcfc","s13SystemPackage14FileDescriptorV8rawValueACs5Int32V_tcfc","s13SystemPackage15FilePermissionsV8rawValueACs6UInt32V_tcfc","s13SystemPackage5ErrnoV8rawValueACs5Int32V_tcfc","s13SystemPackage8FilePathV13ComponentViewV4fromAEs7Decoder_p_tKcfc","s13SystemPackage8FilePathV13ComponentViewVAEycfc","s13SystemPackage8FilePathV13stringLiteralACSS_tcfc","s13SystemPackage8FilePathV14platformStringACSPys4Int8VG_tcfc","s13SystemPackage8FilePathV4RootV13stringLiteralAESS_tcfc","s13SystemPackage8FilePathV4RootV14platformStringAESgSPys4Int8VG_tcfc","s13SystemPackage8FilePathV4RootV4fromAEs7Decoder_p_tKcfc","s13SystemPackage8FilePathV4RootVyAESgSScfc","s13SystemPackage8FilePathV4fromACs7Decoder_p_tKcfc","s13SystemPackage8FilePathV4root10componentsA2C4RootVSg_AC9ComponentVdtcfc","s13SystemPackage8FilePathV4root_A2C4RootVSg_s5SliceVyAC13ComponentViewVGtcfc","s13SystemPackage8FilePathV4root_A2C4RootVSg_xtcSlRzAC9ComponentV7ElementRtzlufc","s13SystemPackage8FilePathV7cStringACSPys4Int8VG_tcfc","s13SystemPackage8FilePathV9ComponentV13stringLiteralAESS_tcfc","s13SystemPackage8FilePathV9ComponentV14platformStringAESgSPys4Int8VG_tcfc","s13SystemPackage8FilePathV9ComponentV4fromAEs7Decoder_p_tKcfc","s13SystemPackage8FilePathV9ComponentVyAESgSScfc","s13SystemPackage8FilePathVACycfc","s13SystemPackage8FilePathVyACSScfc","s13SystemPackage8FilePathV13ComponentViewVyAC0E0VAE5IndexVcip","s13SystemPackage14FileDescriptorV10AccessModeV8readOnlyAEvpZ","s13SystemPackage14FileDescriptorV10AccessModeV9readWriteAEvpZ","s13SystemPackage14FileDescriptorV10AccessModeV9writeOnlyAEvpZ","s13SystemPackage14FileDescriptorV10SeekOriginV3endAEvpZ","s13SystemPackage14FileDescriptorV10SeekOriginV5startAEvpZ","s13SystemPackage14FileDescriptorV10SeekOriginV7currentAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV11closeOnExecAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV11nonBlockingAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV15exclusiveCreateAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV6appendAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV6createAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV8noFollowAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV8truncateAEvpZ","s13SystemPackage14FileDescriptorV11OpenOptionsV9directoryAEvpZ","s13SystemPackage14FileDescriptorV13standardErrorACvpZ","s13SystemPackage14FileDescriptorV13standardInputACvpZ","s13SystemPackage14FileDescriptorV14standardOutputACvpZ","s13SystemPackage15FilePermissionsV10groupWriteACvpZ","s13SystemPackage15FilePermissionsV10otherWriteACvpZ","s13SystemPackage15FilePermissionsV10ownerWriteACvpZ","s13SystemPackage15FilePermissionsV10setGroupIDACvpZ","s13SystemPackage15FilePermissionsV12groupExecuteACvpZ","s13SystemPackage15FilePermissionsV12otherExecuteACvpZ","s13SystemPackage15FilePermissionsV12ownerExecuteACvpZ","s13SystemPackage15FilePermissionsV14groupReadWriteACvpZ","s13SystemPackage15FilePermissionsV14otherReadWriteACvpZ","s13SystemPackage15FilePermissionsV14ownerReadWriteACvpZ","s13SystemPackage15FilePermissionsV16groupReadExecuteACvpZ","s13SystemPackage15FilePermissionsV16otherReadExecuteACvpZ","s13SystemPackage15FilePermissionsV16ownerReadExecuteACvpZ","s13SystemPackage15FilePermissionsV17groupWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV17otherWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV17ownerWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV21groupReadWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV21otherReadWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV21ownerReadWriteExecuteACvpZ","s13SystemPackage15FilePermissionsV8saveTextACvpZ","s13SystemPackage15FilePermissionsV9groupReadACvpZ","s13SystemPackage15FilePermissionsV9otherReadACvpZ","s13SystemPackage15FilePermissionsV9ownerReadACvpZ","s13SystemPackage15FilePermissionsV9setUserIDACvpZ","s13SystemPackage5ErrnoV012readOnlyFileA0ACvpZ","s13SystemPackage5ErrnoV018tooManyOpenFilesInA0ACvpZ","s13SystemPackage5ErrnoV10badAddressACvpZ","s13SystemPackage5ErrnoV10badMessageACvpZ","s13SystemPackage5ErrnoV10brokenPipeACvpZ","s13SystemPackage5ErrnoV10fileExistsACvpZ","s13SystemPackage5ErrnoV10hostIsDownACvpZ","s13SystemPackage5ErrnoV10noFunctionACvpZ","s13SystemPackage5ErrnoV10outOfRangeACvpZ","s13SystemPackage5ErrnoV10wouldBlockACvpZ","s13SystemPackage5ErrnoV11illegalSeekACvpZ","s13SystemPackage5ErrnoV11interruptedACvpZ","s13SystemPackage5ErrnoV11isDirectoryACvpZ","s13SystemPackage5ErrnoV11networkDownACvpZ","s13SystemPackage5ErrnoV11outOfDomainACvpZ","s13SystemPackage5ErrnoV12addressInUseACvpZ","s13SystemPackage5ErrnoV12fileTooLargeACvpZ","s13SystemPackage5ErrnoV12improperLinkACvpZ","s13SystemPackage5ErrnoV12networkResetACvpZ","s13SystemPackage5ErrnoV12notDirectoryACvpZ","s13SystemPackage5ErrnoV12notPermittedACvpZ","s13SystemPackage5ErrnoV12notSupportedACvpZ","s13SystemPackage5ErrnoV12resourceBusyACvpZ","s13SystemPackage5ErrnoV12textFileBusyACvpZ","s13SystemPackage5ErrnoV12tooManyLinksACvpZ","s13SystemPackage5ErrnoV12tooManyUsersACvpZ","s13SystemPackage5ErrnoV13noBufferSpaceACvpZ","s13SystemPackage5ErrnoV13noRouteToHostACvpZ","s13SystemPackage5ErrnoV13noSuchProcessACvpZ","s13SystemPackage5ErrnoV13nowInProgressACvpZ","s13SystemPackage5ErrnoV13protocolErrorACvpZ","s13SystemPackage5ErrnoV14argListTooLongACvpZ","s13SystemPackage5ErrnoV14messageTooLongACvpZ","s13SystemPackage5ErrnoV14noChildProcessACvpZ","s13SystemPackage5ErrnoV14notBlockDeviceACvpZ","s13SystemPackage5ErrnoV14notRecoverableACvpZ","s13SystemPackage5ErrnoV14socketShutdownACvpZ","s13SystemPackage5ErrnoV15addressRequiredACvpZ","s13SystemPackage5ErrnoV15connectionAbortACvpZ","s13SystemPackage5ErrnoV15connectionResetACvpZ","s13SystemPackage5ErrnoV15execFormatErrorACvpZ","s13SystemPackage5ErrnoV15fileNameTooLongACvpZ","s13SystemPackage5ErrnoV15invalidArgumentACvpZ","s13SystemPackage5ErrnoV16alreadyInProcessACvpZ","s13SystemPackage5ErrnoV16permissionDeniedACvpZ","s13SystemPackage5ErrnoV16tooManyOpenFilesACvpZ","s13SystemPackage5ErrnoV17badFileDescriptorACvpZ","s13SystemPackage5ErrnoV17connectionRefusedACvpZ","s13SystemPackage5ErrnoV17directoryNotEmptyACvpZ","s13SystemPackage5ErrnoV17diskQuotaExceededACvpZ","s13SystemPackage5ErrnoV17identifierRemovedACvpZ","s13SystemPackage5ErrnoV17noStreamResourcesACvpZ","s13SystemPackage5ErrnoV17previousOwnerDiedACvpZ","s13SystemPackage5ErrnoV17socketIsConnectedACvpZ","s13SystemPackage5ErrnoV17tooManyReferencesACvpZ","s13SystemPackage5ErrnoV18networkUnreachableACvpZ","s13SystemPackage5ErrnoV18socketNotConnectedACvpZ","s13SystemPackage5ErrnoV18staleNFSFileHandleACvpZ","s13SystemPackage5ErrnoV19addressNotAvailableACvpZ","s13SystemPackage5ErrnoV19illegalByteSequenceACvpZ","s13SystemPackage5ErrnoV19tooManyRemoteLevelsACvpZ","s13SystemPackage5ErrnoV20notSupportedOnSocketACvpZ","s13SystemPackage5ErrnoV20protocolNotAvailableACvpZ","s13SystemPackage5ErrnoV20protocolNotSupportedACvpZ","s13SystemPackage5ErrnoV21noSuchAddressOrDeviceACvpZ","s13SystemPackage5ErrnoV21noSuchFileOrDirectoryACvpZ","s13SystemPackage5ErrnoV22socketTypeNotSupportedACvpZ","s13SystemPackage5ErrnoV25addressFamilyNotSupportedACvpZ","s13SystemPackage5ErrnoV25tooManySymbolicLinkLevelsACvpZ","s13SystemPackage5ErrnoV26protocolFamilyNotSupportedACvpZ","s13SystemPackage5ErrnoV26protocolWrongTypeForSocketACvpZ","s13SystemPackage5ErrnoV27inappropriateIOCTLForDeviceACvpZ","s13SystemPackage5ErrnoV29operationNotSupportedByDeviceACvpZ","s13SystemPackage5ErrnoV30resourceTemporarilyUnavailableACvpZ","s13SystemPackage5ErrnoV6noDataACvpZ","s13SystemPackage5ErrnoV6noLinkACvpZ","s13SystemPackage5ErrnoV7ioErrorACvpZ","s13SystemPackage5ErrnoV7noLocksACvpZ","s13SystemPackage5ErrnoV7noSpaceACvpZ","s13SystemPackage5ErrnoV7timeoutACvpZ","s13SystemPackage5ErrnoV8canceledACvpZ","s13SystemPackage5ErrnoV8deadlockACvpZ","s13SystemPackage5ErrnoV8multiHopACvpZ","s13SystemPackage5ErrnoV8noMemoryACvpZ","s13SystemPackage5ErrnoV8overflowACvpZ","s13SystemPackage5ErrnoV8timedOutACvpZ","s13SystemPackage5ErrnoV9noMessageACvpZ","s13SystemPackage5ErrnoV9notSocketACvpZ","s13SystemPackage5ErrnoV9notStreamACvpZ","s13SystemPackage14FileDescriptorV10AccessModeV11descriptionSSvp","s13SystemPackage14FileDescriptorV10AccessModeV16debugDescriptionSSvp","s13SystemPackage14FileDescriptorV10AccessModeV8rawValues5Int32Vvp","s13SystemPackage14FileDescriptorV10SeekOriginV11descriptionSSvp","s13SystemPackage14FileDescriptorV10SeekOriginV16debugDescriptionSSvp","s13SystemPackage14FileDescriptorV10SeekOriginV8rawValues5Int32Vvp","s13SystemPackage14FileDescriptorV11OpenOptionsV11descriptionSSvp","s13SystemPackage14FileDescriptorV11OpenOptionsV16debugDescriptionSSvp","s13SystemPackage14FileDescriptorV11OpenOptionsV8rawValues5Int32Vvp","s13SystemPackage14FileDescriptorV8rawValues5Int32Vvp","s13SystemPackage15FilePermissionsV11descriptionSSvp","s13SystemPackage15FilePermissionsV16debugDescriptionSSvp","s13SystemPackage15FilePermissionsV8rawValues6UInt32Vvp","s13SystemPackage5ErrnoV11descriptionSSvp","s13SystemPackage5ErrnoV16debugDescriptionSSvp","s13SystemPackage5ErrnoV8rawValues5Int32Vvp","s13SystemPackage8FilePathV10componentsAC13ComponentViewVvp","s13SystemPackage8FilePathV10isAbsoluteSbvp","s13SystemPackage8FilePathV10isRelativeSbvp","s13SystemPackage8FilePathV11descriptionSSvp","s13SystemPackage8FilePathV13ComponentViewV10startIndexAE0H0Vvp","s13SystemPackage8FilePathV13ComponentViewV8endIndexAE0H0Vvp","s13SystemPackage8FilePathV13lastComponentAC0F0VSgvp","s13SystemPackage8FilePathV16debugDescriptionSSvp","s13SystemPackage8FilePathV17isLexicallyNormalSbvp","s13SystemPackage8FilePathV4RootV11descriptionSSvp","s13SystemPackage8FilePathV4RootV16debugDescriptionSSvp","s13SystemPackage8FilePathV4RootV6stringSSvp","s13SystemPackage8FilePathV4rootAC4RootVSgvp","s13SystemPackage8FilePathV4stemSSSgvp","s13SystemPackage8FilePathV6lengthSivp","s13SystemPackage8FilePathV6stringSSvp","s13SystemPackage8FilePathV7isEmptySbvp","s13SystemPackage8FilePathV9ComponentV11descriptionSSvp","s13SystemPackage8FilePathV9ComponentV16debugDescriptionSSvp","s13SystemPackage8FilePathV9ComponentV4kindAE4KindOvp","s13SystemPackage8FilePathV9ComponentV4stemSSvp","s13SystemPackage8FilePathV9ComponentV6stringSSvp","s13SystemPackage8FilePathV9ComponentV9extensionSSSgvp","s13SystemPackage8FilePathV9extensionSSSgvp","s13SystemPackage14FileDescriptorV4open__7options11permissions16retryOnInterruptACSPys4Int8VG_AC10AccessModeVAC11OpenOptionsVAA0C11PermissionsVSgSbtKFZ","s13SystemPackage14FileDescriptorV4open__7options11permissions16retryOnInterruptAcA0C4PathV_AC10AccessModeVAC11OpenOptionsVAA0C11PermissionsVSgSbtKFZ","s13SystemPackage14FileDescriptorV4pipeAC7readEnd_AC05writeG0tyKFZ","s13SystemPackage14FileDescriptorV10closeAfteryxxyKXEKlF","s13SystemPackage14FileDescriptorV4read18fromAbsoluteOffset4into16retryOnInterruptSis5Int64V_SwSbtKF","s13SystemPackage14FileDescriptorV4read4into16retryOnInterruptSiSw_SbtKF","s13SystemPackage14FileDescriptorV4seek6offset4froms5Int64VAH_AC10SeekOriginVtKF","s13SystemPackage14FileDescriptorV5closeyyKF","s13SystemPackage14FileDescriptorV5write16toAbsoluteOffset_16retryOnInterruptSis5Int64V_SWSbtKF","s13SystemPackage14FileDescriptorV5write_16retryOnInterruptSiSW_SbtKF","s13SystemPackage14FileDescriptorV8writeAll16toAbsoluteOffset_Sis5Int64V_xtKSTRzs5UInt8V7ElementRtzlF","s13SystemPackage14FileDescriptorV8writeAllySixKSTRzs5UInt8V7ElementRtzlF","s13SystemPackage14FileDescriptorV9duplicate2as16retryOnInterruptA2CSg_SbtKF","s13SystemPackage8FilePathV11withCStringyxxSPys4Int8VGKXEKlF","s13SystemPackage8FilePathV12removePrefixySbACF","s13SystemPackage8FilePathV12removingRootACyF","s13SystemPackage8FilePathV13ComponentViewV15replaceSubrange_4withySnyAE5IndexVG_xtSlRzAC0E0V7ElementRtzlF","s13SystemPackage8FilePathV13ComponentViewV5index5afterAE5IndexVAI_tF","s13SystemPackage8FilePathV13ComponentViewV5index6beforeAE5IndexVAI_tF","s13SystemPackage8FilePathV15reserveCapacityyySiF","s13SystemPackage8FilePathV18lexicallyNormalizeyyF","s13SystemPackage8FilePathV18lexicallyResolvingyACSgACnF","s13SystemPackage8FilePathV18withPlatformStringyxxSPys4Int8VGKXEKlF","s13SystemPackage8FilePathV19lexicallyNormalizedACyF","s13SystemPackage8FilePathV19removeLastComponentSbyF","s13SystemPackage8FilePathV21removingLastComponentACyF","s13SystemPackage8FilePathV4RootV18withPlatformStringyxxSPys4Int8VGKXEKlF","s13SystemPackage8FilePathV4ends4withSbAC_tF","s13SystemPackage8FilePathV4pushyyACnF","s13SystemPackage8FilePathV6appendyyAC9ComponentVnF","s13SystemPackage8FilePathV6appendyySSnF","s13SystemPackage8FilePathV6appendyyxnSlRzAC9ComponentV7ElementRtzlF","s13SystemPackage8FilePathV6starts4withSbAC_tF","s13SystemPackage8FilePathV7pushingyA2CnF","s13SystemPackage8FilePathV9ComponentV18withPlatformStringyxxSPys4Int8VGKXEKlF","s13SystemPackage8FilePathV9appendingyA2C9ComponentVnF","s13SystemPackage8FilePathV9appendingyACSSnF","s13SystemPackage8FilePathV9appendingyACxnSlRzAC9ComponentV7ElementRtzlF","s13SystemPackage8FilePathV9removeAll15keepingCapacityySb_tF","s13SystemPackage5ErrnoV2teoiySbAC_s5Error_ptFZ","s13SystemPackage8FilePathV13ComponentViewV5IndexV1loiySbAG_AGtFZ","s13SystemPackage6CModeTa","s13SystemPackage8CInteropO12PlatformChara","s13SystemPackage8CInteropO23PlatformUnicodeEncodinga","s13SystemPackage8CInteropO4Chara","s13SystemPackage8CInteropO4Modea","s13SystemPackage8FilePathV13ComponentViewV7Elementa","c@T@mode_t","s13SystemPackage8FilePathV13ComponentViewV11SubSequencea","sSE","sSH","sSK","sSK12_RegexParserE10mapOffsetsySny5IndexQzGSi5lower_Si5uppert_tF","sSK12_RegexParserE14flatmapOffsetsySny5IndexQzGSi5lower_Si5uppertSgF","sSK5index5after5IndexQzAD_tF","sSK5index6before5IndexQzAD_tF","sSK9formIndex6beforey0B0Qzz_tF","sSKsE10difference4from2bys20CollectionDifferenceVy7ElementQzGqd___SbAG_AGtXEtSKRd__AFQyd__AGRSlF","sSKsE4last5where7ElementQzSgSbADKXE_tKF","sSKsE4last7ElementQzSgvp","sSKsE5index_8offsetBy07limitedC05IndexQzSgAE_SiAEtF","sSKsE5index_8offsetBy5IndexQzAD_SitF","sSKsE6suffixy11SubSequenceQzSiF","sSKsE8distance4from2toSi5IndexQz_AEtF","sSKsE8dropLasty11SubSequenceQzSiF","sSKsE8reverseds18ReversedCollectionVyxGyF","sSKsE9formIndex6beforey0B0Qzz_tF","sSKsE9lastIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSKsSQ7ElementRpzrlE10difference4froms20CollectionDifferenceVyABGqd___tSKRd__AAQyd__ABRSlF","sSKsSQ7ElementRpzrlE9lastIndex2of0C0QzSgAB_tF","sSL","sSL1loiySbx_xtFZ","sSLsE1goiySbx_xtFZ","sSLsE2geoiySbx_xtFZ","sSLsE2leoiySbx_xtFZ","sSLsE3zzloiySnyxGx_xtFZ","sSLsE3zzlopys16PartialRangeUpToVyxGxFZ","sSLsE3zzzoPys16PartialRangeFromVyxGxFZ","sSLsE3zzzoiySNyxGx_xtFZ","sSLsE3zzzopys19PartialRangeThroughVyxGxFZ","sSP","sSQ","sSQsE2neoiySbx_xtFZ","sSS","sST","sST12_RegexParserE3allyS2b7ElementQzXEF","sST12_RegexParserE3anyyS2b7ElementQzXEF","sST12_RegexParserE4noneyS2b7ElementQzXEF","sST32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sST7ElementQa","sSTsE10allSatisfyyS2b7ElementQzKXEKF","sSTsE10compactMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE10enumerateds18EnumeratedSequenceVyxGyF","sSTsE13elementsEqual_2bySbqd___Sb7ElementQz_ACQyd__tKXEtKSTRd__lF","sSTsE19underestimatedCountSivp","sSTsE25lexicographicallyPrecedes_2bySbqd___Sb7ElementQz_ADtKXEtKSTRd__ACQyd__ADRSlF","sSTsE32withContiguousStorageIfAvailableyqd__Sgqd__SRy7ElementQzGKXEKlF","sSTsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSTsE3max2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE3min2by7ElementQzSgSbAD_ADtKXE_tKF","sSTsE4lazys12LazySequenceVyxGvp","sSTsE5first5where7ElementQzSgSbADKXE_tKF","sSTsE6reduce4into_qd__qd__n_yqd__z_7ElementQztKXEtKlF","sSTsE6reduceyqd__qd___qd__qd___7ElementQztKXEtKlF","sSTsE6sorted2bySay7ElementQzGSbAD_ADtKXE_tKF","sSTsE6starts4with2bySbqd___Sb7ElementQz_ADQyd__tKXEtKSTRd__lF","sSTsE7flatMapySay7ElementQyd__Gqd__ABQzKXEKSTRd__lF","sSTsE7flatMapySayqd__Gqd__Sg7ElementQzKXEKlF","sSTsE7forEachyyy7ElementQzKXEKF","sSTsE8contains5whereS2b7ElementQzKXE_tKF","sSTsE8shuffled5usingSay7ElementQzGqd__z_tSGRd__lF","sSTsE8shuffledSay7ElementQzGyF","sSTsSQ7ElementRpzrlE13elementsEqualySbqd__STRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE6starts4withSbqd___tSTRd__AAQyd__ABRSlF","sSTsSQ7ElementRpzrlE8containsySbABF","sSW","sSY","sSY8rawValue03RawB0Qzvp","sSY8rawValuexSg03RawB0Qz_tcfc","sSYsSERzs5Int32V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF","sSYsSERzs6UInt32V8RawValueSYRtzrlE6encode2toys7Encoder_p_tKF","sSYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp","sSYsSHRzSH8RawValueSYRpzrlE4hash4intoys6HasherVz_tF","sSYsSeRzs5Int32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc","sSYsSeRzs6UInt32V8RawValueSYRtzrlE4fromxs7Decoder_p_tKcfc","sSb","sSe","sSe4fromxs7Decoder_p_tKcfc","sSi","sSl","sSl10startIndex0B0Qzvp","sSl12_RegexParserE15convertByOffset_2in5IndexQyd__ADQz_qd__tSlRd__lF","sSl12_RegexParserE15convertByOffset_2inSny5IndexQyd__GSnyADQzG_qd__tSlRd__lF","sSl12_RegexParserE5index8atOffset5IndexQzSi_tF","sSl12_RegexParserE5split6around11SubSequenceQz6prefix_A2E6suffixtSny5IndexQzG_tF","sSl12_RegexParserE6offset2ofSi5IndexQz_tF","sSl12_RegexParserE6offset7ofIndexSi0E0Qz_tF","sSl12_RegexParserE7offsets2ofSnySiGSny5IndexQzG_tF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropPrefixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSl12_RegexParserSQ7ElementRpzrlE13tryDropSuffixy11SubSequenceQzSgqd__SlRd__ABQyd__ACRSlF","sSl17_StringProcessingE14trimmingPrefix5while11SubSequenceQzSb7ElementQzKXE_tKF","sSl17_StringProcessingSQ7ElementRpzrlE10firstRange2ofSny5IndexQzGSgqd___tSlRd__ABQyd__ACRSlF","sSl17_StringProcessingSQ7ElementRpzrlE14trimmingPrefixy11SubSequenceQzqd__STRd__ABQyd__ACRSlF","sSl17_StringProcessingSQ7ElementRpzrlE6ranges2ofSaySny5IndexQzGGqd___tSlRd__ABQyd__ACRSlF","sSl5IndexQa","sSl8endIndex0B0Qzvp","sSlsE10firstIndex5where0B0QzSgSb7ElementQzKXE_tKF","sSlsE13randomElement0B0QzSgyF","sSlsE13randomElement5using0B0QzSgqd__z_tSGRd__lF","sSlsE19underestimatedCountSivp","sSlsE3mapySayqd__Gqd__7ElementQzKXEKlF","sSlsE4drop5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE5countSivp","sSlsE5first7ElementQzSgvp","sSlsE5split9maxSplits25omittingEmptySubsequences14whereSeparatorSay11SubSequenceQzGSi_S2b7ElementQzKXEtKF","sSlsE6prefix4upTo11SubSequenceQz5IndexQz_tF","sSlsE6prefix5while11SubSequenceQzSb7ElementQzKXE_tKF","sSlsE6prefix7through11SubSequenceQz5IndexQz_tF","sSlsE6prefixy11SubSequenceQzSiF","sSlsE6suffix4from11SubSequenceQz5IndexQz_tF","sSlsE7isEmptySbvp","sSlsE9dropFirsty11SubSequenceQzSiF","sSlsE9formIndex5aftery0B0Qzz_tF","sSlsE9formIndex_8offsetBy07limitedD0Sb0B0Qzz_SiAEtF","sSlsE9formIndex_8offsetByy0B0Qzz_SitF","sSlsEy11SubSequenceQzqd__cSXRd__5BoundQyd__5IndexRtzluip","sSlsEy11SubSequenceQzys15UnboundedRange_OXEcip","sSlsSIyxG7IndicesRtzrlE7indicesAAvp","sSlsSQ7ElementRpzrlE10firstIndex2of0C0QzSgAB_tF","sSlsSQ7ElementRpzrlE5index2of5IndexQzSgAB_tF","sSlsSQ7ElementRpzrlE5split9separator9maxSplits25omittingEmptySubsequencesSay11SubSequenceQzGAB_SiSbtF","sSlss16IndexingIteratorVyxG0B0RtzrlE04makeB0ACyF","sSlss5SliceVyxG11SubSequenceRtzrlEyACSny5IndexQzGcip","sSly7ElementQz5IndexQzcip","sSm","sSm15replaceSubrange_4withySny5IndexQzG_qd__ntSlRd__7ElementQyd__AFRtzlF","sSm17_StringProcessingE10trimPrefix5whileySb7ElementQzKXE_tKF","sSm17_StringProcessingSQ7ElementRpzrlE10trimPrefixyyqd__STRd__ABQyd__ACRSlF","sSm17_StringProcessingSQ7ElementRpzrlE7replace_4with15maxReplacementsyqd___qd_0_SitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AGRSr0_lF","sSm17_StringProcessingSQ7ElementRpzrlE9replacing_4with15maxReplacementsxqd___qd_0_SitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AGRSr0_lF","sSm17_StringProcessingSQ7ElementRpzrlE9replacing_4with8subrange15maxReplacementsxqd___qd_0_Sny5IndexQzGSitSlRd__SlRd_0_ABQyd__ACRSABQyd_0_AKRSr0_lF","sSmsE11removeFirst7ElementQzyF","sSmsE11removeFirstyySiF","sSmsE14removeSubrangeyySny5IndexQzGF","sSmsE14removeSubrangeyyqd__SXRd__5BoundQyd__5IndexRtzlF","sSmsE15replaceSubrange_4withySny5IndexQzG_qd__tSlRd__7ElementQyd__AFRtzlF","sSmsE15replaceSubrange_4withyqd_0__qd__ntSlRd__SXRd_0_7ElementQyd__ACRtz5BoundQyd_0_5IndexRtzr0_lF","sSmsE15reserveCapacityyySiF","sSmsE1poiyxqd___xtSTRd__7ElementQyd__ABRtzlFZ","sSmsE1poiyxx_qd__tSTRd__7ElementQyd__ABRtzlFZ","sSmsE1poiyxx_qd__tSmRd__7ElementQyd__ABRtzlFZ","sSmsE2peoiyyxz_qd__tSTRd__7ElementQyd__ABRtzlFZ","sSmsE6append10contentsOfyqd__n_tSTRd__7ElementQyd__ACRtzlF","sSmsE6appendyy7ElementQznF","sSmsE6filteryxSb7ElementQzKXEKF","sSmsE6insert10contentsOf2atyqd__n_5IndexQztSlRd__7ElementQyd__AFRtzlF","sSmsE6insert_2aty7ElementQzn_5IndexQztF","sSmsE6remove2at7ElementQz5IndexQz_tF","sSmsE8applyingyxSgs20CollectionDifferenceVy7ElementQzGF","sSmsE9removeAll15keepingCapacityySb_tF","sSmsE9removeAll5whereySb7ElementQzKXE_tKF","sSmsE9repeating5countx7ElementQz_Sitcfc","sSmsEyxqd__cSTRd__7ElementQyd__AARtzlufc","sSmsSKRzrlE10removeLast7ElementSTQzyF","sSmsSKRzrlE10removeLastyySiF","sSmsSKRzrlE7popLast7ElementSTQzSgyF","sSmxycfc","sSn","sSw","ss10SetAlgebraP","ss10SetAlgebraPs7ElementQz012ArrayLiteralC0RtzrlE05arrayE0xAFd_tcfc","ss10SetAlgebraPsE10isDisjoint4withSbx_tF","ss10SetAlgebraPsE10isSuperset2ofSbx_tF","ss10SetAlgebraPsE11subtractingyxxF","ss10SetAlgebraPsE14isStrictSubset2ofSbx_tF","ss10SetAlgebraPsE16isStrictSuperset2ofSbx_tF","ss10SetAlgebraPsE7isEmptySbvp","ss10SetAlgebraPsE8isSubset2ofSbx_tF","ss10SetAlgebraPsE8subtractyyxF","ss10SetAlgebraPsEyxqd__ncSTRd__7ElementQyd__ACRtzlufc","ss23CustomStringConvertibleP","ss23CustomStringConvertibleP11descriptionSSvp","ss23CustomStringConvertibleP12_RegexParserE21halfWidthCornerQuotedSSvp","ss25ExpressibleByArrayLiteralP","ss26ExpressibleByStringLiteralP","ss26ExpressibleByStringLiteralP06stringD0x0cD4TypeQz_tcfc","ss26ExpressibleByStringLiteralPs0cD4TypeQz023ExtendedGraphemeClusterdE0RtzrlE08extendedghD0xAF_tcfc","ss28CustomDebugStringConvertibleP","ss28CustomDebugStringConvertibleP16debugDescriptionSSvp","ss33ExpressibleByUnicodeScalarLiteralP","ss33ExpressibleByUnicodeScalarLiteralP07unicodedE0x0cdE4TypeQz_tcfc","ss43ExpressibleByExtendedGraphemeClusterLiteralP","ss43ExpressibleByExtendedGraphemeClusterLiteralP08extendeddeF0x0cdeF4TypeQz_tcfc","ss43ExpressibleByExtendedGraphemeClusterLiteralPs013UnicodeScalarF4TypeQz0cdefI0RtzrlE07unicodehF0xAF_tcfc","ss4CInta","ss4UTF8a","ss5CChara","ss5ErrorP","ss5Int64V","ss5UInt8V","ss7DecoderP","ss8SendableP","ss9OptionSetP","ss9OptionSetP8rawValuex03RawD0Qz_tcfc","ss9OptionSetPs7ElementQzRszrlE6insertySb8inserted_x17memberAfterInserttxF","ss9OptionSetPs7ElementQzRszrlE6removeyxSgxF","ss9OptionSetPs7ElementQzRszrlE6update4withxSgx_tF","ss9OptionSetPs7ElementQzRszrlE8containsySbxF","ss9OptionSetPsE12intersectionyxxF","ss9OptionSetPsE19symmetricDifferenceyxxF","ss9OptionSetPsE5unionyxxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE16formIntersectionyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE23formSymmetricDifferenceyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlE9formUnionyyxF","ss9OptionSetPss17FixedWidthInteger8RawValueRpzrlExycfc"],"vertices":[{"p":["String","init(validating:)"],"f":[["init",10],["?(",17],["validating",1],[" ",17],["root",2],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],[")",17]],"s":[["init",10],["?(",17],["validating",1],[": ",17],["FilePath",18],[".",17],["Root",18],[")",17]],"d":"On Unix, creates the string `\"/\"`\n\nOn Windows, creates a string from a path root, validating its contents as\nUTF-16 on Windows.\n\n- Parameter root: The path root to be interpreted as\n  `CInterop.PlatformUnicodeEncoding`.\n\nOn Windows, if the contents of the path root isn't a well-formed Unicode\nstring, this initializer returns `nil`."},{"p":["String","init(validating:)"],"f":[["init",10],["?(",17],["validating",1],[" ",17],["component",2],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],[")",17]],"s":[["init",10],["?(",17],["validating",1],[": ",17],["FilePath",18],[".",17],["Component",18],[")",17]],"d":"Creates a string from a path component, validating its contents as UTF-8\non Unix and UTF-16 on Windows.\n\n- Parameter component: The path component to be interpreted as\n  `CInterop.PlatformUnicodeEncoding`.\n\nIf the contents of the path component isn't a well-formed Unicode string,\nthis initializer returns `nil`."},{"p":["String","init(validating:)"],"f":[["init",10],["?(",17],["validating",1],[" ",17],["path",2],[": ",17],["FilePath",18,19],[")",17]],"s":[["init",10],["?(",17],["validating",1],[": ",17],["FilePath",18],[")",17]],"d":"Creates a string from a file path, validating its contents as UTF-8 on\nUnix and UTF-16 on Windows.\n\n- Parameter path: The file path to be interpreted as\n  `CInterop.PlatformUnicodeEncoding`.\n\nIf the contents of the file path isn't a well-formed Unicode string,\nthis initializer returns `nil`."},{"p":["String","init(platformString:)"],"f":[["init",10],["(",17],["platformString",1],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">)",17]],"s":[["init",10],["(",17],["platformString",1],[": ",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">)",17]],"d":"Creates a string by interpreting the null-terminated platform string as\nUTF-8 on Unix and UTF-16 on Windows.\n\n- Parameter platformString: The null-terminated platform string to be\n interpreted as `CInterop.PlatformUnicodeEncoding`.\n\nIf the content of the platform string isn't well-formed Unicode,\nthis initializer replaces invalid bytes with U+FFFD.\nThis means that, depending on the semantics of the specific platform,\nconversion to a string and back might result in a value that's different\nfrom the original platform string."},{"p":["String","init(validatingUTF8:)"],"f":[["init",10],["?(",17],["validatingUTF8",1],[" ",17],["path",2],[": ",17],["FilePath",18,19],[")",17]],"s":[["init",10],["?(",17],["validatingUTF8",1],[": ",17],["FilePath",18],[")",17]],"a":{"a":{"d":true,"r":"init(validating:)"}}},{"p":["String","init(validatingPlatformString:)"],"f":[["init",10],["?(",17],["validatingPlatformString",1],[" ",17],["platformString",2],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">)",17]],"s":[["init",10],["?(",17],["validatingPlatformString",1],[": ",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">)",17]],"d":"Creates a string by interpreting the null-terminated platform string as\nUTF-8 on Unix and UTF-16 on Windows.\n\n- Parameter platformString: The null-terminated platform string to be\n interpreted as `CInterop.PlatformUnicodeEncoding`.\n\nIf the contents of the platform string isn't well-formed Unicode,\nthis initializer returns `nil`."},{"p":["String","init(decoding:)"],"f":[["init",10],["(",17],["decoding",1],[" ",17],["root",2],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],[")",17]],"s":[["init",10],["(",17],["decoding",1],[": ",17],["FilePath",18],[".",17],["Root",18],[")",17]],"d":"On Unix, creates the string `\"/\"`\n\nOn Windows, creates a string by interpreting the path root's content as\nUTF-16.\n\n- Parameter root: The path root to be interpreted as\n  `CInterop.PlatformUnicodeEncoding`.\n\nIf the content of the path root isn't a well-formed Unicode string,\nthis initializer replaces invalid bytes with U+FFFD.\nThis means that on Windows,\nconversion to a string and back to a path root\nmight result in a value that's different from the original path root."},{"p":["String","init(decoding:)"],"f":[["init",10],["(",17],["decoding",1],[" ",17],["component",2],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],[")",17]],"s":[["init",10],["(",17],["decoding",1],[": ",17],["FilePath",18],[".",17],["Component",18],[")",17]],"d":"Creates a string by interpreting the path component's content as UTF-8 on\nUnix and UTF-16 on Windows.\n\n- Parameter component: The path component to be interpreted as\n  `CInterop.PlatformUnicodeEncoding`.\n\nIf the content of the path component isn't a well-formed Unicode string,\nthis initializer replaces invalid bytes with U+FFFD.\nThis means that, depending on the semantics of the specific file system,\nconversion to a string and back to a path component\nmight result in a value that's different from the original path component."},{"p":["String","init(decoding:)"],"f":[["init",10],["(",17],["decoding",1],[" ",17],["path",2],[": ",17],["FilePath",18,19],[")",17]],"s":[["init",10],["(",17],["decoding",1],[": ",17],["FilePath",18],[")",17]],"d":"Creates a string by interpreting the file path's content as UTF-8 on Unix\nand UTF-16 on Windows.\n\n- Parameter path: The file path to be interpreted as\n`CInterop.PlatformUnicodeEncoding`.\n\nIf the content of the file path isn't a well-formed Unicode string,\nthis initializer replaces invalid bytes with U+FFFD.\nThis means that, depending on the semantics of the specific file system,\nconversion to a string and back to a path\nmight result in a value that's different from the original path."},{"p":["String","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["path",2],[": ",17],["FilePath",18,19],[")",17]],"s":[["init",10],["(",17],["FilePath",18],[")",17]],"a":{"a":{"d":true,"r":"init(decoding:)"}}},{"p":["String","withPlatformString(_:)"],"f":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">(",17],["_",1],[" ",17],["body",2],[": (",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"s":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">((",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"g":[["Result",0,0]],"d":"Calls the given closure with a pointer to the contents of the string,\nrepresented as a null-terminated platform string.\n\n- Parameter body: A closure with a pointer parameter\n  that points to a null-terminated platform string.\n  If `body` has a return value,\n  that value is also used as the return value for this method.\n- Returns: The return value, if any, of the `body` closure parameter.\n\nThe pointer passed as an argument to `body` is valid\nonly during the execution of this method.\nDon't try to store the pointer for later use."},{"p":["CInterop"],"f":[["enum",12],[" ",17],["CInterop",7]],"s":[["enum",12],[" ",17],["CInterop",7]]},{"p":["FilePath","Component","Kind"],"f":[["enum",12],[" ",17],["Kind",7]],"s":[["enum",12],[" ",17],["Kind",7]],"d":"Whether a component is a regular file or directory name, or a special\ndirectory `.` or `..`"},{"p":["FileDescriptor"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["FileDescriptor",7]],"s":[["struct",12],[" ",17],["FileDescriptor",7]],"d":"An abstract handle to an input or output data resource,\nsuch as a file or a socket.\n\nYou are responsible for managing the lifetime and validity\nof `FileDescriptor` values,\nin the same way as you manage a raw C file handle."},{"p":["FileDescriptor","AccessMode"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["AccessMode",7]],"s":[["struct",12],[" ",17],["AccessMode",7]],"d":"The desired read and write access for a newly opened file."},{"p":["FileDescriptor","SeekOrigin"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["SeekOrigin",7]],"s":[["struct",12],[" ",17],["SeekOrigin",7]],"d":"Options for specifying what a file descriptor's offset is relative to."},{"p":["FileDescriptor","OpenOptions"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["OpenOptions",7]],"s":[["struct",12],[" ",17],["OpenOptions",7]],"d":"Options that specify behavior for a newly-opened file."},{"p":["FilePermissions"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["FilePermissions",7]],"s":[["struct",12],[" ",17],["FilePermissions",7]],"d":"The access permissions for a file.\n\nThe following example\ncreates an instance of the `FilePermissions` structure\nfrom a raw octal literal and compares it\nto a file permission created using named options:\n\n    let perms = FilePermissions(rawValue: 0o644)\n    perms == [.ownerReadWrite, .groupRead, .otherRead] // true"},{"p":["Errno"],"f":[["@frozen",3],[" ",17],["struct",12],[" ",17],["Errno",7]],"s":[["struct",12],[" ",17],["Errno",7]],"d":"An error number used by system calls to communicate what kind of error\noccurred."},{"p":["FilePath"],"f":[["struct",12],[" ",17],["FilePath",7]],"s":[["struct",12],[" ",17],["FilePath",7]]},{"p":["FilePath","ComponentView"],"f":[["struct",12],[" ",17],["ComponentView",7]],"s":[["struct",12],[" ",17],["ComponentView",7]],"d":"A bidirectional, range replaceable collection of the non-root components\nthat make up a file path.\n\nComponentView provides access to standard `BidirectionalCollection`\nalgorithms for accessing components from the front or back, as well as\nstandard `RangeReplaceableCollection` algorithms for modifying the\nfile path using component or range of components granularity.\n\nExample:\n\n    var path: FilePath = \"/./home/./username/scripts/./tree\"\n    let scriptIdx = path.components.lastIndex(of: \"scripts\")!\n    path.components.insert(\"bin\", at: scriptIdx)\n    // path is \"/./home/./username/bin/scripts/./tree\"\n\n    path.components.removeAll { $0.kind == .currentDirectory }\n    // path is \"/home/username/bin/scripts/tree\"\n"},{"p":["FilePath","ComponentView","Index"],"f":[["struct",12],[" ",17],["Index",7]],"s":[["struct",12],[" ",17],["Index",7]]},{"p":["FilePath","Root"],"f":[["struct",12],[" ",17],["Root",7]],"s":[["struct",12],[" ",17],["Root",7]],"d":"Represents a root of a file path.\n\nOn Unix, a root is simply the directory separator `/`.\n\nOn Windows, a root contains the entire path prefix up to and including\nthe final separator.\n\nExamples:\n* Unix:\n  * `/`\n* Windows:\n  * `C:\\`\n  * `C:`\n  * `\\`\n  * `\\\\server\\share\\`\n  * `\\\\?\\UNC\\server\\share\\`\n  * `\\\\?\\Volume{12345678-abcd-1111-2222-123445789abc}\\`"},{"p":["FilePath","Component"],"f":[["struct",12],[" ",17],["Component",7]],"s":[["struct",12],[" ",17],["Component",7]],"d":"Represents an individual, non-root component of a file path.\n\nComponents can be one of the special directory components (`.` or `..`)\nor a file or directory name. Components are never empty and never\ncontain the directory separator.\n\nExample:\n\n    var path: FilePath = \"/tmp\"\n    let file: FilePath.Component = \"foo.txt\"\n    file.kind == .regular           // true\n    file.extension                  // \"txt\"\n    path.append(file)               // path is \"/tmp/foo.txt\"\n"},{"p":["FilePath","Component","Kind","parentDirectory"],"f":[["case",12],[" ",17],["parentDirectory",7]],"s":[["case",12],[" ",17],["parentDirectory",7]],"d":"The special directory `..`, representing the parent directory."},{"p":["FilePath","Component","Kind","currentDirectory"],"f":[["case",12],[" ",17],["currentDirectory",7]],"s":[["case",12],[" ",17],["currentDirectory",7]],"d":"The special directory `.`, representing the current directory."},{"p":["FilePath","Component","Kind","regular"],"f":[["case",12],[" ",17],["regular",7]],"s":[["case",12],[" ",17],["regular",7]],"d":"A file or directory name"},{"p":["FileDescriptor","AccessMode","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18,457],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18],[")",17]],"d":"Creates a strongly-typed access mode from a raw C access mode."},{"p":["FileDescriptor","SeekOrigin","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18,457],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18],[")",17]],"d":"Create a strongly-typed seek origin from a raw C value."},{"p":["FileDescriptor","OpenOptions","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18,457],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18],[")",17]],"d":"Create a strongly-typed options value from raw C options."},{"p":["FileDescriptor","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18,457],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18],[")",17]],"d":"Creates a strongly-typed file handle from a raw C file handle."},{"p":["FilePermissions","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInterop",18,11],[".",17],["Mode",18,268],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInterop",18],[".",17],["Mode",18],[")",17]],"d":"Create a strongly-typed file permission from a raw C value."},{"p":["Errno","init(rawValue:)"],"f":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18,457],[")",17]],"s":[["init",10],["(",17],["rawValue",1],[": ",17],["CInt",18],[")",17]],"d":"Creates a strongly typed error number from a raw C error number."},{"p":["FilePath","ComponentView","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,463],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["FilePath","ComponentView","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]]},{"p":["FilePath","init(stringLiteral:)"],"f":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18],[")",17]],"d":"Creates a file path from a string literal.\n\n- Parameter stringLiteral: A string literal\n  whose Unicode encoded contents to use as the contents of the path."},{"p":["FilePath","init(platformString:)"],"f":[["init",10],["(",17],["platformString",1],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">)",17]],"s":[["init",10],["(",17],["platformString",1],[": ",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">)",17]],"d":"Creates a file path by copying bytes from a null-terminated platform\nstring.\n\n- Parameter platformString: A pointer to a null-terminated platform\n  string."},{"p":["FilePath","Root","init(stringLiteral:)"],"f":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18],[")",17]],"d":"Create a file path root from a string literal.\n\nPrecondition: `stringLiteral` is non-empty and is a root."},{"p":["FilePath","Root","init(platformString:)"],"f":[["init",10],["?(",17],["platformString",1],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">)",17]],"s":[["init",10],["?(",17],["platformString",1],[": ",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">)",17]],"d":"Creates a file path root by copying bytes from a null-terminated platform\nstring.\n\nReturns `nil` if `platformString` is empty or is not a root.\n\n- Parameter platformString: A pointer to a null-terminated platform\n  string.\n"},{"p":["FilePath","Root","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,463],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["FilePath","Root","init(_:)"],"f":[["init",10],["?(",17],["_",1],[" ",17],["string",2],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["?(",17],["String",18],[")",17]],"d":"Create a file path root from a string.\n\nReturns `nil` if `string` is empty or is not a root."},{"p":["FilePath","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,463],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["FilePath","init(root:components:)"],"f":[["init",10],["(",17],["root",1],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],["?, ",17],["components",1],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],["...)",17]],"s":[["init",10],["(",17],["root",1],[": ",17],["FilePath",18],[".",17],["Root",18],["?, ",17],["components",1],[": ",17],["FilePath",18],[".",17],["Component",18],["...)",17]],"d":"Create a file path from a root and any number of components."},{"p":["FilePath","init(root:_:)"],"f":[["init",10],["(",17],["root",1],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],["?, ",17],["_",1],[" ",17],["components",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["SubSequence",18,271],[")",17]],"s":[["init",10],["(",17],["root",1],[": ",17],["FilePath",18],[".",17],["Root",18],["?, ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["SubSequence",18],[")",17]],"d":"Create a file path from an optional root and a slice of another path's\ncomponents."},{"p":["FilePath","init(root:_:)"],"f":[["init",10],["<",17],["C",0],[">(",17],["root",1],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],["?, ",17],["_",1],[" ",17],["components",2],[": ",17],["C",18],[") ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,352],[", ",17],["C",18],[".",17],["Element",18],[" == ",17],["FilePath",18,19],[".",17],["Component",18,23]],"s":[["init",10],["<",17],["C",0],[">(",17],["root",1],[": ",17],["FilePath",18],[".",17],["Root",18],["?, ",17],["C",18],[")",17]],"c":[["C",1,"Collection",352],["C.Element",2,"FilePath.Component",23]],"g":[["C",0,0]],"d":"Create a file path from a root and a collection of components."},{"p":["FilePath","init(cString:)"],"f":[["init",10],["(",17],["cString",1],[": ",17],["UnsafePointer",18,303],["<",17],["CChar",18,459],[">)",17]],"s":[["init",10],["(",17],["cString",1],[": ",17],["UnsafePointer",18],["<",17],["CChar",18],[">)",17]],"d":"For backwards compatibility only. This initializer is equivalent to\nthe preferred `FilePath(platformString:)`."},{"p":["FilePath","Component","init(stringLiteral:)"],"f":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["(",17],["stringLiteral",1],[": ",17],["String",18],[")",17]],"d":"Create a file path component from a string literal.\n\nPrecondition: `stringLiteral` is non-empty, is not a root,\nand has only one component in it."},{"p":["FilePath","Component","init(platformString:)"],"f":[["init",10],["?(",17],["platformString",1],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">)",17]],"s":[["init",10],["?(",17],["platformString",1],[": ",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">)",17]],"d":"Creates a file path component by copying bytes from a null-terminated\nplatform string.\n\nReturns `nil` if `platformString` is empty, is a root, or has more than\none component in it.\n\n- Parameter platformString: A pointer to a null-terminated platform\n  string.\n"},{"p":["FilePath","Component","init(from:)"],"f":[["init",10],["(",17],["from",1],[" ",17],["decoder",2],[": ",17],["Decoder",18,463],[") ",17],["throws",12]],"s":[["init",10],["(",17],["from",1],[": ",17],["Decoder",18],[") ",17],["throws",12]]},{"p":["FilePath","Component","init(_:)"],"f":[["init",10],["?(",17],["_",1],[" ",17],["string",2],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["?(",17],["String",18],[")",17]],"d":"Create a file path component from a string.\n\nReturns `nil` if `string` is empty, a root, or has more than one component\nin it."},{"p":["FilePath","init()"],"f":[["init",10],["()",17]],"s":[["init",10],["()",17]],"d":"Creates an empty, null-terminated path."},{"p":["FilePath","init(_:)"],"f":[["init",10],["(",17],["_",1],[" ",17],["string",2],[": ",17],["String",18,306],[")",17]],"s":[["init",10],["(",17],["String",18],[")",17]],"d":"Creates a file path from a string.\n\n- Parameter string: A string\n  whose Unicode encoded contents to use as the contents of the path."},{"p":["FilePath","ComponentView","subscript(_:)"],"f":[["subscript",10],["(",17],["position",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[") -> ",17],["FilePath",18,19],[".",17],["Component",18,23],[" { ",17],["get",12],[" }",17]],"s":[["subscript",10],["(",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[") -> ",17],["FilePath",18],[".",17],["Component",18]]},{"p":["FileDescriptor","AccessMode","readOnly"],"f":[["static",12],[" ",17],["var",12],[" ",17],["readOnly",7],[": ",17],["FileDescriptor",18,13],[".",17],["AccessMode",18,14],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["readOnly",7],[": ",17],["FileDescriptor",18],[".",17],["AccessMode",18]],"d":"Opens the file for reading only.\n\nThe corresponding C constant is `O_RDONLY`."},{"p":["FileDescriptor","AccessMode","readWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["readWrite",7],[": ",17],["FileDescriptor",18,13],[".",17],["AccessMode",18,14],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["readWrite",7],[": ",17],["FileDescriptor",18],[".",17],["AccessMode",18]],"d":"Opens the file for reading and writing.\n\nThe corresponding C constant is `O_RDWR`."},{"p":["FileDescriptor","AccessMode","writeOnly"],"f":[["static",12],[" ",17],["var",12],[" ",17],["writeOnly",7],[": ",17],["FileDescriptor",18,13],[".",17],["AccessMode",18,14],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["writeOnly",7],[": ",17],["FileDescriptor",18],[".",17],["AccessMode",18]],"d":"Opens the file for writing only.\n\nThe corresponding C constant is `O_WRONLY`."},{"p":["FileDescriptor","SeekOrigin","end"],"f":[["static",12],[" ",17],["var",12],[" ",17],["end",7],[": ",17],["FileDescriptor",18,13],[".",17],["SeekOrigin",18,15],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["end",7],[": ",17],["FileDescriptor",18],[".",17],["SeekOrigin",18]],"d":"Indicates that the offset should be set\nto the size of the file plus the specified number of bytes.\n\nThe corresponding C constant is `SEEK_END`."},{"p":["FileDescriptor","SeekOrigin","start"],"f":[["static",12],[" ",17],["var",12],[" ",17],["start",7],[": ",17],["FileDescriptor",18,13],[".",17],["SeekOrigin",18,15],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["start",7],[": ",17],["FileDescriptor",18],[".",17],["SeekOrigin",18]],"d":"Indicates that the offset should be set to the specified value.\n\nThe corresponding C constant is `SEEK_SET`."},{"p":["FileDescriptor","SeekOrigin","current"],"f":[["static",12],[" ",17],["var",12],[" ",17],["current",7],[": ",17],["FileDescriptor",18,13],[".",17],["SeekOrigin",18,15],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["current",7],[": ",17],["FileDescriptor",18],[".",17],["SeekOrigin",18]],"d":"Indicates that the offset should be set\nto the specified number of bytes after the current location.\n\nThe corresponding C constant is `SEEK_CUR`."},{"p":["FileDescriptor","OpenOptions","closeOnExec"],"f":[["static",12],[" ",17],["var",12],[" ",17],["closeOnExec",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["closeOnExec",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that executing a program closes the file.\n\nNormally, file descriptors remain open\nacross calls to the `exec(2)` family of functions.\nIf you specify this option,\nthe file descriptor is closed when replacing this process\nwith another process.\n\nThe state of the file\ndescriptor flags can be inspected using `F_GETFD`,\nas described in the `fcntl(2)` man page.\n\nThe corresponding C constant is `O_CLOEXEC`."},{"p":["FileDescriptor","OpenOptions","nonBlocking"],"f":[["static",12],[" ",17],["var",12],[" ",17],["nonBlocking",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["nonBlocking",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file doesn't\nwait for the file or device to become available.\n\nIf this option is specified,\nthe system doesn't wait for the device or file\nto be ready or available.\nIf the\n<doc:System/FileDescriptor/open(_:_:options:permissions:)-10dcs>\ncall would result in the process being blocked for some reason,\nthat method returns immediately.\nThis flag also has the effect of making all\nsubsequent input and output operations on the open file nonblocking.\n\nThe corresponding C constant is `O_NONBLOCK`."},{"p":["FileDescriptor","OpenOptions","exclusiveCreate"],"f":[["static",12],[" ",17],["var",12],[" ",17],["exclusiveCreate",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["exclusiveCreate",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file creates the file,\nexpecting that it doesn't exist.\n\nIf this option and ``create`` are both specified and the file exists,\n<doc:System/FileDescriptor/open(_:_:options:permissions:)-10dcs>\nreturns an error instead of creating the file.\nYou can use this, for example,\nto implement a simple exclusive-access locking mechanism.\n\nIf this option and ``create`` are both specified\nand the last component of the file's path is a symbolic link,\n<doc:System/FileDescriptor/open(_:_:options:permissions:)-10dcs>\nfails even if the symbolic link points to a nonexistent name.\n\nThe corresponding C constant is `O_EXCL`."},{"p":["FileDescriptor","OpenOptions","append"],"f":[["static",12],[" ",17],["var",12],[" ",17],["append",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["append",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that each write operation appends to the file.\n\nIf this option is specified,\neach time you write to the file,\nthe new data is written at the end of the file,\nafter all existing file data.\n\nThe corresponding C constant is `O_APPEND`."},{"p":["FileDescriptor","OpenOptions","create"],"f":[["static",12],[" ",17],["var",12],[" ",17],["create",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["create",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file creates the file if it doesn't exist.\n\nThe corresponding C constant is `O_CREAT`."},{"p":["FileDescriptor","OpenOptions","noFollow"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noFollow",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noFollow",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file doesn't follow symlinks.\n\nIf you specify this option\nand the file path you pass to\n<doc:System/FileDescriptor/open(_:_:options:permissions:)-10dcs>\nis a symbolic link,\nthen that open operation fails.\n\nThe corresponding C constant is `O_NOFOLLOW`."},{"p":["FileDescriptor","OpenOptions","truncate"],"f":[["static",12],[" ",17],["var",12],[" ",17],["truncate",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["truncate",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file truncates the file if it exists.\n\nIf this option is specified and the file exists,\nthe file is truncated to zero bytes\nbefore any other operations are performed.\n\nThe corresponding C constant is `O_TRUNC`."},{"p":["FileDescriptor","OpenOptions","directory"],"f":[["static",12],[" ",17],["var",12],[" ",17],["directory",7],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["directory",7],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18]],"d":"Indicates that opening the file only succeeds if the file is a directory.\n\nIf you specify this option and the file path you pass to\n<doc:System/FileDescriptor/open(_:_:options:permissions:)-10dcs>\nis a not a directory, then that open operation fails.\n\nThe corresponding C constant is `O_DIRECTORY`."},{"p":["FileDescriptor","standardError"],"f":[["static",12],[" ",17],["var",12],[" ",17],["standardError",7],[": ",17],["FileDescriptor",18,13],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["standardError",7],[": ",17],["FileDescriptor",18]],"d":"The standard error file descriptor, with a numeric value of 2."},{"p":["FileDescriptor","standardInput"],"f":[["static",12],[" ",17],["var",12],[" ",17],["standardInput",7],[": ",17],["FileDescriptor",18,13],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["standardInput",7],[": ",17],["FileDescriptor",18]],"d":"The standard input file descriptor, with a numeric value of 0."},{"p":["FileDescriptor","standardOutput"],"f":[["static",12],[" ",17],["var",12],[" ",17],["standardOutput",7],[": ",17],["FileDescriptor",18,13],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["standardOutput",7],[": ",17],["FileDescriptor",18]],"d":"The standard output file descriptor, with a numeric value of 1."},{"p":["FilePermissions","groupWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has write-only permission."},{"p":["FilePermissions","otherWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have write-only permission."},{"p":["FilePermissions","ownerWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has write-only permission."},{"p":["FilePermissions","setGroupID"],"f":[["static",12],[" ",17],["var",12],[" ",17],["setGroupID",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["setGroupID",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the file is executed as the group.\n\nFor more information, see the `setgid(2)` man page."},{"p":["FilePermissions","groupExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has execute-only permission."},{"p":["FilePermissions","otherExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have execute-only permission."},{"p":["FilePermissions","ownerExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has execute-only permission."},{"p":["FilePermissions","groupReadWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupReadWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupReadWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has read-write permission."},{"p":["FilePermissions","otherReadWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherReadWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherReadWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have read-write permission."},{"p":["FilePermissions","ownerReadWrite"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadWrite",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadWrite",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has read-write permission."},{"p":["FilePermissions","groupReadExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupReadExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupReadExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has read-execute permission."},{"p":["FilePermissions","otherReadExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherReadExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherReadExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have read-execute permission."},{"p":["FilePermissions","ownerReadExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has read-execute permission."},{"p":["FilePermissions","groupWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has write-execute permission."},{"p":["FilePermissions","otherWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have write-execute permission."},{"p":["FilePermissions","ownerWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has write-execute permission."},{"p":["FilePermissions","groupReadWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupReadWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupReadWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has read, write, and execute permission."},{"p":["FilePermissions","otherReadWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherReadWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherReadWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have read, write, and execute permission."},{"p":["FilePermissions","ownerReadWriteExecute"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadWriteExecute",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerReadWriteExecute",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has read, write, and execute permission."},{"p":["FilePermissions","saveText"],"f":[["static",12],[" ",17],["var",12],[" ",17],["saveText",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["saveText",7],[": ",17],["FilePermissions",18]],"d":"Indicates that executable's text segment\nshould be kept in swap space even after it exits.\n\nFor more information, see the `chmod(2)` man page's\ndiscussion of `S_ISVTX` (the sticky bit)."},{"p":["FilePermissions","groupRead"],"f":[["static",12],[" ",17],["var",12],[" ",17],["groupRead",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["groupRead",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the group has read-only permission."},{"p":["FilePermissions","otherRead"],"f":[["static",12],[" ",17],["var",12],[" ",17],["otherRead",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["otherRead",7],[": ",17],["FilePermissions",18]],"d":"Indicates that other users have read-only permission."},{"p":["FilePermissions","ownerRead"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ownerRead",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ownerRead",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the owner has read-only permission."},{"p":["FilePermissions","setUserID"],"f":[["static",12],[" ",17],["var",12],[" ",17],["setUserID",7],[": ",17],["FilePermissions",18,17],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["setUserID",7],[": ",17],["FilePermissions",18]],"d":"Indicates that the file is executed as the owner.\n\nFor more information, see the `setuid(2)` man page."},{"p":["Errno","readOnlyFileSystem"],"f":[["static",12],[" ",17],["var",12],[" ",17],["readOnlyFileSystem",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["readOnlyFileSystem",7],[": ",17],["Errno",18]],"d":"Read-only file system.\n\nYou attempted to modify a file or directory\non a file system that was read-only at the time.\n\nThe corresponding C error is `EROFS`."},{"p":["Errno","tooManyOpenFilesInSystem"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyOpenFilesInSystem",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyOpenFilesInSystem",7],[": ",17],["Errno",18]],"d":"The system has too many open files.\n\nThe maximum number of file descriptors\nallowable on the system has been reached;\nrequests to open a file can't be satisfied\nuntil you close at least one file descriptor.\n\nThe corresponding C error is `ENFILE`."},{"p":["Errno","badAddress"],"f":[["static",12],[" ",17],["var",12],[" ",17],["badAddress",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["badAddress",7],[": ",17],["Errno",18]],"d":"Bad address.\n\nAn address passed as an argument to a system call was invalid.\n\nThe corresponding C error is `EFAULT`."},{"p":["Errno","badMessage"],"f":[["static",12],[" ",17],["var",12],[" ",17],["badMessage",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["badMessage",7],[": ",17],["Errno",18]],"d":"Bad message.\n\nThe message to be received is inappropriate\nfor the attempted operation.\n\nThe corresponding C error is `EBADMSG`."},{"p":["Errno","brokenPipe"],"f":[["static",12],[" ",17],["var",12],[" ",17],["brokenPipe",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["brokenPipe",7],[": ",17],["Errno",18]],"d":"Broken pipe.\n\nYou attempted to write to a pipe, socket, or FIFO\nthat doesn't have a process reading its data.\n\nThe corresponding C error is `EPIPE`."},{"p":["Errno","fileExists"],"f":[["static",12],[" ",17],["var",12],[" ",17],["fileExists",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["fileExists",7],[": ",17],["Errno",18]],"d":"File exists.\n\nAn existing file was mentioned in an inappropriate context;\nfor example, as the new link name in a link function.\n\nThe corresponding C error is `EEXIST`."},{"p":["Errno","hostIsDown"],"f":[["static",12],[" ",17],["var",12],[" ",17],["hostIsDown",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["hostIsDown",7],[": ",17],["Errno",18]],"d":"The host is down.\n\nA socket operation failed because the destination host was down.\n\nThe corresponding C error is `EHOSTDOWN`."},{"p":["Errno","noFunction"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noFunction",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noFunction",7],[": ",17],["Errno",18]],"d":"Function not implemented.\n\nYou attempted a system call that isn't available on this system.\n\nThe corresponding C error is `ENOSYS`."},{"p":["Errno","outOfRange"],"f":[["static",12],[" ",17],["var",12],[" ",17],["outOfRange",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["outOfRange",7],[": ",17],["Errno",18]],"d":"Numerical result out of range.\n\nA numerical result of the function\nwas too large to fit in the available space;\nfor example, because it exceeded a floating point number's\nlevel of precision.\n\nThe corresponding C error is `ERANGE`."},{"p":["Errno","wouldBlock"],"f":[["static",12],[" ",17],["var",12],[" ",17],["wouldBlock",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["wouldBlock",7],[": ",17],["Errno",18]],"d":"Operation would block.\n\nThe corresponding C error is `EWOULDBLOCK`."},{"p":["Errno","illegalSeek"],"f":[["static",12],[" ",17],["var",12],[" ",17],["illegalSeek",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["illegalSeek",7],[": ",17],["Errno",18]],"d":"Illegal seek.\n\nAn `lseek(2)` function was issued on a socket, pipe or FIFO.\n\nThe corresponding C error is `ESPIPE`."},{"p":["Errno","interrupted"],"f":[["static",12],[" ",17],["var",12],[" ",17],["interrupted",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["interrupted",7],[": ",17],["Errno",18]],"d":"Interrupted function call.\n\nThe process caught an asynchronous signal (such as `SIGINT` or `SIGQUIT`)\nduring the execution of an interruptible function.\nIf the signal handler performs a normal return,\nthe caller of the interrupted function call receives this error.\n\nThe corresponding C error is `EINTR`."},{"p":["Errno","isDirectory"],"f":[["static",12],[" ",17],["var",12],[" ",17],["isDirectory",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["isDirectory",7],[": ",17],["Errno",18]],"d":"Is a directory.\n\nYou attempted to open a directory with write mode specified.\nDirectories can be opened only in read mode.\n\nThe corresponding C error is `EISDIR`."},{"p":["Errno","networkDown"],"f":[["static",12],[" ",17],["var",12],[" ",17],["networkDown",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["networkDown",7],[": ",17],["Errno",18]],"d":"Network is down.\n\nA socket operation encountered a dead network.\n\nThe corresponding C error is `ENETDOWN`."},{"p":["Errno","outOfDomain"],"f":[["static",12],[" ",17],["var",12],[" ",17],["outOfDomain",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["outOfDomain",7],[": ",17],["Errno",18]],"d":"Numerical argument out of domain.\n\nA numerical input argument was outside the defined domain of the\nmathematical function.\n\nThe corresponding C error is `EDOM`."},{"p":["Errno","addressInUse"],"f":[["static",12],[" ",17],["var",12],[" ",17],["addressInUse",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["addressInUse",7],[": ",17],["Errno",18]],"d":"Address already in use.\n\nOnly one use of each address is normally permitted.\n\nThe corresponding C error is `EADDRINUSE`."},{"p":["Errno","fileTooLarge"],"f":[["static",12],[" ",17],["var",12],[" ",17],["fileTooLarge",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["fileTooLarge",7],[": ",17],["Errno",18]],"d":"The file is too large.\n\nThe file exceeds the maximum size allowed by the file system.\nFor example, the maximum size on UFS is about 2.1 gigabytes,\nand about 9,223 petabytes on HFS-Plus and Apple File System.\n\nThe corresponding C error is `EFBIG`."},{"p":["Errno","improperLink"],"f":[["static",12],[" ",17],["var",12],[" ",17],["improperLink",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["improperLink",7],[": ",17],["Errno",18]],"d":"Improper link.\n\nYou attempted to create a hard link to a file on another file system.\n\nThe corresponding C error is `EXDEV`."},{"p":["Errno","networkReset"],"f":[["static",12],[" ",17],["var",12],[" ",17],["networkReset",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["networkReset",7],[": ",17],["Errno",18]],"d":"Network dropped connection on reset.\n\nThe host you were connected to crashed and restarted.\n\nThe corresponding C error is `ENETRESET`."},{"p":["Errno","notDirectory"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notDirectory",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notDirectory",7],[": ",17],["Errno",18]],"d":"Not a directory.\n\nA component of the specified pathname exists,\nbut it wasn't a directory,\nwhen a directory was expected.\n\nThe corresponding C error is `ENOTDIR`."},{"p":["Errno","notPermitted"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notPermitted",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notPermitted",7],[": ",17],["Errno",18]],"d":"Operation not permitted.\n\nAn attempt was made to perform an operation\nlimited to processes with appropriate privileges\nor to the owner of a file or other resources.\n\nThe corresponding C error is `EPERM`."},{"p":["Errno","notSupported"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notSupported",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notSupported",7],[": ",17],["Errno",18]],"d":"Not supported.\n\nThe attempted operation isn't supported\nfor the type of object referenced.\n\nThe corresponding C error is `ENOTSUP`."},{"p":["Errno","resourceBusy"],"f":[["static",12],[" ",17],["var",12],[" ",17],["resourceBusy",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["resourceBusy",7],[": ",17],["Errno",18]],"d":"Resource busy.\n\nYou attempted to use a system resource which was in use at the time,\nin a manner that would have conflicted with the request.\n\nThe corresponding C error is `EBUSY`."},{"p":["Errno","textFileBusy"],"f":[["static",12],[" ",17],["var",12],[" ",17],["textFileBusy",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["textFileBusy",7],[": ",17],["Errno",18]],"d":"Text file busy.\n\nThe new process was a pure procedure (shared text) file,\nwhich was already open for writing by another process,\nor while the pure procedure file was being executed,\nan open call requested write access.\n\nThe corresponding C error is `ETXTBSY`."},{"p":["Errno","tooManyLinks"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyLinks",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyLinks",7],[": ",17],["Errno",18]],"d":"Too many links.\n\nThe maximum number of hard links to a single file (32767)\nhas been exceeded.\n\nThe corresponding C error is `EMLINK`."},{"p":["Errno","tooManyUsers"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyUsers",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyUsers",7],[": ",17],["Errno",18]],"d":"Too many users.\n\nThe quota system ran out of table entries.\n\nThe corresponding C error is `EUSERS`."},{"p":["Errno","noBufferSpace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noBufferSpace",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noBufferSpace",7],[": ",17],["Errno",18]],"d":"No buffer space available.\n\nAn operation on a socket or pipe wasn't performed\nbecause the system lacked sufficient buffer space\nor because a queue was full.\n\nThe corresponding C error is `ENOBUFS`."},{"p":["Errno","noRouteToHost"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noRouteToHost",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noRouteToHost",7],[": ",17],["Errno",18]],"d":"No route to host.\n\nA socket operation failed because the destination host was unreachable.\n\nThe corresponding C error is `EHOSTUNREACH`."},{"p":["Errno","noSuchProcess"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noSuchProcess",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noSuchProcess",7],[": ",17],["Errno",18]],"d":"No such process.\n\nThere isn't a process that corresponds to the specified process ID.\n\nThe corresponding C error is `ESRCH`."},{"p":["Errno","nowInProgress"],"f":[["static",12],[" ",17],["var",12],[" ",17],["nowInProgress",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["nowInProgress",7],[": ",17],["Errno",18]],"d":"Operation now in progress.\n\nYou attempted an operation that takes a long time to complete,\nsuch as `connect(2)` or `connectx(2)`,\non a nonblocking object.\nSee also `fcntl(2)`.\n\nThe corresponding C error is `EINPROGRESS`."},{"p":["Errno","protocolError"],"f":[["static",12],[" ",17],["var",12],[" ",17],["protocolError",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["protocolError",7],[": ",17],["Errno",18]],"d":"Protocol error.\n\nSome protocol error occurred.\nThis error is device-specific,\nbut generally isn't related to a hardware failure.\n\nThe corresponding C error is `EPROTO`."},{"p":["Errno","argListTooLong"],"f":[["static",12],[" ",17],["var",12],[" ",17],["argListTooLong",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["argListTooLong",7],[": ",17],["Errno",18]],"d":"The argument list is too long.\n\nThe number of bytes\nused for the argument and environment list of the new process\nexceeded the limit `NCARGS`, as defined in `<sys/param.h>`.\n\nThe corresponding C error is `E2BIG`."},{"p":["Errno","messageTooLong"],"f":[["static",12],[" ",17],["var",12],[" ",17],["messageTooLong",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["messageTooLong",7],[": ",17],["Errno",18]],"d":"Message too long.\n\nA message sent on a socket was larger than\nthe internal message buffer or some other network limit.\n\nThe corresponding C error is `EMSGSIZE`."},{"p":["Errno","noChildProcess"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noChildProcess",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noChildProcess",7],[": ",17],["Errno",18]],"d":"No child processes.\n\nA `wait(2)` or `waitpid(2)` function was executed\nby a process that dosn't have any existing child processes\nor whose child processes are all already being waited for.\n\nThe corresponding C error is `ECHILD`."},{"p":["Errno","notBlockDevice"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notBlockDevice",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notBlockDevice",7],[": ",17],["Errno",18]],"d":"Not a block device.\n\nYou attempted a block device operation on a nonblock device or file.\n\nThe corresponding C error is `ENOTBLK`."},{"p":["Errno","notRecoverable"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notRecoverable",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notRecoverable",7],[": ",17],["Errno",18]],"d":"State not recoverable.\n\nThe corresponding C error is `ENOTRECOVERABLE`."},{"p":["Errno","socketShutdown"],"f":[["static",12],[" ",17],["var",12],[" ",17],["socketShutdown",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["socketShutdown",7],[": ",17],["Errno",18]],"d":"Can't send after socket shutdown.\n\nA request to send data wasn't permitted\nbecause the socket had already been shut down\nwith a previous `shutdown(2)` call.\n\nThe corresponding C error is `ESHUTDOWN`."},{"p":["Errno","addressRequired"],"f":[["static",12],[" ",17],["var",12],[" ",17],["addressRequired",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["addressRequired",7],[": ",17],["Errno",18]],"d":"Destination address required.\n\nA required address was omitted from a socket operation.\n\nThe corresponding C error is `EDESTADDRREQ`."},{"p":["Errno","connectionAbort"],"f":[["static",12],[" ",17],["var",12],[" ",17],["connectionAbort",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["connectionAbort",7],[": ",17],["Errno",18]],"d":"Software caused a connection abort.\n\nA connection abort was caused internal to your host machine.\n\nThe corresponding C error is `ECONNABORTED`."},{"p":["Errno","connectionReset"],"f":[["static",12],[" ",17],["var",12],[" ",17],["connectionReset",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["connectionReset",7],[": ",17],["Errno",18]],"d":"Connection reset by peer.\n\nA connection was forcibly closed by a peer.\nThis normally results from a loss of the connection\non the remote socket due to a timeout or a reboot.\n\nThe corresponding C error is `ECONNRESET`."},{"p":["Errno","execFormatError"],"f":[["static",12],[" ",17],["var",12],[" ",17],["execFormatError",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["execFormatError",7],[": ",17],["Errno",18]],"d":"Executable format error.\n\nA request was made to execute a file that,\nalthough it has the appropriate permissions,\nisn't in the format required for an executable file.\n\nThe corresponding C error is `ENOEXEC`."},{"p":["Errno","fileNameTooLong"],"f":[["static",12],[" ",17],["var",12],[" ",17],["fileNameTooLong",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["fileNameTooLong",7],[": ",17],["Errno",18]],"d":"The file name is too long.\n\nA component of a pathname exceeded 255 (`MAXNAMELEN`) characters,\nor an entire pathname exceeded 1023 (`MAXPATHLEN-1`) characters.\n\nThe corresponding C error is `ENAMETOOLONG`."},{"p":["Errno","invalidArgument"],"f":[["static",12],[" ",17],["var",12],[" ",17],["invalidArgument",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["invalidArgument",7],[": ",17],["Errno",18]],"d":"Invalid argument.\n\nOne or more of the specified arguments wasn't valid;\nfor example, specifying an undefined signal to a signal or kill function.\n\nThe corresponding C error is `EINVAL`."},{"p":["Errno","alreadyInProcess"],"f":[["static",12],[" ",17],["var",12],[" ",17],["alreadyInProcess",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["alreadyInProcess",7],[": ",17],["Errno",18]],"d":"Operation already in progress.\n\nYou attempted an operation on a nonblocking object\nthat already had an operation in progress.\n\nThe corresponding C error is `EALREADY`."},{"p":["Errno","permissionDenied"],"f":[["static",12],[" ",17],["var",12],[" ",17],["permissionDenied",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["permissionDenied",7],[": ",17],["Errno",18]],"d":"Permission denied.\n\nYou attempted to access a file\nin a way that's forbidden by the file's access permissions.\n\nThe corresponding C error is `EACCES`."},{"p":["Errno","tooManyOpenFiles"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyOpenFiles",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyOpenFiles",7],[": ",17],["Errno",18]],"d":"This process has too many open files.\n\nTo check the current limit,\ncall the `getdtablesize` function.\n\nThe corresponding C error is `EMFILE`."},{"p":["Errno","badFileDescriptor"],"f":[["static",12],[" ",17],["var",12],[" ",17],["badFileDescriptor",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["badFileDescriptor",7],[": ",17],["Errno",18]],"d":"Bad file descriptor.\n\nA file descriptor argument was out of range,\nreferred to no open file,\nor a read (write) request was made to a file\nthat was only open for writing (reading).\n\nThe corresponding C error is `EBADF`."},{"p":["Errno","connectionRefused"],"f":[["static",12],[" ",17],["var",12],[" ",17],["connectionRefused",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["connectionRefused",7],[": ",17],["Errno",18]],"d":"Connection refused.\n\nNo connection could be made\nbecause the target machine actively refused it.\nThis usually results from trying to connect to a service\nthat's inactive on the foreign host.\n\nThe corresponding C error is `ECONNREFUSED`."},{"p":["Errno","directoryNotEmpty"],"f":[["static",12],[" ",17],["var",12],[" ",17],["directoryNotEmpty",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["directoryNotEmpty",7],[": ",17],["Errno",18]],"d":"Directory not empty.\n\nA directory with entries other than `.` and `..`\nwas supplied to a `remove(2)` directory or `rename(2)` call.\n\nThe corresponding C error is `ENOTEMPTY`."},{"p":["Errno","diskQuotaExceeded"],"f":[["static",12],[" ",17],["var",12],[" ",17],["diskQuotaExceeded",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["diskQuotaExceeded",7],[": ",17],["Errno",18]],"d":"Disk quota exceeded.\n\nA write to an ordinary file,\nthe creation of a directory or symbolic link,\nor the creation of a directory entry failed\nbecause the user's quota of disk blocks was exhausted,\nor the allocation of an inode for a newly created file failed\nbecause the user's quota of inodes was exhausted.\n\nThe corresponding C error is `EDQUOT`."},{"p":["Errno","identifierRemoved"],"f":[["static",12],[" ",17],["var",12],[" ",17],["identifierRemoved",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["identifierRemoved",7],[": ",17],["Errno",18]],"d":"Identifier removed.\n\nAn IPC identifier was removed while the current process was waiting on it.\n\nThe corresponding C error is `EIDRM`."},{"p":["Errno","noStreamResources"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noStreamResources",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noStreamResources",7],[": ",17],["Errno",18]],"d":"Reserved.\n\nThis error is reserved for future use.\n\nThe corresponding C error is `ENOSR`."},{"p":["Errno","previousOwnerDied"],"f":[["static",12],[" ",17],["var",12],[" ",17],["previousOwnerDied",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["previousOwnerDied",7],[": ",17],["Errno",18]],"d":"Previous pthread mutex owner died.\n\nThe corresponding C error is `EOWNERDEAD`."},{"p":["Errno","socketIsConnected"],"f":[["static",12],[" ",17],["var",12],[" ",17],["socketIsConnected",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["socketIsConnected",7],[": ",17],["Errno",18]],"d":"Socket is already connected.\n\nA `connect(2)` or `connectx(2)` request was made\non an already connected socket,\nor a `sendto(2)` or `sendmsg(2)` request was made\non a connected socket specified a destination when already connected.\n\nThe corresponding C error is `EISCONN`."},{"p":["Errno","tooManyReferences"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyReferences",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyReferences",7],[": ",17],["Errno",18]],"d":"Too many references: can't splice.\n\nThe corresponding C error is `ETOOMANYREFS`."},{"p":["Errno","networkUnreachable"],"f":[["static",12],[" ",17],["var",12],[" ",17],["networkUnreachable",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["networkUnreachable",7],[": ",17],["Errno",18]],"d":"Network is unreachable.\n\nA socket operation was attempted to an unreachable network.\n\nThe corresponding C error is `ENETUNREACH`."},{"p":["Errno","socketNotConnected"],"f":[["static",12],[" ",17],["var",12],[" ",17],["socketNotConnected",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["socketNotConnected",7],[": ",17],["Errno",18]],"d":"Socket is not connected.\n\nA request to send or receive data wasn't permitted\nbecause the socket wasn't connected and,\nwhen sending on a datagram socket,\nno address was supplied.\n\nThe corresponding C error is `ENOTCONN`."},{"p":["Errno","staleNFSFileHandle"],"f":[["static",12],[" ",17],["var",12],[" ",17],["staleNFSFileHandle",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["staleNFSFileHandle",7],[": ",17],["Errno",18]],"d":"Stale NFS file handle.\n\nYou attempted access an open file on an NFS filesystem,\nwhich is now unavailable as referenced by the given file descriptor.\nThis may indicate that the file was deleted on the NFS server\nor that some other catastrophic event occurred.\n\nThe corresponding C error is `ESTALE`."},{"p":["Errno","addressNotAvailable"],"f":[["static",12],[" ",17],["var",12],[" ",17],["addressNotAvailable",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["addressNotAvailable",7],[": ",17],["Errno",18]],"d":"Can't assign the requested address.\n\nThis error normally results from\nan attempt to create a socket with an address that isn't on this machine.\n\nThe corresponding C error is `EADDRNOTAVAIL`."},{"p":["Errno","illegalByteSequence"],"f":[["static",12],[" ",17],["var",12],[" ",17],["illegalByteSequence",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["illegalByteSequence",7],[": ",17],["Errno",18]],"d":"Illegal byte sequence.\n\nWhile decoding a multibyte character,\nthe function encountered an invalid or incomplete sequence of bytes,\nor the given wide character is invalid.\n\nThe corresponding C error is `EILSEQ`."},{"p":["Errno","tooManyRemoteLevels"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManyRemoteLevels",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManyRemoteLevels",7],[": ",17],["Errno",18]],"d":"Too many levels of remote in path.\n\nThe corresponding C error is `EREMOTE`."},{"p":["Errno","notSupportedOnSocket"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notSupportedOnSocket",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notSupportedOnSocket",7],[": ",17],["Errno",18]],"d":"Operation not supported on socket.\n\nThe attempted operation isn't supported for the type of socket referenced;\nfor example, trying to accept a connection on a datagram socket.\n\nThe corresponding C error is `EOPNOTSUPP`."},{"p":["Errno","protocolNotAvailable"],"f":[["static",12],[" ",17],["var",12],[" ",17],["protocolNotAvailable",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["protocolNotAvailable",7],[": ",17],["Errno",18]],"d":"Protocol not available.\n\nA bad option or level was specified\nin a `getsockopt(2)` or `setsockopt(2)` call.\n\nThe corresponding C error is `ENOPROTOOPT`."},{"p":["Errno","protocolNotSupported"],"f":[["static",12],[" ",17],["var",12],[" ",17],["protocolNotSupported",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["protocolNotSupported",7],[": ",17],["Errno",18]],"d":"Protocol not supported.\n\nThe protocol hasn't been configured into the system,\nor no implementation for it exists.\n\nThe corresponding C error is `EPROTONOSUPPORT`."},{"p":["Errno","noSuchAddressOrDevice"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noSuchAddressOrDevice",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noSuchAddressOrDevice",7],[": ",17],["Errno",18]],"d":"No such device or address.\n\nInput or output on a special file referred to a device that didn't exist,\nor made a request beyond the limits of the device.\nThis error may also occur when, for example,\na tape drive isn't online or when there isn't a disk pack loaded on a drive.\n\nThe corresponding C error is `ENXIO`."},{"p":["Errno","noSuchFileOrDirectory"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noSuchFileOrDirectory",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noSuchFileOrDirectory",7],[": ",17],["Errno",18]],"d":"No such file or directory.\n\nA component of a specified pathname didn't exist,\nor the pathname was an empty string.\n\nThe corresponding C error is `ENOENT`."},{"p":["Errno","socketTypeNotSupported"],"f":[["static",12],[" ",17],["var",12],[" ",17],["socketTypeNotSupported",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["socketTypeNotSupported",7],[": ",17],["Errno",18]],"d":"Socket type not supported.\n\nSupport for the socket type hasn't been configured into the system\nor no implementation for it exists.\n\nThe corresponding C error is `ESOCKTNOSUPPORT`."},{"p":["Errno","addressFamilyNotSupported"],"f":[["static",12],[" ",17],["var",12],[" ",17],["addressFamilyNotSupported",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["addressFamilyNotSupported",7],[": ",17],["Errno",18]],"d":"The address family isn't supported by the protocol family.\n\nAn address incompatible with the requested protocol was used.\nFor example, you shouldn't necessarily expect\nto be able to use name server addresses with ARPA Internet protocols.\n\nThe corresponding C error is `EAFNOSUPPORT`."},{"p":["Errno","tooManySymbolicLinkLevels"],"f":[["static",12],[" ",17],["var",12],[" ",17],["tooManySymbolicLinkLevels",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["tooManySymbolicLinkLevels",7],[": ",17],["Errno",18]],"d":"Too many levels of symbolic links.\n\nA pathname lookup involved more than eight symbolic links.\n\nThe corresponding C error is `ELOOP`."},{"p":["Errno","protocolFamilyNotSupported"],"f":[["static",12],[" ",17],["var",12],[" ",17],["protocolFamilyNotSupported",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["protocolFamilyNotSupported",7],[": ",17],["Errno",18]],"d":"Protocol family not supported.\n\nThe protocol family hasn't been configured into the system\nor no implementation for it exists.\n\nThe corresponding C error is `EPFNOSUPPORT`."},{"p":["Errno","protocolWrongTypeForSocket"],"f":[["static",12],[" ",17],["var",12],[" ",17],["protocolWrongTypeForSocket",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["protocolWrongTypeForSocket",7],[": ",17],["Errno",18]],"d":"Protocol wrong for socket type.\n\nA protocol was specified that doesn't support\nthe semantics of the socket type requested.\nFor example,\nyou can't use the ARPA Internet UDP protocol with type `SOCK_STREAM`.\n\nThe corresponding C error is `EPROTOTYPE`."},{"p":["Errno","inappropriateIOCTLForDevice"],"f":[["static",12],[" ",17],["var",12],[" ",17],["inappropriateIOCTLForDevice",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["inappropriateIOCTLForDevice",7],[": ",17],["Errno",18]],"d":"Inappropriate control function.\n\nYou attempted a control function\nthat can't be performed on the specified file or device.\nFor information about control functions, see `ioctl(2)`.\n\nThe corresponding C error is `ENOTTY`."},{"p":["Errno","operationNotSupportedByDevice"],"f":[["static",12],[" ",17],["var",12],[" ",17],["operationNotSupportedByDevice",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["operationNotSupportedByDevice",7],[": ",17],["Errno",18]],"d":"Operation not supported by device.\n\nYou attempted to apply an inappropriate function to a device;\nfor example, trying to read a write-only device such as a printer.\n\nThe corresponding C error is `ENODEV`."},{"p":["Errno","resourceTemporarilyUnavailable"],"f":[["static",12],[" ",17],["var",12],[" ",17],["resourceTemporarilyUnavailable",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["resourceTemporarilyUnavailable",7],[": ",17],["Errno",18]],"d":"Resource temporarily unavailable.\n\nThis is a temporary condition;\nlater calls to the same routine may complete normally.\nMake the same function call again later.\n\nThe corresponding C error is `EAGAIN`."},{"p":["Errno","noData"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noData",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noData",7],[": ",17],["Errno",18]],"d":"No message available.\n\nNo message was available to be received by the requested operation.\n\nThe corresponding C error is `ENODATA`."},{"p":["Errno","noLink"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noLink",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noLink",7],[": ",17],["Errno",18]],"d":"Reserved.\n\nThis error is reserved for future use.\n\nThe corresponding C error is `ENOLINK`."},{"p":["Errno","ioError"],"f":[["static",12],[" ",17],["var",12],[" ",17],["ioError",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["ioError",7],[": ",17],["Errno",18]],"d":"Input/output error.\n\nSome physical input or output error occurred.\nThis error isn't reported until\nyou attempt a subsequent operation on the same file descriptor,\nand the error may be lost (overwritten) by subsequent errors.\n\nThe corresponding C error is `EIO`."},{"p":["Errno","noLocks"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noLocks",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noLocks",7],[": ",17],["Errno",18]],"d":"No locks available.\n\nYou have reached the system-imposed limit\non the number of simultaneous files.\n\nThe corresponding C error is `ENOLCK`."},{"p":["Errno","noSpace"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noSpace",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noSpace",7],[": ",17],["Errno",18]],"d":"Device out of space.\n\nA write to an ordinary file,\nthe creation of a directory or symbolic link,\nor the creation of a directory entry failed\nbecause there aren't any available disk blocks on the file system,\nor the allocation of an inode for a newly created file failed\nbecause there aren't any inodes available on the file system.\n\nThe corresponding C error is `ENOSPC`."},{"p":["Errno","timeout"],"f":[["static",12],[" ",17],["var",12],[" ",17],["timeout",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["timeout",7],[": ",17],["Errno",18]],"d":"Reserved.\n\nThis error is reserved for future use.\n\nThe corresponding C error is `ETIME`."},{"p":["Errno","canceled"],"f":[["static",12],[" ",17],["var",12],[" ",17],["canceled",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["canceled",7],[": ",17],["Errno",18]],"d":"Operation canceled.\n\nThe scheduled operation was canceled.\n\nThe corresponding C error is `ECANCELED`."},{"p":["Errno","deadlock"],"f":[["static",12],[" ",17],["var",12],[" ",17],["deadlock",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["deadlock",7],[": ",17],["Errno",18]],"d":"Resource deadlock avoided.\n\nYou attempted to lock a system resource\nthat would have resulted in a deadlock.\n\nThe corresponding C error is `EDEADLK`."},{"p":["Errno","multiHop"],"f":[["static",12],[" ",17],["var",12],[" ",17],["multiHop",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["multiHop",7],[": ",17],["Errno",18]],"d":"Reserved.\n\nThis error is reserved for future use.\n\nThe corresponding C error is `EMULTIHOP`."},{"p":["Errno","noMemory"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noMemory",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noMemory",7],[": ",17],["Errno",18]],"d":"Can't allocate memory.\n\nThe new process image required more memory\nthan was allowed by the hardware\nor by system-imposed memory management constraints.\nA lack of swap space is normally temporary;\nhowever, a lack of core is not.\nYou can increase soft limits up to their corresponding hard limits.\n\nThe corresponding C error is `ENOMEM`."},{"p":["Errno","overflow"],"f":[["static",12],[" ",17],["var",12],[" ",17],["overflow",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["overflow",7],[": ",17],["Errno",18]],"d":"Value too large to be stored in data type.\n\nA numerical result of the function\nis too large to be stored in the space that the caller provided.\n\nThe corresponding C error is `EOVERFLOW`."},{"p":["Errno","timedOut"],"f":[["static",12],[" ",17],["var",12],[" ",17],["timedOut",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["timedOut",7],[": ",17],["Errno",18]],"d":"Operation timed out.\n\nA `connect(2)`, `connectx(2)` or `send(2)` request failed\nbecause the connected party didn't properly respond\nwithin the required period of time.\nThe timeout period is dependent on the communication protocol.\n\nThe corresponding C error is `ETIMEDOUT`."},{"p":["Errno","noMessage"],"f":[["static",12],[" ",17],["var",12],[" ",17],["noMessage",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["noMessage",7],[": ",17],["Errno",18]],"d":"No message of desired type.\n\nAn IPC message queue doesn't contain a message of the desired type,\nor a message catalog doesn't contain the requested message.\n\nThe corresponding C error is `ENOMSG`."},{"p":["Errno","notSocket"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notSocket",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notSocket",7],[": ",17],["Errno",18]],"d":"A socket operation was performed on something that isn't a socket.\n\nThe corresponding C error is `ENOTSOCK`."},{"p":["Errno","notStream"],"f":[["static",12],[" ",17],["var",12],[" ",17],["notStream",7],[": ",17],["Errno",18,18],[" { ",17],["get",12],[" }",17]],"s":[["static",12],[" ",17],["var",12],[" ",17],["notStream",7],[": ",17],["Errno",18]],"d":"Reserved.\n\nThis error is reserved for future use.\n\nThe corresponding C error is `ENOSTR`."},{"p":["FileDescriptor","AccessMode","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the access mode."},{"p":["FileDescriptor","AccessMode","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the access mode, suitable for debugging"},{"p":["FileDescriptor","AccessMode","rawValue"],"f":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18,457]],"s":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18]],"d":"The raw C access mode."},{"p":["FileDescriptor","SeekOrigin","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the seek origin."},{"p":["FileDescriptor","SeekOrigin","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the seek origin, suitable for debugging."},{"p":["FileDescriptor","SeekOrigin","rawValue"],"f":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18,457]],"s":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18]],"d":"The raw C value."},{"p":["FileDescriptor","OpenOptions","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the open options."},{"p":["FileDescriptor","OpenOptions","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the open options, suitable for debugging."},{"p":["FileDescriptor","OpenOptions","rawValue"],"f":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18,457]],"s":[["var",12],[" ",17],["rawValue",7],[": ",17],["CInt",18]],"d":"The raw C options."},{"p":["FileDescriptor","rawValue"],"f":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInt",18,457]],"s":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInt",18]],"d":"The raw C file handle."},{"p":["FilePermissions","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the file permissions."},{"p":["FilePermissions","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the file permissions, suitable for debugging."},{"p":["FilePermissions","rawValue"],"f":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInterop",18,11],[".",17],["Mode",18,268]],"s":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInterop",18],[".",17],["Mode",18]],"d":"The raw C file permissions."},{"p":["Errno","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the most recent error\nreturned by a system call.\n\nThe corresponding C function is `strerror(3)`."},{"p":["Errno","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation,\nsuitable for debugging,\nof the most recent error returned by a system call.\n\nThe corresponding C function is `strerror(3)`."},{"p":["Errno","rawValue"],"f":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInt",18,457]],"s":[["let",12],[" ",17],["rawValue",7],[": ",17],["CInt",18]],"d":"The raw C error number."},{"p":["FilePath","components"],"f":[["var",12],[" ",17],["components",7],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[" { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["var",12],[" ",17],["components",7],[": ",17],["FilePath",18],[".",17],["ComponentView",18]],"d":"View the non-root components that make up this path."},{"p":["FilePath","isAbsolute"],"f":[["var",12],[" ",17],["isAbsolute",7],[": ",17],["Bool",18,348],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isAbsolute",7],[": ",17],["Bool",18]],"d":"Returns true if this path uniquely identifies the location of\na file without reference to an additional starting location.\n\nOn Unix platforms, absolute paths begin with a `/`. `isAbsolute` is\nequivalent to `root != nil`.\n\nOn Windows, absolute paths are fully qualified paths. `isAbsolute` is\n_not_ equivalent to `root != nil` for traditional DOS paths\n(e.g. `C:foo` and `\\bar` have roots but are not absolute). UNC paths\nand device paths are always absolute. Traditional DOS paths are\nabsolute only if they begin with a volume or drive followed by\na `:` and a separator.\n\nNOTE: This does not perform shell expansion or substitute\nenvironment variables; paths beginning with `~` are considered relative.\n\nExamples:\n* Unix:\n  * `/usr/local/bin`\n  * `/tmp/foo.txt`\n  * `/`\n* Windows:\n  * `C:\\Users\\`\n  * `\\\\?\\UNC\\server\\share\\bar.exe`\n  * `\\\\server\\share\\bar.exe`"},{"p":["FilePath","isRelative"],"f":[["var",12],[" ",17],["isRelative",7],[": ",17],["Bool",18,348],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isRelative",7],[": ",17],["Bool",18]],"d":"Returns true if this path is not absolute (see `isAbsolute`).\n\nExamples:\n* Unix:\n  * `~/bar`\n  * `tmp/foo.txt`\n* Windows:\n  * `bar\\baz`\n  * `C:Users\\`\n  * `\\Users`"},{"p":["FilePath","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the file path.\n\nIf the content of the path isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`"},{"p":["FilePath","ComponentView","startIndex"],"f":[["var",12],[" ",17],["startIndex",7],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["startIndex",7],[": ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18]]},{"p":["FilePath","ComponentView","endIndex"],"f":[["var",12],[" ",17],["endIndex",7],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["endIndex",7],[": ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18]]},{"p":["FilePath","lastComponent"],"f":[["var",12],[" ",17],["lastComponent",7],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["lastComponent",7],[": ",17],["FilePath",18],[".",17],["Component",18],["?",17]],"d":"Returns the final component of the path.\nReturns `nil` if the path is empty or only contains a root.\n\nNote: Even if the final component is a special directory\n(`.` or `..`), it will still be returned. See `lexicallyNormalize()`.\n\nExamples:\n* Unix:\n  * `/usr/local/bin/ => bin`\n  * `/tmp/foo.txt    => foo.txt`\n  * `/tmp/foo.txt/.. => ..`\n  * `/tmp/foo.txt/.  => .`\n  * `/               => nil`\n* Windows:\n  * `C:\\Users\\                    => Users`\n  * `C:Users\\                     => Users`\n  * `C:\\                          => nil`\n  * `\\Users\\                      => Users`\n  * `\\\\?\\UNC\\server\\share\\bar.exe => bar.exe`\n  * `\\\\server\\share               => nil`\n  * `\\\\?\\UNC\\server\\share\\        => nil`\n"},{"p":["FilePath","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the file path, suitable for debugging.\n\nIf the content of the path isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`"},{"p":["FilePath","isLexicallyNormal"],"f":[["var",12],[" ",17],["isLexicallyNormal",7],[": ",17],["Bool",18,348],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isLexicallyNormal",7],[": ",17],["Bool",18]],"d":"Whether the path is in lexical-normal form, that is `.` and `..`\ncomponents have been collapsed lexically (i.e. without following\nsymlinks).\n\nExamples:\n* `\"/usr/local/bin\".isLexicallyNormal == true`\n* `\"../local/bin\".isLexicallyNormal   == true`\n* `\"local/bin/..\".isLexicallyNormal   == false`"},{"p":["FilePath","Root","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the path root.\n\nIf the content of the path root isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`."},{"p":["FilePath","Root","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the path root, suitable for debugging.\n\nIf the content of the path root isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`."},{"p":["FilePath","Root","string"],"f":[["var",12],[" ",17],["string",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["string",7],[": ",17],["String",18]],"d":"On Unix, this returns `\"/\"`.\n\nOn Windows, interprets the root's content as UTF-16 on Windows.\n\nThis property is equivalent to calling `String(decoding: root)`."},{"p":["FilePath","root"],"f":[["var",12],[" ",17],["root",7],[": ",17],["FilePath",18,19],[".",17],["Root",18,22],["? { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["var",12],[" ",17],["root",7],[": ",17],["FilePath",18],[".",17],["Root",18],["?",17]],"d":"Returns the root of a path if there is one, otherwise `nil`.\n\nOn Unix, this will return the leading `/` if the path is absolute\nand `nil` if the path is relative.\n\nOn Windows, for traditional DOS paths, this will return\nthe path prefix up to and including a root directory or\na supplied drive or volume. Otherwise, if the path is relative to\nboth the current directory and current drive, returns `nil`.\n\nOn Windows, for UNC or device paths, this will return the path prefix\nup to and including the host and share for UNC paths or the volume for\ndevice paths followed by any subsequent separator.\n\nExamples:\n* Unix:\n  * `/foo/bar => /`\n  * `foo/bar  => nil`\n* Windows:\n  * `C:\\foo\\bar                => C:\\`\n  * `C:foo\\bar                 => C:`\n  * `\\foo\\bar                  => \\ `\n  * `foo\\bar                   => nil`\n  * `\\\\server\\share\\file       => \\\\server\\share\\`\n  * `\\\\?\\UNC\\server\\share\\file => \\\\?\\UNC\\server\\share\\`\n  * `\\\\.\\device\\folder         => \\\\.\\device\\`\n\nSetting the root to `nil` will remove the root and setting a new\nroot will replace the root.\n\nExample:\n\n    var path: FilePath = \"/foo/bar\"\n    path.root = nil // path is \"foo/bar\"\n    path.root = \"/\" // path is \"/foo/bar\"\n\nExample (Windows):\n\n    var path: FilePath = #\"\\foo\\bar\"#\n    path.root = nil         // path is #\"foo\\bar\"#\n    path.root = \"C:\"        // path is #\"C:foo\\bar\"#\n    path.root = #\"C:\\\"#     // path is #\"C:\\foo\\bar\"#\n"},{"p":["FilePath","stem"],"f":[["var",12],[" ",17],["stem",7],[": ",17],["String",18,306],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["stem",7],[": ",17],["String",18],["?",17]],"d":"The non-extension portion of the file or directory last component.\n\nReturns `nil` if `lastComponent` is `nil`\n\n  * `/tmp/foo.txt                 => foo`\n  * `/Appliations/Foo.app/        => Foo`\n  * `/Appliations/Foo.app/bar.txt => bar`\n  * `/tmp/.hidden                 => .hidden`\n  * `/tmp/..                      => ..`\n  * `/                            => nil`"},{"p":["FilePath","length"],"f":[["var",12],[" ",17],["length",7],[": ",17],["Int",18,351],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["length",7],[": ",17],["Int",18]],"d":"The length of the file path, excluding the null terminator."},{"p":["FilePath","string"],"f":[["var",12],[" ",17],["string",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["string",7],[": ",17],["String",18]],"d":"Creates a string by interpreting the path’s content as UTF-8 on Unix\nand UTF-16 on Windows.\n\nThis property is equivalent to calling `String(decoding: path)`"},{"p":["FilePath","isEmpty"],"f":[["var",12],[" ",17],["isEmpty",7],[": ",17],["Bool",18,348],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["isEmpty",7],[": ",17],["Bool",18]],"d":"Whether this path is empty"},{"p":["FilePath","Component","description"],"f":[["var",12],[" ",17],["description",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["description",7],[": ",17],["String",18]],"d":"A textual representation of the path component.\n\nIf the content of the path component isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`."},{"p":["FilePath","Component","debugDescription"],"f":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["debugDescription",7],[": ",17],["String",18]],"d":"A textual representation of the path component, suitable for debugging.\n\nIf the content of the path component isn't a well-formed Unicode string,\nthis replaces invalid bytes with U+FFFD. See `String.init(decoding:)`."},{"p":["FilePath","Component","kind"],"f":[["var",12],[" ",17],["kind",7],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],[".",17],["Kind",18,12],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["kind",7],[": ",17],["FilePath",18],[".",17],["Component",18],[".",17],["Kind",18]],"d":"The kind of this component"},{"p":["FilePath","Component","stem"],"f":[["var",12],[" ",17],["stem",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["stem",7],[": ",17],["String",18]],"d":"The non-extension portion of this file or directory  component.\n\nExamples:\n  * `foo.txt => foo`\n  * `foo.tar.gz => foo.tar`\n  * `Foo.app => Foo`\n  * `.hidden => .hidden`\n  * `..      => ..`\n"},{"p":["FilePath","Component","string"],"f":[["var",12],[" ",17],["string",7],[": ",17],["String",18,306],[" { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["string",7],[": ",17],["String",18]],"d":"Creates a string by interpreting the component’s content as UTF-8 on Unix\nand UTF-16 on Windows.\n\nThis property is equivalent to calling `String(decoding: component)`."},{"p":["FilePath","Component","extension"],"f":[["var",12],[" ",17],["`extension`",7],[": ",17],["String",18,306],["? { ",17],["get",12],[" }",17]],"s":[["var",12],[" ",17],["`extension`",7],[": ",17],["String",18],["?",17]],"d":"The extension of this file or directory component.\n\nIf `self` does not contain a `.` anywhere, or only\nat the start, returns `nil`. Otherwise, returns everything after the dot.\n\nExamples:\n  * `foo.txt    => txt`\n  * `foo.tar.gz => gz`\n  * `Foo.app    => app`\n  * `.hidden    => nil`\n  * `..         => nil`\n"},{"p":["FilePath","extension"],"f":[["var",12],[" ",17],["`extension`",7],[": ",17],["String",18,306],["? { ",17],["get",12],[" ",17],["set",12],[" }",17]],"s":[["var",12],[" ",17],["`extension`",7],[": ",17],["String",18],["?",17]],"d":"The extension of the file or directory last component.\n\nIf `lastComponent` is `nil` or one of the special path components\n`.` or `..`, `get` returns `nil` and `set` does nothing.\n\nIf `lastComponent` does not contain a `.` anywhere, or only\nat the start, `get` returns `nil` and `set` will append a\n`.` and `newValue` to `lastComponent`.\n\nOtherwise `get` returns everything after the last `.` and `set` will\nreplace the extension.\n\nExamples:\n  * `/tmp/foo.txt                  => txt`\n  * `/Applications/Foo.app/        => app`\n  * `/Applications/Foo.app/bar.txt => txt`\n  * `/tmp/foo.tar.gz               => gz`\n  * `/tmp/.hidden                  => nil`\n  * `/tmp/.hidden.                 => \"\"`\n  * `/tmp/..                       => nil`\n\nExample:\n\n    var path = \"/tmp/file\"\n    path.extension = \"txt\" // path is \"/tmp/file.txt\"\n    path.extension = \"o\"   // path is \"/tmp/file.o\"\n    path.extension = nil    // path is \"/tmp/file\"\n    path.extension = \"\"     // path is \"/tmp/file.\"\n"},{"p":["FileDescriptor","open(_:_:options:permissions:retryOnInterrupt:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["open",7],["(",17],["_",1],[" ",17],["path",2],[": ",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">, ",17],["_",1],[" ",17],["mode",2],[": ",17],["FileDescriptor",18,13],[".",17],["AccessMode",18,14],[", ",17],["options",1],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" = FileDescriptor.OpenOptions(), ",17],["permissions",1],[": ",17],["FilePermissions",18,17],["? = nil, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["FileDescriptor",18,13]],"s":[["static",12],[" ",17],["func",12],[" ",17],["open",7],["(",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">, ",17],["FileDescriptor",18],[".",17],["AccessMode",18],[", ",17],["options",1],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18],[", ",17],["permissions",1],[": ",17],["FilePermissions",18],["?, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["FileDescriptor",18]],"d":"Opens or creates a file for reading or writing.\n\n- Parameters:\n  - path: The location of the file to open.\n  - mode: The read and write access to use.\n  - options: The behavior for opening the file.\n  - permissions: The file permissions to use for created files.\n  - retryOnInterrupt: Whether to retry the open operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: A file descriptor for the open file\n\nThe corresponding C function is `open`."},{"p":["FileDescriptor","open(_:_:options:permissions:retryOnInterrupt:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["open",7],["(",17],["_",1],[" ",17],["path",2],[": ",17],["FilePath",18,19],[", ",17],["_",1],[" ",17],["mode",2],[": ",17],["FileDescriptor",18,13],[".",17],["AccessMode",18,14],[", ",17],["options",1],[": ",17],["FileDescriptor",18,13],[".",17],["OpenOptions",18,16],[" = FileDescriptor.OpenOptions(), ",17],["permissions",1],[": ",17],["FilePermissions",18,17],["? = nil, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["FileDescriptor",18,13]],"s":[["static",12],[" ",17],["func",12],[" ",17],["open",7],["(",17],["FilePath",18],[", ",17],["FileDescriptor",18],[".",17],["AccessMode",18],[", ",17],["options",1],[": ",17],["FileDescriptor",18],[".",17],["OpenOptions",18],[", ",17],["permissions",1],[": ",17],["FilePermissions",18],["?, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["FileDescriptor",18]],"d":"Opens or creates a file for reading or writing.\n\n- Parameters:\n  - path: The location of the file to open.\n  - mode: The read and write access to use.\n  - options: The behavior for opening the file.\n  - permissions: The file permissions to use for created files.\n  - retryOnInterrupt: Whether to retry the open operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: A file descriptor for the open file\n\nThe corresponding C function is `open`."},{"p":["FileDescriptor","pipe()"],"f":[["static",12],[" ",17],["func",12],[" ",17],["pipe",7],["() ",17],["throws",12],[" -> (readEnd",17],[": ",17],["FileDescriptor",18,13],[", writeEnd",17],[": ",17],["FileDescriptor",18,13],[")",17]],"s":[["static",12],[" ",17],["func",12],[" ",17],["pipe",7],["() ",17],["throws",12],[" -> (readEnd",17],[": ",17],["FileDescriptor",18],[", writeEnd",17],[": ",17],["FileDescriptor",18],[")",17]],"d":"Create a pipe, a unidirectional data channel which can be used for interprocess communication.\n\n- Returns: The pair of file descriptors.\n\nThe corresponding C function is `pipe`."},{"p":["FileDescriptor","closeAfter(_:)"],"f":[["func",12],[" ",17],["closeAfter",7],["<",17],["R",0],[">(",17],["_",1],[" ",17],["body",2],[": () ",17],["throws",12],[" -> ",17],["R",18],[") ",17],["throws",12],[" -> ",17],["R",18]],"s":[["func",12],[" ",17],["closeAfter",7],["<",17],["R",0],[">(() ",17],["throws",12],[" -> ",17],["R",18],[") ",17],["throws",12],[" -> ",17],["R",18]],"g":[["R",0,0]],"d":"Runs a closure and then closes the file descriptor, even if an error occurs.\n\n- Parameter body: The closure to run.\n  If the closure throws an error,\n  this method closes the file descriptor before it rethrows that error.\n\n- Returns: The value returned by the closure.\n\nIf `body` throws an error\nor an error occurs while closing the file descriptor,\nthis method rethrows that error."},{"p":["FileDescriptor","read(fromAbsoluteOffset:into:retryOnInterrupt:)"],"f":[["func",12],[" ",17],["read",7],["(",17],["fromAbsoluteOffset",1],[" ",17],["offset",2],[": ",17],["Int64",18,461],[", ",17],["into",1],[" ",17],["buffer",2],[": ",17],["UnsafeMutableRawBufferPointer",18,431],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["Int",18,351]],"s":[["func",12],[" ",17],["read",7],["(",17],["fromAbsoluteOffset",1],[": ",17],["Int64",18],[", ",17],["into",1],[": ",17],["UnsafeMutableRawBufferPointer",18],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"d":"Reads bytes at the specified offset into a buffer.\n\n- Parameters:\n  - offset: The file offset where reading begins.\n  - buffer: The region of memory to read into.\n  - retryOnInterrupt: Whether to retry the read operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: The number of bytes that were read.\n\nThe <doc://com.apple.documentation/documentation/swift/unsafemutablerawbufferpointer/3019191-count> property of `buffer`\ndetermines the maximum number of bytes that are read into that buffer.\n\nUnlike <doc:System/FileDescriptor/read(into:retryOnInterrupt:)>,\nthis method leaves the file's existing offset unchanged.\n\nThe corresponding C function is `pread`."},{"p":["FileDescriptor","read(into:retryOnInterrupt:)"],"f":[["func",12],[" ",17],["read",7],["(",17],["into",1],[" ",17],["buffer",2],[": ",17],["UnsafeMutableRawBufferPointer",18,431],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["Int",18,351]],"s":[["func",12],[" ",17],["read",7],["(",17],["into",1],[": ",17],["UnsafeMutableRawBufferPointer",18],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"d":"Reads bytes at the current file offset into a buffer.\n\n- Parameters:\n  - buffer: The region of memory to read into.\n  - retryOnInterrupt: Whether to retry the read operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: The number of bytes that were read.\n\nThe <doc://com.apple.documentation/documentation/swift/unsafemutablerawbufferpointer/3019191-count> property of `buffer`\ndetermines the maximum number of bytes that are read into that buffer.\n\nAfter reading,\nthis method increments the file's offset by the number of bytes read.\nTo change the file's offset,\ncall the ``seek(offset:from:)`` method.\n\nThe corresponding C function is `read`."},{"p":["FileDescriptor","seek(offset:from:)"],"f":[["@discardableResult",3],[" ",17],["func",12],[" ",17],["seek",7],["(",17],["offset",1],[": ",17],["Int64",18,461],[", ",17],["from",1],[" ",17],["whence",2],[": ",17],["FileDescriptor",18,13],[".",17],["SeekOrigin",18,15],[") ",17],["throws",12],[" -> ",17],["Int64",18,461]],"s":[["func",12],[" ",17],["seek",7],["(",17],["offset",1],[": ",17],["Int64",18],[", ",17],["from",1],[": ",17],["FileDescriptor",18],[".",17],["SeekOrigin",18],[") ",17],["throws",12],[" -> ",17],["Int64",18]],"d":"Reposition the offset for the given file descriptor.\n\n- Parameters:\n  - offset: The new offset for the file descriptor.\n  - whence: The origin of the new offset.\n- Returns: The file's offset location,\n  in bytes from the beginning of the file.\n\nThe corresponding C function is `lseek`."},{"p":["FileDescriptor","close()"],"f":[["func",12],[" ",17],["close",7],["() ",17],["throws",12]],"s":[["func",12],[" ",17],["close",7],["() ",17],["throws",12]],"d":"Deletes a file descriptor.\n\nDeletes the file descriptor from the per-process object reference table.\nIf this is the last reference to the underlying object,\nthe object will be deactivated.\n\nThe corresponding C function is `close`."},{"p":["FileDescriptor","write(toAbsoluteOffset:_:retryOnInterrupt:)"],"f":[["func",12],[" ",17],["write",7],["(",17],["toAbsoluteOffset",1],[" ",17],["offset",2],[": ",17],["Int64",18,461],[", ",17],["_",1],[" ",17],["buffer",2],[": ",17],["UnsafeRawBufferPointer",18,338],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["Int",18,351]],"s":[["func",12],[" ",17],["write",7],["(",17],["toAbsoluteOffset",1],[": ",17],["Int64",18],[", ",17],["UnsafeRawBufferPointer",18],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"d":"Writes the contents of a buffer at the specified offset.\n\n- Parameters:\n  - offset: The file offset where writing begins.\n  - buffer: The region of memory that contains the data being written.\n  - retryOnInterrupt: Whether to retry the write operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: The number of bytes that were written.\n\nUnlike ``write(_:retryOnInterrupt:)``,\nthis method leaves the file's existing offset unchanged.\n\nThe corresponding C function is `pwrite`."},{"p":["FileDescriptor","write(_:retryOnInterrupt:)"],"f":[["func",12],[" ",17],["write",7],["(",17],["_",1],[" ",17],["buffer",2],[": ",17],["UnsafeRawBufferPointer",18,338],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["Int",18,351]],"s":[["func",12],[" ",17],["write",7],["(",17],["UnsafeRawBufferPointer",18],[", ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"d":"Writes the contents of a buffer at the current file offset.\n\n- Parameters:\n  - buffer: The region of memory that contains the data being written.\n  - retryOnInterrupt: Whether to retry the write operation\n    if it throws ``Errno/interrupted``.\n    The default is `true`.\n    Pass `false` to try only once and throw an error upon interruption.\n- Returns: The number of bytes that were written.\n\nAfter writing,\nthis method increments the file's offset by the number of bytes written.\nTo change the file's offset,\ncall the ``seek(offset:from:)`` method.\n\nThe corresponding C function is `write`."},{"p":["FileDescriptor","writeAll(toAbsoluteOffset:_:)"],"f":[["@discardableResult",3],[" ",17],["func",12],[" ",17],["writeAll",7],["<",17],["S",0],[">(",17],["toAbsoluteOffset",1],[" ",17],["offset",2],[": ",17],["Int64",18,461],[", ",17],["_",1],[" ",17],["sequence",2],[": ",17],["S",18],[") ",17],["throws",12],[" -> ",17],["Int",18,351],[" ",17],["where",12],[" ",17],["S",18],[" : ",17],["Sequence",18,307],[", ",17],["S",18],[".",17],["Element",18],[" == ",17],["UInt8",18,462]],"s":[["func",12],[" ",17],["writeAll",7],["<",17],["S",0],[">(",17],["toAbsoluteOffset",1],[": ",17],["Int64",18],[", ",17],["S",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"c":[["S",1,"Sequence",307],["S.Element",2,"UInt8",462]],"g":[["S",0,0]],"d":"Writes a sequence of bytes to the given offset.\n\n- Parameters:\n  - offset: The file offset where writing begins.\n  - sequence: The bytes to write.\n- Returns: The number of bytes written, equal to the number of elements in `sequence`.\n\nThis method either writes the entire contents of `sequence`,\nor throws an error if only part of the content was written.\nUnlike ``writeAll(_:)``,\nthis method preserves the file descriptor's existing offset.\n\nIf `sequence` doesn't implement\nthe <doc://com.apple.documentation/documentation/swift/sequence/3128824-withcontiguousstorageifavailable> method,\ntemporary space will be allocated as needed."},{"p":["FileDescriptor","writeAll(_:)"],"f":[["@discardableResult",3],[" ",17],["func",12],[" ",17],["writeAll",7],["<",17],["S",0],[">(",17],["_",1],[" ",17],["sequence",2],[": ",17],["S",18],[") ",17],["throws",12],[" -> ",17],["Int",18,351],[" ",17],["where",12],[" ",17],["S",18],[" : ",17],["Sequence",18,307],[", ",17],["S",18],[".",17],["Element",18],[" == ",17],["UInt8",18,462]],"s":[["func",12],[" ",17],["writeAll",7],["<",17],["S",0],[">(",17],["S",18],[") ",17],["throws",12],[" -> ",17],["Int",18]],"c":[["S",1,"Sequence",307],["S.Element",2,"UInt8",462]],"g":[["S",0,0]],"d":"Writes a sequence of bytes to the current offset\nand then updates the offset.\n\n- Parameter sequence: The bytes to write.\n- Returns: The number of bytes written, equal to the number of elements in `sequence`.\n\nThis method either writes the entire contents of `sequence`,\nor throws an error if only part of the content was written.\n\nWrites to the position associated with this file descriptor, and\nincrements that position by the number of bytes written.\nSee also ``seek(offset:from:)``.\n\nThis method either writes the entire contents of `sequence`,\nor throws an error if only part of the content was written.\n\nIf `sequence` doesn't implement\nthe <doc://com.apple.documentation/documentation/swift/sequence/3128824-withcontiguousstorageifavailable> method,\ntemporary space will be allocated as needed."},{"p":["FileDescriptor","duplicate(as:retryOnInterrupt:)"],"f":[["func",12],[" ",17],["duplicate",7],["(",17],["as",1],[" ",17],["target",2],[": ",17],["FileDescriptor",18,13],["? = nil, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18,348],[" = true) ",17],["throws",12],[" -> ",17],["FileDescriptor",18,13]],"s":[["func",12],[" ",17],["duplicate",7],["(",17],["as",1],[": ",17],["FileDescriptor",18],["?, ",17],["retryOnInterrupt",1],[": ",17],["Bool",18],[") ",17],["throws",12],[" -> ",17],["FileDescriptor",18]],"d":"Duplicate this file descriptor and return the newly created copy.\n\n- Parameters:\n  - `target`: The desired target file descriptor, or `nil`, in which case\n     the copy is assigned to the file descriptor with the lowest raw value\n     that is not currently in use by the process.\n  - retryOnInterrupt: Whether to retry the write operation\n     if it throws ``Errno/interrupted``. The default is `true`.\n     Pass `false` to try only once and throw an error upon interruption.\n- Returns: The new file descriptor.\n\nIf the `target` descriptor is already in use, then it is first\ndeallocated as if a close(2) call had been done first.\n\nFile descriptors are merely references to some underlying system resource.\nThe system does not distinguish between the original and the new file\ndescriptor in any way. For example, read, write and seek operations on\none of them also affect the logical file position in the other, and\nappend mode, non-blocking I/O and asynchronous I/O options are shared\nbetween the references. If a separate pointer into the file is desired,\na different object reference to the file must be obtained by issuing an\nadditional call to `open`.\n\nHowever, each file descriptor maintains its own close-on-exec flag.\n\n\nThe corresponding C functions are `dup` and `dup2`."},{"p":["FilePath","withCString(_:)"],"f":[["func",12],[" ",17],["withCString",7],["<",17],["Result",0],[">(",17],["_",1],[" ",17],["body",2],[": (",17],["UnsafePointer",18,303],["<",17],["CChar",18,459],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"s":[["func",12],[" ",17],["withCString",7],["<",17],["Result",0],[">((",17],["UnsafePointer",18],["<",17],["CChar",18],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"g":[["Result",0,0]],"d":"For backwards compatibility only. This function is equivalent to\nthe preferred `withPlatformString`."},{"p":["FilePath","removePrefix(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["removePrefix",7],["(",17],["_",1],[" ",17],["prefix",2],[": ",17],["FilePath",18,19],[") -> ",17],["Bool",18,348]],"s":[["func",12],[" ",17],["removePrefix",7],["(",17],["FilePath",18],[") -> ",17],["Bool",18]]},{"p":["FilePath","removingRoot()"],"f":[["func",12],[" ",17],["removingRoot",7],["() -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["removingRoot",7],["() -> ",17],["FilePath",18]],"d":"Creates a new path containing just the components, i.e. everything\nafter `root`.\n\nReturns self if `root == nil`.\n\nExamples:\n* Unix:\n  * `/foo/bar => foo/bar`\n  * `foo/bar  => foo/bar`\n  * `/        => \"\"`\n* Windows:\n  * `C:\\foo\\bar                  => foo\\bar`\n  * `foo\\bar                     => foo\\bar`\n  * `\\\\?\\UNC\\server\\share\\file   => file`\n  * `\\\\?\\device\\folder\\file.exe  => folder\\file.exe`\n  * `\\\\server\\share\\file         => file`\n  * `\\                           => \"\"`\n"},{"p":["FilePath","ComponentView","replaceSubrange(_:with:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["replaceSubrange",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["subrange",2],[": ",17],["Range",18,430],["<",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[">, ",17],["with",1],[" ",17],["newElements",2],[": ",17],["C",18],[") ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,352],[", ",17],["C",18],[".",17],["Element",18],[" == ",17],["FilePath",18,19],[".",17],["Component",18,23]],"s":[["func",12],[" ",17],["replaceSubrange",7],["<",17],["C",0],[">(",17],["Range",18],["<",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[">, ",17],["with",1],[": ",17],["C",18],[")",17]],"c":[["C",1,"Collection",352],["C.Element",2,"FilePath.Component",23]],"g":[["C",0,0]]},{"p":["FilePath","ComponentView","index(after:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["after",1],[" ",17],["i",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[") -> ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21]],"s":[["func",12],[" ",17],["index",7],["(",17],["after",1],[": ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[") -> ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18]]},{"p":["FilePath","ComponentView","index(before:)"],"f":[["func",12],[" ",17],["index",7],["(",17],["before",1],[" ",17],["i",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[") -> ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21]],"s":[["func",12],[" ",17],["index",7],["(",17],["before",1],[": ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[") -> ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18]]},{"p":["FilePath","reserveCapacity(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["reserveCapacity",7],["(",17],["_",1],[" ",17],["minimumCapacity",2],[": ",17],["Int",18,351],[")",17]],"s":[["func",12],[" ",17],["reserveCapacity",7],["(",17],["Int",18],[")",17]],"d":"Reserve enough storage space to store `minimumCapacity` platform\ncharacters."},{"p":["FilePath","lexicallyNormalize()"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["lexicallyNormalize",7],["()",17]],"s":[["func",12],[" ",17],["lexicallyNormalize",7],["()",17]],"d":"Collapse `.` and `..` components lexically (i.e. without following\nsymlinks).\n\nExamples:\n* `/usr/./local/bin/.. => /usr/local`\n* `/../usr/local/bin   => /usr/local/bin`\n* `../usr/local/../bin => ../usr/bin`"},{"p":["FilePath","lexicallyResolving(_:)"],"f":[["func",12],[" ",17],["lexicallyResolving",7],["(",17],["_",1],[" ",17],["subpath",2],[": ",17],["FilePath",18,19],[") -> ",17],["FilePath",18,19],["?",17]],"s":[["func",12],[" ",17],["lexicallyResolving",7],["(",17],["FilePath",18],[") -> ",17],["FilePath",18],["?",17]],"d":"Create a new `FilePath` by resolving `subpath` relative to `self`,\nensuring that the result is lexically contained within `self`.\n\n`subpath` will be lexically normalized (see `lexicallyNormalize`) as\npart of resolution, meaning any contained `.` and `..` components will\nbe collapsed without resolving symlinks. Any root in `subpath` will be\nignored.\n\nReturns `nil` if the result would \"escape\" from `self` through use of\nthe special directory component `..`.\n\nThis is useful for protecting against arbitrary path traversal from an\nuntrusted subpath: the result is guaranteed to be lexically contained\nwithin `self`. Since this operation does not consult the file system to\nresolve symlinks, any escaping symlinks nested inside of `self` can still\nbe targeted by the result.\n\nExample:\n\n    let staticContent: FilePath = \"/var/www/my-website/static\"\n    let links: [FilePath] =\n      [\"index.html\", \"/assets/main.css\", \"../../../../etc/passwd\"]\n    links.map { staticContent.lexicallyResolving($0) }\n      // [\"/var/www/my-website/static/index.html\",\n      //  \"/var/www/my-website/static/assets/main.css\",\n      //  nil]"},{"p":["FilePath","withPlatformString(_:)"],"f":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">(",17],["_",1],[" ",17],["body",2],[": (",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"s":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">((",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"g":[["Result",0,0]],"d":"Calls the given closure with a pointer to the contents of the file path,\nrepresented as a null-terminated platform string.\n\n- Parameter body: A closure with a pointer parameter\n  that points to a null-terminated platform string.\n  If `body` has a return value,\n  that value is also used as the return value for this method.\n- Returns: The return value, if any, of the `body` closure parameter.\n\nThe pointer passed as an argument to `body` is valid\nonly during the execution of this method.\nDon't try to store the pointer for later use."},{"p":["FilePath","lexicallyNormalized()"],"f":[["func",12],[" ",17],["lexicallyNormalized",7],["() -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["lexicallyNormalized",7],["() -> ",17],["FilePath",18]],"d":"Returns a copy of `self` in lexical-normal form, that is `.` and `..`\ncomponents have been collapsed lexically (i.e. without following\nsymlinks). See `lexicallyNormalize`"},{"p":["FilePath","removeLastComponent()"],"f":[["@discardableResult",3],[" ",17],["mutating",12],[" ",17],["func",12],[" ",17],["removeLastComponent",7],["() -> ",17],["Bool",18,348]],"s":[["func",12],[" ",17],["removeLastComponent",7],["() -> ",17],["Bool",18]],"d":"In-place mutating variant of `removingLastComponent`.\n\nIf `self` only contains a root, does nothing and returns `false`.\nOtherwise removes `lastComponent` and returns `true`.\n\nExample:\n\n    var path = \"/usr/bin\"\n    path.removeLastComponent() == true  // path is \"/usr\"\n    path.removeLastComponent() == true  // path is \"/\"\n    path.removeLastComponent() == false // path is \"/\"\n"},{"p":["FilePath","removingLastComponent()"],"f":[["func",12],[" ",17],["removingLastComponent",7],["() -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["removingLastComponent",7],["() -> ",17],["FilePath",18]],"d":"Creates a new path with everything up to but not including\n`lastComponent`.\n\nIf the path only contains a root, returns `self`.\nIf the path has no root and only includes a single component,\nreturns an empty FilePath.\n\nExamples:\n* Unix:\n  * `/usr/bin/ls => /usr/bin`\n  * `/foo        => /`\n  * `/           => /`\n  * `foo         => \"\"`\n* Windows:\n  * `C:\\foo\\bar.exe                 => C:\\foo`\n  * `C:\\                            => C:\\`\n  * `\\\\server\\share\\folder\\file.txt => \\\\server\\share\\folder`\n  * `\\\\server\\share\\                => \\\\server\\share\\`"},{"p":["FilePath","Root","withPlatformString(_:)"],"f":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">(",17],["_",1],[" ",17],["body",2],[": (",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"s":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">((",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"g":[["Result",0,0]],"d":"Calls the given closure with a pointer to the contents of the file path\nroot, represented as a null-terminated platform string.\n\nIf the path has a relative portion, an allocation will occur in order to\nadd the null terminator.\n\n- Parameter body: A closure with a pointer parameter\n  that points to a null-terminated platform string.\n  If `body` has a return value,\n  that value is also used as the return value for this method.\n- Returns: The return value, if any, of the `body` closure parameter.\n\nThe pointer passed as an argument to `body` is valid\nonly during the execution of this method.\nDon't try to store the pointer for later use."},{"p":["FilePath","ends(with:)"],"f":[["func",12],[" ",17],["ends",7],["(",17],["with",1],[" ",17],["other",2],[": ",17],["FilePath",18,19],[") -> ",17],["Bool",18,348]],"s":[["func",12],[" ",17],["ends",7],["(",17],["with",1],[": ",17],["FilePath",18],[") -> ",17],["Bool",18]]},{"p":["FilePath","push(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["push",7],["(",17],["_",1],[" ",17],["other",2],[": ",17],["FilePath",18,19],[")",17]],"s":[["func",12],[" ",17],["push",7],["(",17],["FilePath",18],[")",17]]},{"p":["FilePath","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["(",17],["_",1],[" ",17],["component",2],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],[")",17]],"s":[["func",12],[" ",17],["append",7],["(",17],["FilePath",18],[".",17],["Component",18],[")",17]]},{"p":["FilePath","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["(",17],["_",1],[" ",17],["other",2],[": ",17],["String",18,306],[")",17]],"s":[["func",12],[" ",17],["append",7],["(",17],["String",18],[")",17]]},{"p":["FilePath","append(_:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["append",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["components",2],[": ",17],["C",18],[") ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,352],[", ",17],["C",18],[".",17],["Element",18],[" == ",17],["FilePath",18,19],[".",17],["Component",18,23]],"s":[["func",12],[" ",17],["append",7],["<",17],["C",0],[">(",17],["C",18],[")",17]],"c":[["C",1,"Collection",352],["C.Element",2,"FilePath.Component",23]],"g":[["C",0,0]]},{"p":["FilePath","starts(with:)"],"f":[["func",12],[" ",17],["starts",7],["(",17],["with",1],[" ",17],["other",2],[": ",17],["FilePath",18,19],[") -> ",17],["Bool",18,348]],"s":[["func",12],[" ",17],["starts",7],["(",17],["with",1],[": ",17],["FilePath",18],[") -> ",17],["Bool",18]]},{"p":["FilePath","pushing(_:)"],"f":[["func",12],[" ",17],["pushing",7],["(",17],["_",1],[" ",17],["other",2],[": ",17],["FilePath",18,19],[") -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["pushing",7],["(",17],["FilePath",18],[") -> ",17],["FilePath",18]]},{"p":["FilePath","Component","withPlatformString(_:)"],"f":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">(",17],["_",1],[" ",17],["body",2],[": (",17],["UnsafePointer",18,303],["<",17],["CInterop",18,11],[".",17],["PlatformChar",18,265],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"s":[["func",12],[" ",17],["withPlatformString",7],["<",17],["Result",0],[">((",17],["UnsafePointer",18],["<",17],["CInterop",18],[".",17],["PlatformChar",18],[">) ",17],["throws",12],[" -> ",17],["Result",18],[") ",17],["rethrows",12],[" -> ",17],["Result",18]],"g":[["Result",0,0]],"d":"Calls the given closure with a pointer to the contents of the file path\ncomponent, represented as a null-terminated platform string.\n\nIf this is not the last component of a path, an allocation will occur in\norder to add the null terminator.\n\n- Parameter body: A closure with a pointer parameter\n  that points to a null-terminated platform string.\n  If `body` has a return value,\n  that value is also used as the return value for this method.\n- Returns: The return value, if any, of the `body` closure parameter.\n\nThe pointer passed as an argument to `body` is valid\nonly during the execution of this method.\nDon't try to store the pointer for later use."},{"p":["FilePath","appending(_:)"],"f":[["func",12],[" ",17],["appending",7],["(",17],["_",1],[" ",17],["other",2],[": ",17],["FilePath",18,19],[".",17],["Component",18,23],[") -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["appending",7],["(",17],["FilePath",18],[".",17],["Component",18],[") -> ",17],["FilePath",18]]},{"p":["FilePath","appending(_:)"],"f":[["func",12],[" ",17],["appending",7],["(",17],["_",1],[" ",17],["other",2],[": ",17],["String",18,306],[") -> ",17],["FilePath",18,19]],"s":[["func",12],[" ",17],["appending",7],["(",17],["String",18],[") -> ",17],["FilePath",18]]},{"p":["FilePath","appending(_:)"],"f":[["func",12],[" ",17],["appending",7],["<",17],["C",0],[">(",17],["_",1],[" ",17],["components",2],[": ",17],["C",18],[") -> ",17],["FilePath",18,19],[" ",17],["where",12],[" ",17],["C",18],[" : ",17],["Collection",18,352],[", ",17],["C",18],[".",17],["Element",18],[" == ",17],["FilePath",18,19],[".",17],["Component",18,23]],"s":[["func",12],[" ",17],["appending",7],["<",17],["C",0],[">(",17],["C",18],[") -> ",17],["FilePath",18]],"c":[["C",1,"Collection",352],["C.Element",2,"FilePath.Component",23]],"g":[["C",0,0]]},{"p":["FilePath","removeAll(keepingCapacity:)"],"f":[["mutating",12],[" ",17],["func",12],[" ",17],["removeAll",7],["(",17],["keepingCapacity",1],[": ",17],["Bool",18,348],[" = false)",17]],"s":[["func",12],[" ",17],["removeAll",7],["(",17],["keepingCapacity",1],[": ",17],["Bool",18],[")",17]],"d":"Remove the contents of the path, keeping the null terminator."},{"p":["Errno","~=(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["~=",7],[" ",17],["(",17],["lhs",2],[": ",17],["Errno",18,18],[", ",17],["rhs",2],[": ",17],["Error",18,460],[") -> ",17],["Bool",18,348]],"s":[["static",12],[" ",17],["func",12],[" ",17],["~=",7],[" ",17],["(",17],["Errno",18],[", ",17],["Error",18],[") -> ",17],["Bool",18]]},{"p":["FilePath","ComponentView","Index","<(_:_:)"],"f":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["lhs",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[", ",17],["rhs",2],[": ",17],["FilePath",18,19],[".",17],["ComponentView",18,20],[".",17],["Index",18,21],[") -> ",17],["Bool",18,348]],"s":[["static",12],[" ",17],["func",12],[" ",17],["<",7],[" ",17],["(",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[", ",17],["FilePath",18],[".",17],["ComponentView",18],[".",17],["Index",18],[") -> ",17],["Bool",18]]},{"p":["CModeT"],"f":[["typealias",12],[" ",17],["CModeT",7],[" = ",17],["CInterop",18,11],[".",17],["Mode",18,268]],"s":[["typealias",12],[" ",17],["CModeT",7]],"a":{"a":{"d":true,"r":"CInterop.Mode"}}},{"p":["CInterop","PlatformChar"],"f":[["typealias",12],[" ",17],["PlatformChar",7],[" = ",17],["CInterop",18,11],[".",17],["Char",18,267]],"s":[["typealias",12],[" ",17],["PlatformChar",7]],"d":"The platform's preferred character type. On Unix, this is an 8-bit C\n`char` (which may be signed or unsigned, depending on platform). On\nWindows, this is `UInt16` (a \"wide\" character)."},{"p":["CInterop","PlatformUnicodeEncoding"],"f":[["typealias",12],[" ",17],["PlatformUnicodeEncoding",7],[" = ",17],["UTF8",18,458]],"s":[["typealias",12],[" ",17],["PlatformUnicodeEncoding",7]],"d":"The platform's preferred Unicode encoding. On Unix this is UTF-8 and on\nWindows it is UTF-16. Native strings may contain invalid Unicode,\nwhich will be handled by either error-correction or failing, depending\non API."},{"p":["CInterop","Char"],"f":[["typealias",12],[" ",17],["Char",7],[" = ",17],["CChar",18,459]],"s":[["typealias",12],[" ",17],["Char",7]],"d":"The C `char` type"},{"p":["CInterop","Mode"],"f":[["typealias",12],[" ",17],["Mode",7],[" = ",17],["mode_t",18,270]],"s":[["typealias",12],[" ",17],["Mode",7]]},{"p":["FilePath","ComponentView","Element"],"f":[["typealias",12],[" ",17],["Element",7],[" = ",17],["FilePath",18,19],[".",17],["Component",18,23]],"s":[["typealias",12],[" ",17],["Element",7]]}],"edges":{"conformer":[12,273,[],12,304,[],13,272,[],13,273,[],13,304,[],13,339,[],13,349,[],13,464,[],14,272,[],14,273,[],14,304,[],14,339,[],14,349,[],14,443,[],14,450,[],14,464,[],15,272,[],15,273,[],15,304,[],15,339,[],15,349,[],15,443,[],15,450,[],15,464,[],16,272,[],16,273,[],16,304,[],16,339,[],16,349,[],16,432,[],16,443,[],16,446,[],16,450,[],16,464,[],16,465,[],17,272,[],17,273,[],17,304,[],17,339,[],17,349,[],17,432,[],17,443,[],17,446,[],17,450,[],17,464,[],17,465,[],18,272,[],18,273,[],18,304,[],18,339,[],18,349,[],18,443,[],18,450,[],18,460,[],18,464,[],19,272,[],19,273,[],19,304,[],19,349,[],19,443,[],19,447,[],19,450,[],19,452,[],19,454,[],20,272,[],20,273,[],20,274,[],20,304,[],20,307,[],20,349,[],20,352,[],20,397,[],21,273,[],21,293,[],21,304,[],22,272,[],22,273,[],22,304,[],22,349,[],22,443,[],22,447,[],22,450,[],22,452,[],22,454,[],23,272,[],23,273,[],23,304,[],23,349,[],23,443,[],23,447,[],23,450,[],23,452,[],23,454,[]],"feature":[275,20,276,20,280,20,281,20,282,20,283,20,284,20,285,20,286,20,287,20,288,20,289,20,290,20,291,20,292,20,295,21,296,21,297,21,298,21,299,21,300,21,301,21,302,21,305,12,305,13,305,14,305,15,305,16,305,17,305,18,305,19,305,20,305,21,305,22,305,23,308,20,309,20,310,20,313,20,314,20,315,20,316,20,317,20,318,20,319,20,320,20,321,20,322,20,323,20,324,20,325,20,326,20,327,20,328,20,329,20,330,20,331,20,332,20,333,20,334,20,335,20,336,20,337,20,342,13,342,14,342,15,342,16,342,18,343,17,344,13,344,14,344,15,344,16,344,17,344,18,345,13,345,14,345,15,345,16,345,17,345,18,346,13,346,14,346,15,346,16,346,18,347,17,354,20,355,20,356,20,357,20,358,20,359,20,360,20,361,20,362,20,363,20,364,20,365,20,366,20,369,20,370,20,371,20,372,20,373,20,374,20,375,20,376,20,377,20,378,20,379,20,380,20,381,20,382,20,383,20,384,20,385,20,386,20,387,20,388,20,389,20,390,20,391,20,392,20,393,20,394,20,395,20,399,20,400,20,401,20,402,20,403,20,404,20,405,20,406,20,407,20,408,20,409,20,410,20,411,20,412,20,413,20,414,20,415,20,416,20,417,20,418,20,419,20,420,20,421,20,422,20,423,20,424,20,425,20,426,20,427,20,428,20,433,16,433,17,434,16,434,17,435,16,435,17,436,16,436,17,437,16,437,17,438,16,438,17,439,16,439,17,440,16,440,17,441,16,441,17,442,16,442,17,445,14,445,15,445,16,445,17,445,18,445,19,445,22,445,23,449,19,449,22,449,23,456,19,456,22,456,23,467,16,467,17,468,16,468,17,469,16,469,17,470,16,470,17,471,16,471,17,472,16,472,17,473,16,473,17,474,16,474,17,475,16,475,17,476,16,476,17,477,16,477,17],"member":[0,306,1,306,2,306,3,306,4,306,5,306,6,306,7,306,8,306,9,306,10,306,12,23,14,13,15,13,16,13,20,19,21,20,22,19,23,19,24,12,25,12,26,12,27,14,28,15,29,16,30,13,31,17,32,18,33,20,34,20,35,19,36,19,37,22,38,22,39,22,40,22,41,19,42,19,43,19,44,19,45,19,46,23,47,23,48,23,49,23,50,19,51,19,52,20,53,14,54,14,55,14,56,15,57,15,58,15,59,16,60,16,61,16,62,16,63,16,64,16,65,16,66,16,67,13,68,13,69,13,70,17,71,17,72,17,73,17,74,17,75,17,76,17,77,17,78,17,79,17,80,17,81,17,82,17,83,17,84,17,85,17,86,17,87,17,88,17,89,17,90,17,91,17,92,17,93,17,94,18,95,18,96,18,97,18,98,18,99,18,100,18,101,18,102,18,103,18,104,18,105,18,106,18,107,18,108,18,109,18,110,18,111,18,112,18,113,18,114,18,115,18,116,18,117,18,118,18,119,18,120,18,121,18,122,18,123,18,124,18,125,18,126,18,127,18,128,18,129,18,130,18,131,18,132,18,133,18,134,18,135,18,136,18,137,18,138,18,139,18,140,18,141,18,142,18,143,18,144,18,145,18,146,18,147,18,148,18,149,18,150,18,151,18,152,18,153,18,154,18,155,18,156,18,157,18,158,18,159,18,160,18,161,18,162,18,163,18,164,18,165,18,166,18,167,18,168,18,169,18,170,18,171,18,172,18,173,18,174,18,175,18,176,18,177,18,178,18,179,18,180,18,181,18,182,18,183,14,184,14,185,14,186,15,187,15,188,15,189,16,190,16,191,16,192,13,193,17,194,17,195,17,196,18,197,18,198,18,199,19,200,19,201,19,202,19,203,20,204,20,205,19,206,19,207,19,208,22,209,22,210,22,211,19,212,19,213,19,214,19,215,19,216,23,217,23,218,23,219,23,220,23,221,23,222,19,223,13,224,13,225,13,226,13,227,13,228,13,229,13,230,13,231,13,232,13,233,13,234,13,235,13,236,19,237,19,238,19,239,20,240,20,241,20,242,19,243,19,244,19,245,19,246,19,247,19,248,19,249,22,250,19,251,19,252,19,253,19,254,19,255,19,256,19,257,23,258,19,259,19,260,19,261,19,262,18,263,21,265,11,266,11,267,11,268,11,269,20]},"hints":[21,367,27,341,28,341,29,466,30,341,31,466,32,341,33,350,34,429,35,448,37,448,39,350,41,350,46,448,48,350,52,396,183,444,184,451,185,340,186,444,187,451,188,340,189,444,190,451,191,340,192,340,193,444,194,451,195,340,196,444,197,451,198,340,202,444,203,353,204,368,206,451,208,444,209,451,216,444,217,451,239,398,240,277,241,278,263,294,269,312,275,275,276,276,280,280,281,281,282,282,283,283,284,284,285,285,286,286,287,287,288,288,289,279,290,290,291,291,292,292,295,295,296,296,297,297,298,298,299,299,300,300,301,301,302,302,305,305,308,308,309,309,310,310,313,313,314,314,315,315,316,316,317,317,318,318,319,311,320,320,321,321,322,322,323,323,324,324,325,325,326,326,327,327,328,328,329,329,330,330,331,331,332,332,333,333,334,334,335,335,336,336,337,337,342,342,343,343,344,344,345,345,346,346,347,347,354,354,355,355,356,356,357,357,358,358,359,359,360,360,361,361,362,362,363,363,364,364,365,365,366,366,369,369,370,370,371,371,372,372,373,373,374,374,375,375,376,376,377,377,378,378,379,379,380,380,381,381,382,382,383,383,384,384,385,385,386,386,387,387,388,388,389,389,390,390,391,391,392,392,393,393,394,394,395,395,399,399,400,400,401,401,402,402,403,403,404,404,405,405,406,406,407,407,408,398,409,409,410,410,411,411,412,412,413,413,414,414,415,415,416,416,417,417,418,418,419,419,420,420,421,421,422,422,423,423,424,424,425,425,426,426,427,427,428,428,433,433,434,434,435,435,436,436,437,437,438,438,439,439,440,440,441,441,442,442,445,445,449,455,456,453,467,467,468,468,469,469,470,470,471,471,472,472,473,473,474,474,475,475,476,476,477,477],"sourcemap":[{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/Errno.swift","symbols":[13,14,18,16,13,198,20,9,32,43,20,114,56,20,159,68,20,122,83,20,105,98,20,170,113,20,158,127,20,125,141,20,134,156,20,140,170,20,127,183,20,175,200,20,177,213,20,138,225,20,96,238,20,128,252,20,116,265,20,99,277,20,111,290,20,166,304,20,113,317,20,106,330,20,136,345,20,95,358,20,139,373,20,165,388,20,117,403,20,110,420,20,172,432,20,104,445,20,94,458,20,118,471,20,98,484,20,108,499,20,102,513,20,167,528,20,123,541,20,137,551,20,181,563,20,131,576,20,126,591,20,164,604,20,156,617,20,157,630,20,160,643,20,115,656,20,163,670,20,161,682,20,109,695,20,152,707,20,107,719,20,149,731,20,112,743,20,132,757,20,133,771,20,120,786,20,147,801,20,150,815,20,130,830,20,179,845,20,141,857,20,162,870,20,135,882,20,100,894,20,121,907,20,142,931,20,119,948,20,143,963,20,151,1043,20,171,1055,20,101,1137,20,178,1201,20,174,1214,20,144,1227,20,180,1242,20,153,1270,20,97,1282,20,176,1294,20,168,1306,20,169,1318,20,145,1330,20,182,1344,20,124,1356,20,173,1370,20,155,1385,20,103,1395,20,148,1405,20,154,1428,20,129,1438,20,146,1501,13,196,1511,13,197,1517,21,262]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FileDescriptor.swift","symbols":[17,14,13,20,13,192,24,9,30,31,20,68,35,20,69,39,20,67,46,16,14,49,15,185,53,11,27,59,22,53,69,22,55,79,22,54,88,16,16,91,15,191,95,11,29,116,22,60,132,22,62,142,22,63,156,22,65,178,22,61,231,22,64,245,22,66,302,22,59,312,16,15,315,15,188,319,11,28,325,22,57,336,22,58,347,22,56,393,13,183,403,13,184,412,13,186,426,13,187,435,13,189,473,13,190]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FileHelpers.swift","symbols":[22,14,226,56,14,234,98,14,233]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FileOperations.swift","symbols":[26,21,224,54,21,223,94,14,230,112,14,229,156,14,228,192,14,227,245,14,232,278,14,231,340,14,235,381,21,225]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePath/FilePath.swift","symbols":[43,14,19,47,9,50,65,13,213]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePath/FilePathComponentView.swift","symbols":[31,16,20,44,13,199,93,19,269,94,16,21,99,23,263,108,13,203,109,13,204,111,14,240,115,14,241,119,9,52,127,9,34,137,23,239,178,9,44,187,9,42,193,9,43]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePath/FilePathComponents.swift","symbols":[30,16,22,57,16,23,81,14,12,83,9,25,86,9,24,89,9,26,93,13,218]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePath/FilePathString.swift","symbols":[18,9,36,35,14,245,58,9,47,77,14,257,94,9,38,113,14,249,128,9,35,136,9,51,147,9,46,161,9,49,171,9,37,184,9,40,198,13,202,204,13,206,215,13,216,221,13,217,232,13,208,238,13,209,250,13,214,261,13,220,273,13,210,293,9,8,305,9,2,323,9,7,335,9,1,355,9,6,369,9,0,396,9,9,399,9,4,407,9,45,413,14,236]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePath/FilePathSyntax.swift","symbols":[38,13,200,52,13,201,68,14,255,88,14,250,99,13,215,148,13,211,181,26,238,212,13,205,232,26,248,251,23,247,274,13,221,288,13,219,325,13,222,356,13,212,370,13,207,388,23,243,396,26,246,428,26,244,454,23,237,476,23,252,491,23,254,513,23,253,527,26,258,536,26,260,547,26,259,569,23,251,582,26,256,589,23,261,596,23,242]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/FilePermissions.swift","symbols":[20,14,17,23,13,195,27,9,31,34,20,91,38,20,71,42,20,75,46,20,78,50,20,81,54,20,84,58,20,87,62,20,90,66,20,70,70,20,74,74,20,77,78,20,80,82,20,83,86,20,86,90,20,92,94,20,72,98,20,76,102,20,79,106,20,82,110,20,85,114,20,88,120,20,93,126,20,73,134,20,89,143,13,193,175,13,194]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/Internals/CInterop.swift","symbols":[14,17,264,30,12,11,34,19,268,38,19,267,49,19,265,63,19,266]},{"uri":"file:///workspaces/swiftinit.org/ecosystem/packages/.builds/swift-system@1.1.0/.build/checkouts/swift-system/Sources/System/PlatformString.swift","symbols":[22,9,3,34,9,5,52,14,10]}]}